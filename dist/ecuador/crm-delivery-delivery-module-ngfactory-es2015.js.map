{"version":3,"sources":["./src/app/pages/layout/crm/delivery/delivery-routing.module.ts","./src/app/pages/layout/crm/delivery/delivery.component.html","./src/app/pages/layout/crm/delivery/delivery.component.ts","./src/app/pages/layout/crm/delivery/delivery.module.ts"],"names":[],"mappings":"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","file":"crm-delivery-delivery-module-ngfactory-es2015.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DeliveryComponent } from './delivery.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DeliveryComponent,\n        children: [\n            //{ path: 'edit', loadChildren: () => import('./edit/edit.module').then(m => m.EditModule) }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DeliveryRoutingModule { }\n","<div class=\"ui-g\">\n    <div class=\"ui-g-12\">\n        <div class=\"card no-margin\">\n            <h1>Lista de Empresas de Carga</h1>\n            <p-toast></p-toast>\n            <p-toolbar>\n                <div class=\"p-toolbar-group-left\">\n                    <button pButton label=\"Nuevo\" icon=\"pi pi-plus\" class=\"ui-button-success\"\n                        (click)=\"addDelivery()\"></button>\n                </div>\n            </p-toolbar>\n\n            <p-table #dt [value]=\"deliveries\" [paginator]=\"true\" [rows]=\"10\"\n                [showCurrentPageReport]=\"true\" class=\"p-datatable-responsive-demo\" [loading]=\"loading\" [lazy]=\"true\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[10,25,50,100]\" selectionMode=\"single\">\n\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"table-header\">\n                        {{'Lista de Empresas de Carga' | translate}}\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\" let-columns>\n                    <tr>\n                        <th> {{'Nombre' | translate}}</th>\n                        <th> {{'Teléfono' | translate}}</th>\n                        <th> {{'País' | translate}}</th>\n                        <th> {{'Ciudad' | translate}}</th>\n                        <th> {{'Estado' | translate}}</th>\n                        <th style=\"width: 8em; text-align: center;\">\n                            <button pButton type=\"button\" icon=\"pi pi-cog\"></button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'nombres', 'startsWith')\"\n                                    placeholder=\"Search by Name\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'phone', 'startsWith')\"\n                                    placeholder=\"Search by Phone\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'pais', 'startsWith')\"\n                                    placeholder=\"Search by Country\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'ciudad', 'startsWith')\"\n                                    placeholder=\"Search by City\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'estado', 'startsWith')\"\n                                    placeholder=\"Search by State\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th style=\"width: 8em;\">\n\n                        </th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-delivery let-columns=\"columns\">\n                    <tr [pSelectableRow]=\"delivery\" [pEditableRow]=\"delivery\">\n                        <td>{{delivery.nombres}}</td>\n                        <td>{{delivery.phone}}</td>\n                        <td>{{delivery.pais}}</td>\n                        <td>{{delivery.ciudad}}</td>\n                        <td style=\"text-align: center;\">\n                            <div [class]=\"delivery.estado=='A'?'active-badge':'inactive-badge'\">\n                                <span>{{delivery.estado=='A'?'Activo':'Inactivo'}}</span>\n                            </div>\n                        </td>\n                        <td>\n                            <button pButton type=\"button\" class=\"ui-button-warning\" icon=\"pi pi-pencil\"\n                                (click)=\"edit(delivery)\"></button>\n                        </td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\">\n                    <tr>\n                        <td colspan=\"3\">No delivery found.</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n            <!--Table responsive-->\n            <div class=\"tbl_responsive\">\n                <p-accordion>\n                    <p-accordionTab header=\"Filtros de búsqueda\" [selected]=\"true\">\n                        <div class=\"ui-g form-group ui-fluid\">   \n                            <div class=\"ui-g-12 ui-md-4\">\n                                <label for=\"client\" class=\"lbl\">{{'Nombres' | translate}}</label>\n                                <input type=\"text\" pInputText [(ngModel)]=\"name\" placeholder=\"Nombre de empresa de carga\"\n                                    required pKeyFilter=\"int\" />\n                            </div>\n                            <div class=\"ui-g-12 ui-md-4\">\n                                <button pButton type=\"button\" [label]=\"'Consultar' | translate\" icon=\"fa fa-search\"\n                                    iconPos=\"left\" class=\"ui-button-success\" (click)=\"consultarMobile()\"></button>\n                            </div>\n                        </div>\n                    </p-accordionTab>\n                </p-accordion>                \n                <div *ngIf=\"deliveries.length <=0\" style=\"text-align: center;\">\n                    <br>\n                    <label class=\"messageData\">{{'Información no encontrada' | translate}}</label>\n                </div>\n                <div class=\"ui-grid ui-grid-responsive ui-fluid\" class=\"data\" *ngFor=\"let delivery of deliveries\">\n                    <div class=\"card card-w-title\">\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-12\">\n                                <button pButton type=\"button\" class=\"ui-button-info btn_card\" icon=\"pi pi-pencil\"\n                                    (click)=\"edit(delivery)\"></button>\n                            </div>\n                        </div>\n\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'Nombres' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\" style=\"word-break: break-all;\">{{delivery.nombres | titlecase}}</span></div>\n                        </div>\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'Teléfono' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\">{{delivery.phone}}</span></div>\n                        </div>\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'País' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\">{{delivery.pais}}</span></div>\n                        </div>\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'Ciudad' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\"\n                                    style=\"word-break: break-all;\">{{delivery.ciudad}}</span></div>\n                        </div>\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'Estado' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\"\n                                    [class]=\"delivery.estado=='A'?'active-badge':'inactive-badge'\">\n                                    {{delivery.estado=='A'?'Activo':'Inactivo'}}\n                                </span></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { delivery } from 'src/models/delivery';\nimport { ApisService } from 'src/services/apis.service';\nimport { MessageService } from 'primeng';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-delivery',\n  templateUrl: './delivery.component.html',\n  styleUrls: ['./delivery.component.css'],\n  providers: [TranslateService, MessageService],  \n})\nexport class DeliveryComponent implements OnInit {\n\n  deliveries: Array<delivery> = [];\n  name: string;\n  loading: boolean;\n\n  constructor(private api: ApisService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getDelivery();\n  }\n\n  getDelivery(){\n    this.loading=true;\n    this.api.getdeliveries(localStorage.getItem(\"token\")).then(data => {\n      console.log(data);\n      if (data.headerApp.code == 200) {\n        this.deliveries = data.data.cargocompanies;\n        this.loading=false;\n      }\n    }).catch(err => {\n      console.log(err);\n      this.loading=false;\n      if (err.error.code == 401) {\n        localStorage.clear();\n        this.router.navigate(['/login']);\n      }\n    })\n  }\n\n  addDelivery() {\n    console.log('Agregar la finca');\n    this.router.navigate(['/editDelivery']);\n  }\n\n  edit(delivery: delivery){\n    console.log('Editando delivery...');\n    console.log(delivery);\n    this.router.navigate(['/editDelivery'], { state: { delivery: JSON.stringify(delivery) } });\n    \n  }\n\n  consultarMobile(){\n    if (this.name == undefined || this.name == '') {\n      this.deliveries = [];\n      this.getDelivery();\n      return;\n    }\n\n    this.deliveries.filter(delivery => {\n      if (delivery.nombres.toLowerCase().indexOf(this.name.toLowerCase()) > -1) {\n        this.deliveries = [];\n        this.deliveries.push(delivery)\n      } \n    });\n    console.log('Deliveries finales');\n    console.log(this.deliveries);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditComponent } from './edit/edit.component';\nimport { TableModule, InputSwitchModule, ToastModule, MessagesModule, MessageModule, ToolbarModule, SelectButtonModule, InputTextModule, InputTextareaModule, ButtonModule, DropdownModule, AccordionModule } from 'primeng';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DeliveryRoutingModule } from './delivery-routing.module';\nimport { DeliveryComponent } from './delivery.component';\n\n\n\n@NgModule({\n  declarations: [DeliveryComponent],\n  imports: [\n    CommonModule,\n    DeliveryRoutingModule,\n    TableModule,\n    InputSwitchModule,\n    TranslateModule,\n    ToastModule,\n    MessagesModule,\n    MessageModule,\n    ToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SelectButtonModule,\n    InputTextModule,\n    InputTextareaModule,\n    ButtonModule,\n    DropdownModule,\n    AccordionModule\n  ]\n})\nexport class DeliveryModule { }\n"],"sourceRoot":"webpack:///"}