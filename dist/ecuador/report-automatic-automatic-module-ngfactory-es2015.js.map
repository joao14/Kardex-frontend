{"version":3,"sources":["./node_modules/primeng/api/primeng-api.d.ts.Header.html","./node_modules/primeng/api/primeng-api.d.ts.Footer.html","./node_modules/primeng/confirmdialog/primeng-confirmdialog.d.ts.ConfirmDialog.html","./src/app/pages/layout/report/automatic/automatic-routing.module.ts","./src/app/pages/layout/report/automatic/automatic.component.html","./src/app/pages/layout/report/automatic/automatic.component.ts","./src/app/pages/layout/report/automatic/automatic.module.ts"],"names":[],"mappings":"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","file":"report-automatic-automatic-module-ngfactory-es2015.js","sourcesContent":["<ng-content></ng-content>","<ng-content></ng-content>","\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\n            <div [ngClass]=\"{'ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow':true,'ui-dialog-rtl':rtl}\" [ngStyle]=\"style\" [class]=\"styleClass\" (mousedown)=\"moveOnTop()\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" *ngIf=\"visible\">\n                <div class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\">\n                    <span class=\"ui-dialog-title\" *ngIf=\"option('header')\">{{option('header')}}</span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                            <span class=\"pi pi-times\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class=\"ui-dialog-content ui-widget-content\">\n                    <i [ngClass]=\"'ui-confirmdialog-icon'\" [class]=\"option('icon')\" *ngIf=\"option('icon')\"></i>\n                    <span class=\"ui-confirmdialog-message\" [innerHTML]=\"option('message')\"></span>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footer\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"!footer\">\n                    <button type=\"button\" pButton [icon]=\"option('acceptIcon')\" [label]=\"option('acceptLabel')\" (click)=\"accept()\" [ngClass]=\"'ui-confirmdialog-acceptbutton'\" [class]=\"option('acceptButtonStyleClass')\" *ngIf=\"option('acceptVisible')\"></button>\n                    <button type=\"button\" pButton [icon]=\"option('rejectIcon')\" [label]=\"option('rejectLabel')\" (click)=\"reject()\" [ngClass]=\"'ui-confirmdialog-rejectbutton'\" [class]=\"option('rejectButtonStyleClass')\" *ngIf=\"option('rejectVisible')\"></button>\n                </div>\n            </div>\n        </div>\n    ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AutomaticComponent } from './automatic.component';\n\n\nconst routes: Routes = [\n    {\n        path: '', component: AutomaticComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AutomaticRoutingModule {}\n","<div class=\"ui-g\">\n    <div class=\"ui-g-12\">\n        <div class=\"card card-w-title\">\n            <p-toast></p-toast>\n            <h1>Carga de archivo automatico</h1>\n            <div class=\"uploadfilecontainer\" (click)=\"fileInput.click()\" appDragdrop *ngIf=\"files.length <= 0\"\n                (onFileDropped)=\"uploadListener($event)\">\n                <input hidden type=\"file\" #fileInput (change)=\"uploadListener($event)\" accept=\".csv\">\n            </div>\n            <div class=\"files-list\" *ngFor=\"let file of files;let i= index\">\n                <p> {{ file.name }} </p>\n                <button class=\"delete-file\" (click)=\"deleteAttachment(i)\">\n                    <img src=\"../../../../assets/images/recicler.jpeg\">\n                </button>\n            </div>\n            <p-table [value]=\"users\" class=\"p-datatable-responsive-demo\">\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"p-d-flex p-ai-center p-jc-between\">\n                        Usuarios cargados {{users.length}}\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th>Identificación</th>\n                        <th>Nombres</th>\n                        <th>Apellidos</th>\n                        <th>Celular</th>\n                        <th>Email</th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-rowData let-item>\n                    <tr style=\"background-color: white;\">\n                        <td><span class=\"p-column-title\">{{item.dni }}</span></td>\n                        <td><span class=\"p-column-title\">{{item.nombres}}</span></td>\n                        <td><span class=\"p-column-title\">{{item.apellidos }}</span></td>\n                        <td><span class=\"p-column-title\">{{item.celular }}</span></td>\n                        <td><span class=\"p-column-title\">{{item.email}}</span></td>\n                    </tr>\n                </ng-template>\n            </p-table>\n            <br>\n            <div class=\"ui-g form-group ui-fluid\">\n                <div class=\"ui-grid-col-10\"></div>\n                <div class=\"ui-grid-col-2\">\n                    <button pButton type=\"button\" icon=\"pi pi-upload\" class=\"ui-button-help btn_enviar\"\n                        [disabled]=\"files.length <= 0\" (click)=\"uploadfile()\" label=\"Subir\"></button>\n                </div>\n            </div>\n            <!--Confirmar cuadro de dialogo confirm-->\n            <p-confirmDialog #cd header=\"Confirmación\" icon=\"pi pi-exclamation-triangle\">\n                <p-footer>\n                    <button type=\"button\" pButton icon=\"pi pi-times\" class=\"ui-button-danger\" label=\"No\"\n                        (click)=\"cd.reject()\"></button>\n                    <button type=\"button\" pButton icon=\"pi pi-check\" class=\"ui-button-success\"\n                        label=\"Si\" (click)=\"cd.accept()\"></button>\n                </p-footer>\n            </p-confirmDialog>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MessageService, ConfirmationService } from 'primeng';\nimport * as moment from 'moment';\nimport { UtilService } from 'src/services/util.service';\nimport { ApisService } from 'src/services/apis.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\nexport interface user {\n  dni: string;\n  nombres: string;\n  apellidos: string;\n  fechregi: string;\n  celular: string;\n  photo: string;\n  email: string; \n  nick: string;\n  estado: string;\n}\n@Component({\n  selector: 'app-automatic',\n  templateUrl: './automatic.component.html',\n  styleUrls: ['./automatic.component.css'],\n  providers: [MessageService, ConfirmationService]\n})\nexport class AutomaticComponent implements OnInit {\n\n  users: Array<user> = [];\n  files: any = [];\n  @ViewChild('csvReader') csvReader: any;\n  public records: any[] = [];\n\n  constructor(private utilService: UtilService, private api: ApisService,\n    private router: Router, private confirmationService: ConfirmationService, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n\n  }\n\n\n\n  uploadListener($event: any): void {\n\n    let text = [];\n    let files = $event.srcElement.files;\n\n    if (this.isValidCSVFile(files[0])) {\n      this.files.push(files[0]);\n      let input = $event.target;\n      let reader = new FileReader();\n      reader.readAsText(input.files[0]);\n      this.utilService.isLoading.next(true);\n      reader.onload = async () => {\n        let csvData = reader.result;\n        let csvRecordsArray = (<string>csvData).split(/\\r\\n|\\n/);\n        let headersRow = await this.getHeaderArray(csvRecordsArray);\n        this.records = await this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length);\n      };\n      this.utilService.isLoading.next(false);\n      reader.onerror = function () {\n        console.log('error is occured while reading file!');\n      };\n\n    } else {\n      alert(\"Please import valid .csv file.\");\n      this.fileReset();\n    }\n  }\n\n  getDataRecordsArrayFromCSVFile(csvRecordsArray: any, headerLength: any) {\n    let csvArr = [];\n    for (let i = 1; i < csvRecordsArray.length; i++) {\n      console.log(csvRecordsArray[i]);\n      let data: any[] = (<string>csvRecordsArray[i]).split(';');\n      let user = {\n        dni: data[0],\n        nombres: data[1],\n        apellidos: data[2],\n        fechregi: this.getFormatDate(new Date()),\n        celular: data[3],\n        photo: null,\n        email: data[4],        \n        nick: data[5],\n        estado: \"-\"\n      }\n\n      this.users.push(user);\n    }\n\n    console.log('LISTA D EUSUARIOS');\n    console.log(this.users);\n    return csvArr;\n  }\n\n  isValidCSVFile(file: any) {\n    return file.name.endsWith(\".csv\");\n  }\n\n  getHeaderArray(csvRecordsArr: any) {\n    let headers = (<string>csvRecordsArr[0]).split(',');\n    let headerArray = [];\n    for (let j = 0; j < headers.length; j++) {\n      console.log('DATA');\n      console.log(headers[j]);\n\n      headerArray.push(headers[j]);\n    }\n    return headerArray;\n  }\n\n  fileReset() {\n    this.csvReader.nativeElement.value = \"\";\n    this.records = [];\n  }\n\n  uploadfile() {\n    console.log('Subiendo los archivos');\n    console.log(this.users); \n    this.confirmationService.confirm({\n      message: \"Está seguro de enviar la información?\",\n      accept: async () => {\n        this.spinner.show();\n        this.api.registerusers(this.users, localStorage.getItem(\"token\")).then(data => {\n          console.log(data);\n        }).catch(err => {\n          console.log('ERROR');\n          console.log(err);\n          if (err.error.code == 401) {\n            localStorage.clear();\n            this.router.navigate(['/login']);\n          }\n        })\n      },\n    });\n\n  }\n\n  deleteAttachment(index) {\n    this.files.splice(index, 1);\n    this.users = [];\n  }\n\n  getFormatDate(date: Date): string {\n    return (moment(date)).format('YYYY-MM-DD HH:mm:ss.SSS');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutomaticRoutingModule } from './automatic-routing.module';\nimport { AutomaticComponent } from './automatic.component';\nimport { ToastModule, TableModule, ButtonModule, DialogModule, ConfirmDialogModule } from 'primeng';\nimport { SharedModule } from 'src/app/shared.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n\n@NgModule({\n  declarations: [AutomaticComponent],\n  imports: [\n    CommonModule,\n    AutomaticRoutingModule,\n    ToastModule,\n    SharedModule,\n    NgxSpinnerModule,   \n    TableModule,\n    ButtonModule,\n    DialogModule,\n    ConfirmDialogModule\n  ]\n})  \nexport class AutomaticModule { }\n"],"sourceRoot":"webpack:///"}