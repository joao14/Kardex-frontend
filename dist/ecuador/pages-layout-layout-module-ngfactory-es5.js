function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-layout-layout-module-ngfactory"], {
  /***/
  "./node_modules/@angular/cdk/fesm2015/bidi.js":
  /*!****************************************************!*\
    !*** ./node_modules/@angular/cdk/fesm2015/bidi.js ***!
    \****************************************************/

  /*! exports provided: BidiModule, DIR_DOCUMENT, Dir, Directionality, ɵangular_material_src_cdk_bidi_bidi_a */

  /***/
  function node_modulesAngularCdkFesm2015BidiJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BidiModule", function () {
      return BidiModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DIR_DOCUMENT", function () {
      return DIR_DOCUMENT;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Dir", function () {
      return Dir;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Directionality", function () {
      return Directionality;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_bidi_bidi_a", function () {
      return DIR_DOCUMENT_FACTORY;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/bidi/dir-document-token.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Injection token used to inject the document into Directionality.
     * This is used so that the value can be faked in tests.
     *
     * We can't use the real document in tests because changing the real `dir` causes geometry-based
     * tests in Safari to fail.
     *
     * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests
     * themselves use things like `querySelector` in test code.
     *
     * This token is defined in a separate file from Directionality as a workaround for
     * https://github.com/angular/angular/issues/22559
     *
     * \@docs-private
     * @type {?}
     */


    var DIR_DOCUMENT = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('cdk-dir-doc', {
      providedIn: 'root',
      factory: DIR_DOCUMENT_FACTORY
    });
    /**
     * \@docs-private
     * @return {?}
     */

    function DIR_DOCUMENT_FACTORY() {
      return Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]);
    }
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/bidi/directionality.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * The directionality (LTR / RTL) context for the application (or a subtree of it).
     * Exposes the current direction and a stream of direction changes.
     */


    var Directionality =
    /*#__PURE__*/
    function () {
      /**
       * @param {?=} _document
       */
      function Directionality(_document) {
        _classCallCheck(this, Directionality);

        /**
         * The current 'ltr' or 'rtl' value.
         */
        this.value = 'ltr';
        /**
         * Stream that emits whenever the 'ltr' / 'rtl' state changes.
         */

        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

        if (_document) {
          // TODO: handle 'auto' value -
          // We still need to account for dir="auto".
          // It looks like HTMLElemenet.dir is also "auto" when that's set to the attribute,
          // but getComputedStyle return either "ltr" or "rtl". avoiding getComputedStyle for now

          /** @type {?} */
          var bodyDir = _document.body ? _document.body.dir : null;
          /** @type {?} */

          var htmlDir = _document.documentElement ? _document.documentElement.dir : null;
          /** @type {?} */

          var value = bodyDir || htmlDir;
          this.value = value === 'ltr' || value === 'rtl' ? value : 'ltr';
        }
      }
      /**
       * @return {?}
       */


      _createClass(Directionality, [{
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.change.complete();
        }
      }]);

      return Directionality;
    }();

    Directionality.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
      args: [{
        providedIn: 'root'
      }]
    }];
    /** @nocollapse */

    Directionality.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
          args: [DIR_DOCUMENT]
        }]
      }];
    };
    /** @nocollapse */


    Directionality.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({
      factory: function Directionality_Factory() {
        return new Directionality(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"])(DIR_DOCUMENT, 8));
      },
      token: Directionality,
      providedIn: "root"
    });

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/bidi/dir.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Directive to listen for changes of direction of part of the DOM.
     *
     * Provides itself as Directionality such that descendant directives only need to ever inject
     * Directionality to get the closest direction.
     */


    var Dir =
    /*#__PURE__*/
    function () {
      function Dir() {
        _classCallCheck(this, Dir);

        /**
         * Normalized direction that accounts for invalid/unsupported values.
         */
        this._dir = 'ltr';
        /**
         * Whether the `value` has been set to its initial value.
         */

        this._isInitialized = false;
        /**
         * Event emitted when the direction changes.
         */

        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }
      /**
       * \@docs-private
       * @return {?}
       */


      _createClass(Dir, [{
        key: "ngAfterContentInit",

        /**
         * Initialize once default value has been set.
         * @return {?}
         */
        value: function ngAfterContentInit() {
          this._isInitialized = true;
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.change.complete();
        }
      }, {
        key: "dir",
        get: function get() {
          return this._dir;
        }
        /**
         * @param {?} value
         * @return {?}
         */
        ,
        set: function set(value) {
          /** @type {?} */
          var old = this._dir;
          /** @type {?} */

          var normalizedValue = value ? value.toLowerCase() : value;
          this._rawDir = value;
          this._dir = normalizedValue === 'ltr' || normalizedValue === 'rtl' ? normalizedValue : 'ltr';

          if (old !== this._dir && this._isInitialized) {
            this.change.emit(this._dir);
          }
        }
        /**
         * Current layout direction of the element.
         * @return {?}
         */

      }, {
        key: "value",
        get: function get() {
          return this.dir;
        }
      }]);

      return Dir;
    }();

    Dir.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
      args: [{
        selector: '[dir]',
        providers: [{
          provide: Directionality,
          useExisting: Dir
        }],
        host: {
          '[attr.dir]': '_rawDir'
        },
        exportAs: 'dir'
      }]
    }];
    Dir.propDecorators = {
      change: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"],
        args: ['dirChange']
      }],
      dir: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }]
    };

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/bidi/bidi-module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    var BidiModule = function BidiModule() {
      _classCallCheck(this, BidiModule);
    };

    BidiModule.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
      args: [{
        exports: [Dir],
        declarations: [Dir]
      }]
    }];
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/bidi/public-api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=bidi.js.map

    /***/
  },

  /***/
  "./node_modules/@angular/cdk/fesm2015/coercion.js":
  /*!********************************************************!*\
    !*** ./node_modules/@angular/cdk/fesm2015/coercion.js ***!
    \********************************************************/

  /*! exports provided: _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty */

  /***/
  function node_modulesAngularCdkFesm2015CoercionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "_isNumberValue", function () {
      return _isNumberValue;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "coerceArray", function () {
      return coerceArray;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "coerceBooleanProperty", function () {
      return coerceBooleanProperty;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "coerceCssPixelValue", function () {
      return coerceCssPixelValue;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "coerceElement", function () {
      return coerceElement;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "coerceNumberProperty", function () {
      return coerceNumberProperty;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /** Coerces a data-bound value (typically a string) to a boolean. */


    function coerceBooleanProperty(value) {
      return value != null && "".concat(value) !== 'false';
    }
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */


    function coerceNumberProperty(value) {
      var fallbackValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      return _isNumberValue(value) ? Number(value) : fallbackValue;
    }
    /**
     * Whether the provided value is considered a number.
     * @docs-private
     */


    function _isNumberValue(value) {
      // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,
      // and other non-number values as NaN, where Number just uses 0) but it considers the string
      // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.
      return !isNaN(parseFloat(value)) && !isNaN(Number(value));
    }
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */


    function coerceArray(value) {
      return Array.isArray(value) ? value : [value];
    }
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /** Coerces a value to a CSS pixel value. */


    function coerceCssPixelValue(value) {
      if (value == null) {
        return '';
      }

      return typeof value === 'string' ? value : "".concat(value, "px");
    }
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /**
     * Coerces an ElementRef or an Element into an element.
     * Useful for APIs that can accept either a ref or the native element itself.
     */


    function coerceElement(elementOrRef) {
      return elementOrRef instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] ? elementOrRef.nativeElement : elementOrRef;
    }
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    //# sourceMappingURL=coercion.js.map

    /***/

  },

  /***/
  "./node_modules/@angular/cdk/fesm2015/collections.js":
  /*!***********************************************************!*\
    !*** ./node_modules/@angular/cdk/fesm2015/collections.js ***!
    \***********************************************************/

  /*! exports provided: ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource */

  /***/
  function node_modulesAngularCdkFesm2015CollectionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ArrayDataSource", function () {
      return ArrayDataSource;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DataSource", function () {
      return DataSource;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SelectionModel", function () {
      return SelectionModel;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UniqueSelectionDispatcher", function () {
      return UniqueSelectionDispatcher;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getMultipleValuesInSingleSelectionError", function () {
      return getMultipleValuesInSingleSelectionError;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isDataSource", function () {
      return isDataSource;
    });
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/collections/data-source.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /**
     * @abstract
     * @template T
     */


    var DataSource = function DataSource() {
      _classCallCheck(this, DataSource);
    };

    if (false) {}
    /**
     * Checks whether an object is a data source.
     * @param {?} value
     * @return {?}
     */


    function isDataSource(value) {
      // Check if the value is a DataSource by observing if it has a connect function. Cannot
      // be checked as an `instanceof DataSource` since people could create their own sources
      // that match the interface, but don't extend DataSource.
      return value && typeof value.connect === 'function';
    }
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/collections/array-data-source.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * DataSource wrapper for a native array.
     * @template T
     */


    var ArrayDataSource =
    /*#__PURE__*/
    function (_DataSource) {
      _inherits(ArrayDataSource, _DataSource);

      var _super2 = _createSuper(ArrayDataSource);

      /**
       * @param {?} _data
       */
      function ArrayDataSource(_data) {
        var _this2;

        _classCallCheck(this, ArrayDataSource);

        _this2 = _super2.call(this);
        _this2._data = _data;
        return _this2;
      }
      /**
       * @return {?}
       */


      _createClass(ArrayDataSource, [{
        key: "connect",
        value: function connect() {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["isObservable"])(this._data) ? this._data : Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(this._data);
        }
        /**
         * @return {?}
         */

      }, {
        key: "disconnect",
        value: function disconnect() {}
      }]);

      return ArrayDataSource;
    }(DataSource);

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/collections/collection-viewer.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /**
     * Interface for any component that provides a view of some data collection and wants to provide
     * information regarding the view and any changes made.
     * @record
     */


    function CollectionViewer() {}

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/collections/selection-model.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Class to be used to power selecting one or more options from a list.
     * @template T
     */


    var SelectionModel =
    /*#__PURE__*/
    function () {
      /**
       * @param {?=} _multiple
       * @param {?=} initiallySelectedValues
       * @param {?=} _emitChanges
       */
      function SelectionModel() {
        var _this3 = this;

        var _multiple = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        var initiallySelectedValues = arguments.length > 1 ? arguments[1] : undefined;

        var _emitChanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

        _classCallCheck(this, SelectionModel);

        this._multiple = _multiple;
        this._emitChanges = _emitChanges;
        /**
         * Currently-selected values.
         */

        this._selection = new Set();
        /**
         * Keeps track of the deselected options that haven't been emitted by the change event.
         */

        this._deselectedToEmit = [];
        /**
         * Keeps track of the selected options that haven't been emitted by the change event.
         */

        this._selectedToEmit = [];
        /**
         * Event emitted when the value has changed.
         */

        this.changed = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();

        if (initiallySelectedValues && initiallySelectedValues.length) {
          if (_multiple) {
            initiallySelectedValues.forEach(
            /**
            * @param {?} value
            * @return {?}
            */
            function (value) {
              return _this3._markSelected(value);
            });
          } else {
            this._markSelected(initiallySelectedValues[0]);
          } // Clear the array in order to avoid firing the change event for preselected values.


          this._selectedToEmit.length = 0;
        }
      }
      /**
       * Selected values.
       * @return {?}
       */


      _createClass(SelectionModel, [{
        key: "select",

        /**
         * Selects a value or an array of values.
         * @param {...?} values
         * @return {?}
         */
        value: function select() {
          var _this4 = this;

          for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
            values[_key] = arguments[_key];
          }

          this._verifyValueAssignment(values);

          values.forEach(
          /**
          * @param {?} value
          * @return {?}
          */
          function (value) {
            return _this4._markSelected(value);
          });

          this._emitChangeEvent();
        }
        /**
         * Deselects a value or an array of values.
         * @param {...?} values
         * @return {?}
         */

      }, {
        key: "deselect",
        value: function deselect() {
          var _this5 = this;

          for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            values[_key2] = arguments[_key2];
          }

          this._verifyValueAssignment(values);

          values.forEach(
          /**
          * @param {?} value
          * @return {?}
          */
          function (value) {
            return _this5._unmarkSelected(value);
          });

          this._emitChangeEvent();
        }
        /**
         * Toggles a value between selected and deselected.
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "toggle",
        value: function toggle(value) {
          this.isSelected(value) ? this.deselect(value) : this.select(value);
        }
        /**
         * Clears all of the selected values.
         * @return {?}
         */

      }, {
        key: "clear",
        value: function clear() {
          this._unmarkAll();

          this._emitChangeEvent();
        }
        /**
         * Determines whether a value is selected.
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "isSelected",
        value: function isSelected(value) {
          return this._selection.has(value);
        }
        /**
         * Determines whether the model does not have a value.
         * @return {?}
         */

      }, {
        key: "isEmpty",
        value: function isEmpty() {
          return this._selection.size === 0;
        }
        /**
         * Determines whether the model has a value.
         * @return {?}
         */

      }, {
        key: "hasValue",
        value: function hasValue() {
          return !this.isEmpty();
        }
        /**
         * Sorts the selected values based on a predicate function.
         * @param {?=} predicate
         * @return {?}
         */

      }, {
        key: "sort",
        value: function sort(predicate) {
          if (this._multiple && this.selected) {
            /** @type {?} */
            this._selected.sort(predicate);
          }
        }
        /**
         * Gets whether multiple values can be selected.
         * @return {?}
         */

      }, {
        key: "isMultipleSelection",
        value: function isMultipleSelection() {
          return this._multiple;
        }
        /**
         * Emits a change event and clears the records of selected and deselected values.
         * @private
         * @return {?}
         */

      }, {
        key: "_emitChangeEvent",
        value: function _emitChangeEvent() {
          // Clear the selected values so they can be re-cached.
          this._selected = null;

          if (this._selectedToEmit.length || this._deselectedToEmit.length) {
            this.changed.next({
              source: this,
              added: this._selectedToEmit,
              removed: this._deselectedToEmit
            });
            this._deselectedToEmit = [];
            this._selectedToEmit = [];
          }
        }
        /**
         * Selects a value.
         * @private
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "_markSelected",
        value: function _markSelected(value) {
          if (!this.isSelected(value)) {
            if (!this._multiple) {
              this._unmarkAll();
            }

            this._selection.add(value);

            if (this._emitChanges) {
              this._selectedToEmit.push(value);
            }
          }
        }
        /**
         * Deselects a value.
         * @private
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "_unmarkSelected",
        value: function _unmarkSelected(value) {
          if (this.isSelected(value)) {
            this._selection.delete(value);

            if (this._emitChanges) {
              this._deselectedToEmit.push(value);
            }
          }
        }
        /**
         * Clears out the selected values.
         * @private
         * @return {?}
         */

      }, {
        key: "_unmarkAll",
        value: function _unmarkAll() {
          var _this6 = this;

          if (!this.isEmpty()) {
            this._selection.forEach(
            /**
            * @param {?} value
            * @return {?}
            */
            function (value) {
              return _this6._unmarkSelected(value);
            });
          }
        }
        /**
         * Verifies the value assignment and throws an error if the specified value array is
         * including multiple values while the selection model is not supporting multiple values.
         * @private
         * @param {?} values
         * @return {?}
         */

      }, {
        key: "_verifyValueAssignment",
        value: function _verifyValueAssignment(values) {
          if (values.length > 1 && !this._multiple) {
            throw getMultipleValuesInSingleSelectionError();
          }
        }
      }, {
        key: "selected",
        get: function get() {
          if (!this._selected) {
            this._selected = Array.from(this._selection.values());
          }

          return this._selected;
        }
      }]);

      return SelectionModel;
    }();

    if (false) {}
    /**
     * Event emitted when the value of a MatSelectionModel has changed.
     * \@docs-private
     * @record
     * @template T
     */


    function SelectionChange() {}

    if (false) {}
    /**
     * Returns an error that reports that multiple values are passed into a selection model
     * with a single value.
     * \@docs-private
     * @return {?}
     */


    function getMultipleValuesInSingleSelectionError() {
      return Error('Cannot pass multiple values into SelectionModel with single-value mode.');
    }
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/collections/unique-selection-dispatcher.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Class to coordinate unique selection based on name.
     * Intended to be consumed as an Angular service.
     * This service is needed because native radio change events are only fired on the item currently
     * being selected, and we still need to uncheck the previous selection.
     *
     * This service does not *store* any IDs and names because they may change at any time, so it is
     * less error-prone if they are simply passed through when the events occur.
     */


    var UniqueSelectionDispatcher =
    /*#__PURE__*/
    function () {
      function UniqueSelectionDispatcher() {
        _classCallCheck(this, UniqueSelectionDispatcher);

        this._listeners = [];
      }
      /**
       * Notify other items that selection for the given name has been set.
       * @param {?} id ID of the item.
       * @param {?} name Name of the item.
       * @return {?}
       */


      _createClass(UniqueSelectionDispatcher, [{
        key: "notify",
        value: function notify(id, name) {
          var _iterator = _createForOfIteratorHelper(this._listeners),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var listener = _step.value;
              listener(id, name);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }
        /**
         * Listen for future changes to item selection.
         * @param {?} listener
         * @return {?} Function used to deregister listener
         */

      }, {
        key: "listen",
        value: function listen(listener) {
          var _this7 = this;

          this._listeners.push(listener);

          return (
            /**
            * @return {?}
            */
            function () {
              _this7._listeners = _this7._listeners.filter(
              /**
              * @param {?} registered
              * @return {?}
              */
              function (registered) {
                return listener !== registered;
              });
            }
          );
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this._listeners = [];
        }
      }]);

      return UniqueSelectionDispatcher;
    }();

    UniqueSelectionDispatcher.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"],
      args: [{
        providedIn: 'root'
      }]
    }];
    /** @nocollapse */

    UniqueSelectionDispatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
      factory: function UniqueSelectionDispatcher_Factory() {
        return new UniqueSelectionDispatcher();
      },
      token: UniqueSelectionDispatcher,
      providedIn: "root"
    });

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/collections/tree-adapter.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /**
     * Interface for a class that can flatten hierarchical structured data and re-expand the flattened
     * data back into its original structure. Should be used in conjunction with the cdk-tree.
     * @record
     * @template T
     */


    function TreeDataNodeFlattener() {}

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/collections/public-api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=collections.js.map

    /***/

  },

  /***/
  "./node_modules/@angular/cdk/fesm2015/platform.js":
  /*!********************************************************!*\
    !*** ./node_modules/@angular/cdk/fesm2015/platform.js ***!
    \********************************************************/

  /*! exports provided: Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior */

  /***/
  function node_modulesAngularCdkFesm2015PlatformJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Platform", function () {
      return Platform;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PlatformModule", function () {
      return PlatformModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "_getShadowRoot", function () {
      return _getShadowRoot;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "_supportsShadowDom", function () {
      return _supportsShadowDom;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getRtlScrollAxisType", function () {
      return getRtlScrollAxisType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getSupportedInputTypes", function () {
      return getSupportedInputTypes;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "normalizePassiveListenerOptions", function () {
      return normalizePassiveListenerOptions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "supportsPassiveEventListeners", function () {
      return supportsPassiveEventListeners;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "supportsScrollBehavior", function () {
      return supportsScrollBehavior;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/platform/platform.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // Whether the current platform supports the V8 Break Iterator. The V8 check
    // is necessary to detect all Blink based browsers.

    /** @type {?} */


    var hasV8BreakIterator; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can
    // cause IE to throw. These cases are tied to particular versions of Windows and can happen if
    // the consumer is providing a polyfilled `Map`. See:
    // https://github.com/Microsoft/ChakraCore/issues/3189
    // https://github.com/angular/components/issues/15687

    try {
      hasV8BreakIterator = typeof Intl !== 'undefined' &&
      /** @type {?} */
      Intl.v8BreakIterator;
    } catch (_a) {
      hasV8BreakIterator = false;
    }
    /**
     * Service to detect the current platform by comparing the userAgent strings and
     * checking browser-specific global properties.
     */


    var Platform =
    /**
     * \@breaking-change 8.0.0 remove optional decorator
     * @param {?=} _platformId
     */
    function Platform(_platformId) {
      _classCallCheck(this, Platform);

      this._platformId = _platformId; // We want to use the Angular platform check because if the Document is shimmed
      // without the navigator, the following checks will fail. This is preferred because
      // sometimes the Document may be shimmed without the user's knowledge or intention

      /**
       * Whether the Angular application is being rendered in the browser.
       */

      this.isBrowser = this._platformId ? Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["isPlatformBrowser"])(this._platformId) : typeof document === 'object' && !!document;
      /**
       * Whether the current browser is Microsoft Edge.
       */

      this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);
      /**
       * Whether the current rendering engine is Microsoft Trident.
       */

      this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent); // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.

      /**
       * Whether the current rendering engine is Blink.
       */

      this.BLINK = this.isBrowser && !!(
      /** @type {?} */
      window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT; // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to
      // ensure that Webkit runs standalone and is not used as another engine's base.

      /**
       * Whether the current rendering engine is WebKit.
       */

      this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;
      /**
       * Whether the current platform is Apple iOS.
       */

      this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window); // It's difficult to detect the plain Gecko engine, because most of the browsers identify
      // them self as Gecko-like browsers and modify the userAgent's according to that.
      // Since we only cover one explicit Firefox case, we can simply check for Firefox
      // instead of having an unstable check for Gecko.

      /**
       * Whether the current browser is Firefox.
       */

      this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);
      /**
       * Whether the current platform is Android.
       */
      // Trident on mobile adds the android platform to the userAgent to trick detections.

      this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT; // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake
      // this and just place the Safari keyword in the userAgent. To be more safe about Safari every
      // Safari browser should also use Webkit as its layout engine.

      /**
       * Whether the current browser is Safari.
       */

      this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;
    };

    Platform.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
      args: [{
        providedIn: 'root'
      }]
    }];
    /** @nocollapse */

    Platform.ctorParameters = function () {
      return [{
        type: Object,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
          args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["PLATFORM_ID"]]
        }]
      }];
    };
    /** @nocollapse */


    Platform.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({
      factory: function Platform_Factory() {
        return new Platform(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["PLATFORM_ID"], 8));
      },
      token: Platform,
      providedIn: "root"
    });

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/platform/platform-module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    var PlatformModule = function PlatformModule() {
      _classCallCheck(this, PlatformModule);
    };

    PlatformModule.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
      args: [{}]
    }];
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/platform/features/input-types.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /**
     * Cached result Set of input types support by the current browser.
     * @type {?}
     */

    var supportedInputTypes;
    /**
     * Types of `<input>` that *might* be supported.
     * @type {?}
     */

    var candidateInputTypes = [// `color` must come first. Chrome 56 shows a warning if we change the type to `color` after
    // first changing it to something else:
    // The specified value "" does not conform to the required format.
    // The format is "#rrggbb" where rr, gg, bb are two-digit hexadecimal numbers.
    'color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];
    /**
     * @return {?} The input types supported by this browser.
     */

    function getSupportedInputTypes() {
      // Result is cached.
      if (supportedInputTypes) {
        return supportedInputTypes;
      } // We can't check if an input type is not supported until we're on the browser, so say that
      // everything is supported when not on the browser. We don't use `Platform` here since it's
      // just a helper function and can't inject it.


      if (typeof document !== 'object' || !document) {
        supportedInputTypes = new Set(candidateInputTypes);
        return supportedInputTypes;
      }
      /** @type {?} */


      var featureTestInput = document.createElement('input');
      supportedInputTypes = new Set(candidateInputTypes.filter(
      /**
      * @param {?} value
      * @return {?}
      */
      function (value) {
        featureTestInput.setAttribute('type', value);
        return featureTestInput.type === value;
      }));
      return supportedInputTypes;
    }
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/platform/features/passive-listeners.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /**
     * Cached result of whether the user's browser supports passive event listeners.
     * @type {?}
     */


    var supportsPassiveEvents;
    /**
     * Checks whether the user's browser supports passive event listeners.
     * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md
     * @return {?}
     */

    function supportsPassiveEventListeners() {
      if (supportsPassiveEvents == null && typeof window !== 'undefined') {
        try {
          window.addEventListener('test',
          /** @type {?} */
          null, Object.defineProperty({}, 'passive', {
            get:
            /**
            * @return {?}
            */
            function get() {
              return supportsPassiveEvents = true;
            }
          }));
        } finally {
          supportsPassiveEvents = supportsPassiveEvents || false;
        }
      }

      return supportsPassiveEvents;
    }
    /**
     * Normalizes an `AddEventListener` object to something that can be passed
     * to `addEventListener` on any browser, no matter whether it supports the
     * `options` parameter.
     * @param {?} options Object to be normalized.
     * @return {?}
     */


    function normalizePassiveListenerOptions(options) {
      return supportsPassiveEventListeners() ? options : !!options.capture;
    }
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/platform/features/scrolling.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /** @enum {number} */


    var RtlScrollAxisType = {
      /**
       * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled
       * all the way right.
       */
      NORMAL: 0,

      /**
       * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled
       * all the way right.
       */
      NEGATED: 1,

      /**
       * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled
       * all the way right.
       */
      INVERTED: 2
    };
    /**
     * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.
     * @type {?}
     */

    var rtlScrollAxisType;
    /**
     * Check whether the browser supports scroll behaviors.
     * @return {?}
     */

    function supportsScrollBehavior() {
      return !!(typeof document == 'object' && 'scrollBehavior' in
      /** @type {?} */
      document.documentElement.style);
    }
    /**
     * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,
     * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.
     * @return {?}
     */


    function getRtlScrollAxisType() {
      // We can't check unless we're on the browser. Just assume 'normal' if we're not.
      if (typeof document !== 'object' || !document) {
        return 0
        /* NORMAL */
        ;
      }

      if (rtlScrollAxisType == null) {
        // Create a 1px wide scrolling container and a 2px wide content element.

        /** @type {?} */
        var scrollContainer = document.createElement('div');
        /** @type {?} */

        var containerStyle = scrollContainer.style;
        scrollContainer.dir = 'rtl';
        containerStyle.height = '1px';
        containerStyle.width = '1px';
        containerStyle.overflow = 'auto';
        containerStyle.visibility = 'hidden';
        containerStyle.pointerEvents = 'none';
        containerStyle.position = 'absolute';
        /** @type {?} */

        var content = document.createElement('div');
        /** @type {?} */

        var contentStyle = content.style;
        contentStyle.width = '2px';
        contentStyle.height = '1px';
        scrollContainer.appendChild(content);
        document.body.appendChild(scrollContainer);
        rtlScrollAxisType = 0
        /* NORMAL */
        ; // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL
        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're
        // dealing with one of the other two types of browsers.

        if (scrollContainer.scrollLeft === 0) {
          // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an
          // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by
          // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will
          // return 0 when we read it again.
          scrollContainer.scrollLeft = 1;
          rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? 1
          /* NEGATED */
          : 2
          /* INVERTED */
          ;
        }

        /** @type {?} */
        scrollContainer.parentNode.removeChild(scrollContainer);
      }

      return rtlScrollAxisType;
    }
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/platform/features/shadow-dom.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /** @type {?} */


    var shadowDomIsSupported;
    /**
     * Checks whether the user's browser support Shadow DOM.
     * @return {?}
     */

    function _supportsShadowDom() {
      if (shadowDomIsSupported == null) {
        /** @type {?} */
        var head = typeof document !== 'undefined' ? document.head : null;
        shadowDomIsSupported = !!(head && (
        /** @type {?} */
        head.createShadowRoot || head.attachShadow));
      }

      return shadowDomIsSupported;
    }
    /**
     * Gets the shadow root of an element, if supported and the element is inside the Shadow DOM.
     * @param {?} element
     * @return {?}
     */


    function _getShadowRoot(element) {
      if (_supportsShadowDom()) {
        /** @type {?} */
        var rootNode = element.getRootNode ? element.getRootNode() : null; // Note that this should be caught by `_supportsShadowDom`, but some
        // teams have been able to hit this code path on unsupported browsers.

        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {
          return rootNode;
        }
      }

      return null;
    }
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/platform/public-api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=platform.js.map

    /***/

  },

  /***/
  "./node_modules/@angular/cdk/fesm2015/scrolling.js":
  /*!*********************************************************!*\
    !*** ./node_modules/@angular/cdk/fesm2015/scrolling.js ***!
    \*********************************************************/

  /*! exports provided: CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory */

  /***/
  function node_modulesAngularCdkFesm2015ScrollingJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CdkFixedSizeVirtualScroll", function () {
      return CdkFixedSizeVirtualScroll;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CdkScrollable", function () {
      return CdkScrollable;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CdkScrollableModule", function () {
      return CdkScrollableModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CdkVirtualForOf", function () {
      return CdkVirtualForOf;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CdkVirtualScrollViewport", function () {
      return CdkVirtualScrollViewport;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_RESIZE_TIME", function () {
      return DEFAULT_RESIZE_TIME;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_SCROLL_TIME", function () {
      return DEFAULT_SCROLL_TIME;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FixedSizeVirtualScrollStrategy", function () {
      return FixedSizeVirtualScrollStrategy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ScrollDispatcher", function () {
      return ScrollDispatcher;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ScrollingModule", function () {
      return ScrollingModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "VIRTUAL_SCROLL_STRATEGY", function () {
      return VIRTUAL_SCROLL_STRATEGY;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ViewportRuler", function () {
      return ViewportRuler;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "_fixedSizeVirtualScrollStrategyFactory", function () {
      return _fixedSizeVirtualScrollStrategyFactory;
    });
    /* harmony import */


    var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/cdk/coercion */
    "./node_modules/@angular/cdk/fesm2015/coercion.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/cdk/platform */
    "./node_modules/@angular/cdk/fesm2015/platform.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/cdk/bidi */
    "./node_modules/@angular/cdk/fesm2015/bidi.js");
    /* harmony import */


    var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/cdk/collections */
    "./node_modules/@angular/cdk/fesm2015/collections.js");
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * The injection token used to specify the virtual scrolling strategy.
     * @type {?}
     */


    var VIRTUAL_SCROLL_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('VIRTUAL_SCROLL_STRATEGY');
    /**
     * A strategy that dictates which items should be rendered in the viewport.
     * @record
     */

    function VirtualScrollStrategy() {}

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Virtual scrolling strategy for lists with items of known fixed size.
     */


    var FixedSizeVirtualScrollStrategy =
    /*#__PURE__*/
    function () {
      /**
       * @param {?} itemSize The size of the items in the virtually scrolling list.
       * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more
       * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.
       */
      function FixedSizeVirtualScrollStrategy(itemSize, minBufferPx, maxBufferPx) {
        _classCallCheck(this, FixedSizeVirtualScrollStrategy);

        this._scrolledIndexChange = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        /**
         * \@docs-private Implemented as part of VirtualScrollStrategy.
         */

        this.scrolledIndexChange = this._scrolledIndexChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["distinctUntilChanged"])());
        /**
         * The attached viewport.
         */

        this._viewport = null;
        this._itemSize = itemSize;
        this._minBufferPx = minBufferPx;
        this._maxBufferPx = maxBufferPx;
      }
      /**
       * Attaches this scroll strategy to a viewport.
       * @param {?} viewport The viewport to attach this strategy to.
       * @return {?}
       */


      _createClass(FixedSizeVirtualScrollStrategy, [{
        key: "attach",
        value: function attach(viewport) {
          this._viewport = viewport;

          this._updateTotalContentSize();

          this._updateRenderedRange();
        }
        /**
         * Detaches this scroll strategy from the currently attached viewport.
         * @return {?}
         */

      }, {
        key: "detach",
        value: function detach() {
          this._scrolledIndexChange.complete();

          this._viewport = null;
        }
        /**
         * Update the item size and buffer size.
         * @param {?} itemSize The size of the items in the virtually scrolling list.
         * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more
         * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.
         * @return {?}
         */

      }, {
        key: "updateItemAndBufferSize",
        value: function updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {
          if (maxBufferPx < minBufferPx) {
            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');
          }

          this._itemSize = itemSize;
          this._minBufferPx = minBufferPx;
          this._maxBufferPx = maxBufferPx;

          this._updateTotalContentSize();

          this._updateRenderedRange();
        }
        /**
         * \@docs-private Implemented as part of VirtualScrollStrategy.
         * @return {?}
         */

      }, {
        key: "onContentScrolled",
        value: function onContentScrolled() {
          this._updateRenderedRange();
        }
        /**
         * \@docs-private Implemented as part of VirtualScrollStrategy.
         * @return {?}
         */

      }, {
        key: "onDataLengthChanged",
        value: function onDataLengthChanged() {
          this._updateTotalContentSize();

          this._updateRenderedRange();
        }
        /**
         * \@docs-private Implemented as part of VirtualScrollStrategy.
         * @return {?}
         */

      }, {
        key: "onContentRendered",
        value: function onContentRendered() {}
        /**
         * \@docs-private Implemented as part of VirtualScrollStrategy.
         * @return {?}
         */

      }, {
        key: "onRenderedOffsetChanged",
        value: function onRenderedOffsetChanged() {}
        /**
         * Scroll to the offset for the given index.
         * @param {?} index The index of the element to scroll to.
         * @param {?} behavior The ScrollBehavior to use when scrolling.
         * @return {?}
         */

      }, {
        key: "scrollToIndex",
        value: function scrollToIndex(index, behavior) {
          if (this._viewport) {
            this._viewport.scrollToOffset(index * this._itemSize, behavior);
          }
        }
        /**
         * Update the viewport's total content size.
         * @private
         * @return {?}
         */

      }, {
        key: "_updateTotalContentSize",
        value: function _updateTotalContentSize() {
          if (!this._viewport) {
            return;
          }

          this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);
        }
        /**
         * Update the viewport's rendered range.
         * @private
         * @return {?}
         */

      }, {
        key: "_updateRenderedRange",
        value: function _updateRenderedRange() {
          if (!this._viewport) {
            return;
          }
          /** @type {?} */


          var scrollOffset = this._viewport.measureScrollOffset();
          /** @type {?} */


          var firstVisibleIndex = scrollOffset / this._itemSize;
          /** @type {?} */

          var renderedRange = this._viewport.getRenderedRange();
          /** @type {?} */


          var newRange = {
            start: renderedRange.start,
            end: renderedRange.end
          };
          /** @type {?} */

          var viewportSize = this._viewport.getViewportSize();
          /** @type {?} */


          var dataLength = this._viewport.getDataLength();
          /** @type {?} */


          var startBuffer = scrollOffset - newRange.start * this._itemSize;

          if (startBuffer < this._minBufferPx && newRange.start != 0) {
            /** @type {?} */
            var expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);
            newRange.start = Math.max(0, newRange.start - expandStart);
            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));
          } else {
            /** @type {?} */
            var endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);

            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {
              /** @type {?} */
              var expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);

              if (expandEnd > 0) {
                newRange.end = Math.min(dataLength, newRange.end + expandEnd);
                newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));
              }
            }
          }

          this._viewport.setRenderedRange(newRange);

          this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);

          this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));
        }
      }]);

      return FixedSizeVirtualScrollStrategy;
    }();

    if (false) {}
    /**
     * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created
     * `FixedSizeVirtualScrollStrategy` from the given directive.
     * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the
     *     `FixedSizeVirtualScrollStrategy` from.
     * @return {?}
     */


    function _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {
      return fixedSizeDir._scrollStrategy;
    }
    /**
     * A virtual scroll strategy that supports fixed-size items.
     */


    var CdkFixedSizeVirtualScroll =
    /*#__PURE__*/
    function () {
      function CdkFixedSizeVirtualScroll() {
        _classCallCheck(this, CdkFixedSizeVirtualScroll);

        this._itemSize = 20;
        this._minBufferPx = 100;
        this._maxBufferPx = 200;
        /**
         * The scroll strategy used by this directive.
         */

        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);
      }
      /**
       * The size of the items in the list (in pixels).
       * @return {?}
       */


      _createClass(CdkFixedSizeVirtualScroll, [{
        key: "ngOnChanges",

        /**
         * @return {?}
         */
        value: function ngOnChanges() {
          this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);
        }
      }, {
        key: "itemSize",
        get: function get() {
          return this._itemSize;
        }
        /**
         * @param {?} value
         * @return {?}
         */
        ,
        set: function set(value) {
          this._itemSize = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__["coerceNumberProperty"])(value);
        }
        /**
         * The minimum amount of buffer rendered beyond the viewport (in pixels).
         * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.
         * @return {?}
         */

      }, {
        key: "minBufferPx",
        get: function get() {
          return this._minBufferPx;
        }
        /**
         * @param {?} value
         * @return {?}
         */
        ,
        set: function set(value) {
          this._minBufferPx = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__["coerceNumberProperty"])(value);
        }
        /**
         * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.
         * @return {?}
         */

      }, {
        key: "maxBufferPx",
        get: function get() {
          return this._maxBufferPx;
        }
        /**
         * @param {?} value
         * @return {?}
         */
        ,
        set: function set(value) {
          this._maxBufferPx = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__["coerceNumberProperty"])(value);
        }
      }]);

      return CdkFixedSizeVirtualScroll;
    }();

    CdkFixedSizeVirtualScroll.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
      args: [{
        selector: 'cdk-virtual-scroll-viewport[itemSize]',
        providers: [{
          provide: VIRTUAL_SCROLL_STRATEGY,
          useFactory: _fixedSizeVirtualScrollStrategyFactory,
          deps: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(
          /**
          * @return {?}
          */
          function () {
            return CdkFixedSizeVirtualScroll;
          })]
        }]
      }]
    }];
    CdkFixedSizeVirtualScroll.propDecorators = {
      itemSize: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
      }],
      minBufferPx: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
      }],
      maxBufferPx: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
      }]
    };

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/scroll-dispatcher.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Time in ms to throttle the scrolling events by default.
     * @type {?}
     */


    var DEFAULT_SCROLL_TIME = 20;
    /**
     * Service contained all registered Scrollable references and emits an event when any one of the
     * Scrollable references emit a scrolled event.
     */

    var ScrollDispatcher =
    /*#__PURE__*/
    function () {
      /**
       * @param {?} _ngZone
       * @param {?} _platform
       * @param {?=} document
       */
      function ScrollDispatcher(_ngZone, _platform,
      /** @breaking-change 11.0.0 make document required */
      document) {
        _classCallCheck(this, ScrollDispatcher);

        this._ngZone = _ngZone;
        this._platform = _platform;
        /**
         * Subject for notifying that a registered scrollable reference element has been scrolled.
         */

        this._scrolled = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        /**
         * Keeps track of the global `scroll` and `resize` subscriptions.
         */

        this._globalSubscription = null;
        /**
         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.
         */

        this._scrolledCount = 0;
        /**
         * Map of all the scrollable references that are registered with the service and their
         * scroll event subscriptions.
         */

        this.scrollContainers = new Map();
        this._document = document;
      }
      /**
       * Registers a scrollable instance with the service and listens for its scrolled events. When the
       * scrollable is scrolled, the service emits the event to its scrolled observable.
       * @param {?} scrollable Scrollable instance to be registered.
       * @return {?}
       */


      _createClass(ScrollDispatcher, [{
        key: "register",
        value: function register(scrollable) {
          var _this8 = this;

          if (!this.scrollContainers.has(scrollable)) {
            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(
            /**
            * @return {?}
            */
            function () {
              return _this8._scrolled.next(scrollable);
            }));
          }
        }
        /**
         * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.
         * @param {?} scrollable Scrollable instance to be deregistered.
         * @return {?}
         */

      }, {
        key: "deregister",
        value: function deregister(scrollable) {
          /** @type {?} */
          var scrollableReference = this.scrollContainers.get(scrollable);

          if (scrollableReference) {
            scrollableReference.unsubscribe();
            this.scrollContainers.delete(scrollable);
          }
        }
        /**
         * Returns an observable that emits an event whenever any of the registered Scrollable
         * references (or window, document, or body) fire a scrolled event. Can provide a time in ms
         * to override the default "throttle" time.
         *
         * **Note:** in order to avoid hitting change detection for every scroll event,
         * all of the events emitted from this stream will be run outside the Angular zone.
         * If you need to update any data bindings as a result of a scroll event, you have
         * to run the callback using `NgZone.run`.
         * @param {?=} auditTimeInMs
         * @return {?}
         */

      }, {
        key: "scrolled",
        value: function scrolled() {
          var _this9 = this;

          var auditTimeInMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCROLL_TIME;

          if (!this._platform.isBrowser) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])();
          }

          return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](
          /**
          * @param {?} observer
          * @return {?}
          */
          function (observer) {
            if (!_this9._globalSubscription) {
              _this9._addGlobalListener();
            } // In the case of a 0ms delay, use an observable without auditTime
            // since it does add a perceptible delay in processing overhead.

            /** @type {?} */


            var subscription = auditTimeInMs > 0 ? _this9._scrolled.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["auditTime"])(auditTimeInMs)).subscribe(observer) : _this9._scrolled.subscribe(observer);
            _this9._scrolledCount++;
            return (
              /**
              * @return {?}
              */
              function () {
                subscription.unsubscribe();
                _this9._scrolledCount--;

                if (!_this9._scrolledCount) {
                  _this9._removeGlobalListener();
                }
              }
            );
          });
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          var _this10 = this;

          this._removeGlobalListener();

          this.scrollContainers.forEach(
          /**
          * @param {?} _
          * @param {?} container
          * @return {?}
          */
          function (_, container) {
            return _this10.deregister(container);
          });

          this._scrolled.complete();
        }
        /**
         * Returns an observable that emits whenever any of the
         * scrollable ancestors of an element are scrolled.
         * @param {?} elementRef Element whose ancestors to listen for.
         * @param {?=} auditTimeInMs Time to throttle the scroll events.
         * @return {?}
         */

      }, {
        key: "ancestorScrolled",
        value: function ancestorScrolled(elementRef, auditTimeInMs) {
          /** @type {?} */
          var ancestors = this.getAncestorScrollContainers(elementRef);
          return this.scrolled(auditTimeInMs).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(
          /**
          * @param {?} target
          * @return {?}
          */
          function (target) {
            return !target || ancestors.indexOf(target) > -1;
          }));
        }
        /**
         * Returns all registered Scrollables that contain the provided element.
         * @param {?} elementRef
         * @return {?}
         */

      }, {
        key: "getAncestorScrollContainers",
        value: function getAncestorScrollContainers(elementRef) {
          var _this11 = this;

          /** @type {?} */
          var scrollingContainers = [];
          this.scrollContainers.forEach(
          /**
          * @param {?} _subscription
          * @param {?} scrollable
          * @return {?}
          */
          function (_subscription, scrollable) {
            if (_this11._scrollableContainsElement(scrollable, elementRef)) {
              scrollingContainers.push(scrollable);
            }
          });
          return scrollingContainers;
        }
        /**
         * Access injected document if available or fallback to global document reference
         * @private
         * @return {?}
         */

      }, {
        key: "_getDocument",
        value: function _getDocument() {
          return this._document || document;
        }
        /**
         * Use defaultView of injected document if available or fallback to global window reference
         * @private
         * @return {?}
         */

      }, {
        key: "_getWindow",
        value: function _getWindow() {
          /** @type {?} */
          var doc = this._getDocument();

          return doc.defaultView || window;
        }
        /**
         * Returns true if the element is contained within the provided Scrollable.
         * @private
         * @param {?} scrollable
         * @param {?} elementRef
         * @return {?}
         */

      }, {
        key: "_scrollableContainsElement",
        value: function _scrollableContainsElement(scrollable, elementRef) {
          /** @type {?} */
          var element = elementRef.nativeElement;
          /** @type {?} */

          var scrollableElement = scrollable.getElementRef().nativeElement; // Traverse through the element parents until we reach null, checking if any of the elements
          // are the scrollable's element.

          do {
            if (element == scrollableElement) {
              return true;
            }
          } while (element =
          /** @type {?} */
          element.parentElement);

          return false;
        }
        /**
         * Sets up the global scroll listeners.
         * @private
         * @return {?}
         */

      }, {
        key: "_addGlobalListener",
        value: function _addGlobalListener() {
          var _this12 = this;

          this._globalSubscription = this._ngZone.runOutsideAngular(
          /**
          * @return {?}
          */
          function () {
            /** @type {?} */
            var window = _this12._getWindow();

            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])(window.document, 'scroll').subscribe(
            /**
            * @return {?}
            */
            function () {
              return _this12._scrolled.next();
            });
          });
        }
        /**
         * Cleans up the global scroll listener.
         * @private
         * @return {?}
         */

      }, {
        key: "_removeGlobalListener",
        value: function _removeGlobalListener() {
          if (this._globalSubscription) {
            this._globalSubscription.unsubscribe();

            this._globalSubscription = null;
          }
        }
      }]);

      return ScrollDispatcher;
    }();

    ScrollDispatcher.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"],
      args: [{
        providedIn: 'root'
      }]
    }];
    /** @nocollapse */

    ScrollDispatcher.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
      }, {
        type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["Platform"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"]]
        }]
      }];
    };
    /** @nocollapse */


    ScrollDispatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
      factory: function ScrollDispatcher_Factory() {
        return new ScrollDispatcher(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["Platform"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"], 8));
      },
      token: ScrollDispatcher,
      providedIn: "root"
    });

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/scrollable.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Sends an event when the directive's element is scrolled. Registers itself with the
     * ScrollDispatcher service to include itself as part of its collection of scrolling events that it
     * can be listened to through the service.
     */


    var CdkScrollable =
    /*#__PURE__*/
    function () {
      /**
       * @param {?} elementRef
       * @param {?} scrollDispatcher
       * @param {?} ngZone
       * @param {?=} dir
       */
      function CdkScrollable(elementRef, scrollDispatcher, ngZone, dir) {
        var _this13 = this;

        _classCallCheck(this, CdkScrollable);

        this.elementRef = elementRef;
        this.scrollDispatcher = scrollDispatcher;
        this.ngZone = ngZone;
        this.dir = dir;
        this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this._elementScrolled = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](
        /**
        * @param {?} observer
        * @return {?}
        */
        function (observer) {
          return _this13.ngZone.runOutsideAngular(
          /**
          * @return {?}
          */
          function () {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])(_this13.elementRef.nativeElement, 'scroll').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(_this13._destroyed)).subscribe(observer);
          });
        });
      }
      /**
       * @return {?}
       */


      _createClass(CdkScrollable, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.scrollDispatcher.register(this);
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.scrollDispatcher.deregister(this);

          this._destroyed.next();

          this._destroyed.complete();
        }
        /**
         * Returns observable that emits when a scroll event is fired on the host element.
         * @return {?}
         */

      }, {
        key: "elementScrolled",
        value: function elementScrolled() {
          return this._elementScrolled;
        }
        /**
         * Gets the ElementRef for the viewport.
         * @return {?}
         */

      }, {
        key: "getElementRef",
        value: function getElementRef() {
          return this.elementRef;
        }
        /**
         * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo
         * method, since browsers are not consistent about what scrollLeft means in RTL. For this method
         * left and right always refer to the left and right side of the scrolling container irrespective
         * of the layout direction. start and end refer to left and right in an LTR context and vice-versa
         * in an RTL context.
         * @param {?} options specified the offsets to scroll to.
         * @return {?}
         */

      }, {
        key: "scrollTo",
        value: function scrollTo(options) {
          /** @type {?} */
          var el = this.elementRef.nativeElement;
          /** @type {?} */

          var isRtl = this.dir && this.dir.value == 'rtl'; // Rewrite start & end offsets as right or left offsets.

          if (options.left == null) {
            options.left = isRtl ? options.end : options.start;
          }

          if (options.right == null) {
            options.right = isRtl ? options.start : options.end;
          } // Rewrite the bottom offset as a top offset.


          if (options.bottom != null) {
            /** @type {?} */
            options.top = el.scrollHeight - el.clientHeight - options.bottom;
          } // Rewrite the right offset as a left offset.


          if (isRtl && Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["getRtlScrollAxisType"])() != 0
          /* NORMAL */
          ) {
              if (options.left != null) {
                /** @type {?} */
                options.right = el.scrollWidth - el.clientWidth - options.left;
              }

              if (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["getRtlScrollAxisType"])() == 2
              /* INVERTED */
              ) {
                  options.left = options.right;
                } else if (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["getRtlScrollAxisType"])() == 1
              /* NEGATED */
              ) {
                  options.left = options.right ? -options.right : options.right;
                }
            } else {
            if (options.right != null) {
              /** @type {?} */
              options.left = el.scrollWidth - el.clientWidth - options.right;
            }
          }

          this._applyScrollToOptions(options);
        }
        /**
         * @private
         * @param {?} options
         * @return {?}
         */

      }, {
        key: "_applyScrollToOptions",
        value: function _applyScrollToOptions(options) {
          /** @type {?} */
          var el = this.elementRef.nativeElement;

          if (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["supportsScrollBehavior"])()) {
            el.scrollTo(options);
          } else {
            if (options.top != null) {
              el.scrollTop = options.top;
            }

            if (options.left != null) {
              el.scrollLeft = options.left;
            }
          }
        }
        /**
         * Measures the scroll offset relative to the specified edge of the viewport. This method can be
         * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent
         * about what scrollLeft means in RTL. The values returned by this method are normalized such that
         * left and right always refer to the left and right side of the scrolling container irrespective
         * of the layout direction. start and end refer to left and right in an LTR context and vice-versa
         * in an RTL context.
         * @param {?} from The edge to measure from.
         * @return {?}
         */

      }, {
        key: "measureScrollOffset",
        value: function measureScrollOffset(from) {
          /** @type {?} */
          var LEFT = 'left';
          /** @type {?} */

          var RIGHT = 'right';
          /** @type {?} */

          var el = this.elementRef.nativeElement;

          if (from == 'top') {
            return el.scrollTop;
          }

          if (from == 'bottom') {
            return el.scrollHeight - el.clientHeight - el.scrollTop;
          } // Rewrite start & end as left or right offsets.

          /** @type {?} */


          var isRtl = this.dir && this.dir.value == 'rtl';

          if (from == 'start') {
            from = isRtl ? RIGHT : LEFT;
          } else if (from == 'end') {
            from = isRtl ? LEFT : RIGHT;
          }

          if (isRtl && Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["getRtlScrollAxisType"])() == 2
          /* INVERTED */
          ) {
              // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and
              // 0 when scrolled all the way right.
              if (from == LEFT) {
                return el.scrollWidth - el.clientWidth - el.scrollLeft;
              } else {
                return el.scrollLeft;
              }
            } else if (isRtl && Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["getRtlScrollAxisType"])() == 1
          /* NEGATED */
          ) {
              // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and
              // 0 when scrolled all the way right.
              if (from == LEFT) {
                return el.scrollLeft + el.scrollWidth - el.clientWidth;
              } else {
                return -el.scrollLeft;
              }
            } else {
            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and
            // (scrollWidth - clientWidth) when scrolled all the way right.
            if (from == LEFT) {
              return el.scrollLeft;
            } else {
              return el.scrollWidth - el.clientWidth - el.scrollLeft;
            }
          }
        }
      }]);

      return CdkScrollable;
    }();

    CdkScrollable.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
      args: [{
        selector: '[cdk-scrollable], [cdkScrollable]'
      }]
    }];
    /** @nocollapse */

    CdkScrollable.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
      }, {
        type: ScrollDispatcher
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
      }, {
        type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__["Directionality"],
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]
        }]
      }];
    };

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/viewport-ruler.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Time in ms to throttle the resize events by default.
     * @type {?}
     */


    var DEFAULT_RESIZE_TIME = 20;
    /**
     * Object that holds the scroll position of the viewport in each direction.
     * @record
     */

    function ViewportScrollPosition() {}

    if (false) {}
    /**
     * Simple utility for getting the bounds of the browser viewport.
     * \@docs-private
     */


    var ViewportRuler =
    /*#__PURE__*/
    function () {
      /**
       * @param {?} _platform
       * @param {?} ngZone
       * @param {?=} document
       */
      function ViewportRuler(_platform, ngZone,
      /** @breaking-change 11.0.0 make document required */
      document) {
        var _this14 = this;

        _classCallCheck(this, ViewportRuler);

        this._platform = _platform;
        this._document = document;
        ngZone.runOutsideAngular(
        /**
        * @return {?}
        */
        function () {
          /** @type {?} */
          var window = _this14._getWindow();

          _this14._change = _platform.isBrowser ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["merge"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])(window, 'resize'), Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])(window, 'orientationchange')) : Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(); // Note that we need to do the subscription inside `runOutsideAngular`
          // since subscribing is what causes the event listener to be added.

          _this14._invalidateCache = _this14.change().subscribe(
          /**
          * @return {?}
          */
          function () {
            return _this14._updateViewportSize();
          });
        });
      }
      /**
       * @return {?}
       */


      _createClass(ViewportRuler, [{
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this._invalidateCache.unsubscribe();
        }
        /**
         * Returns the viewport's width and height.
         * @return {?}
         */

      }, {
        key: "getViewportSize",
        value: function getViewportSize() {
          if (!this._viewportSize) {
            this._updateViewportSize();
          }
          /** @type {?} */


          var output = {
            width: this._viewportSize.width,
            height: this._viewportSize.height
          }; // If we're not on a browser, don't cache the size since it'll be mocked out anyway.

          if (!this._platform.isBrowser) {
            this._viewportSize =
            /** @type {?} */
            null;
          }

          return output;
        }
        /**
         * Gets a ClientRect for the viewport's bounds.
         * @return {?}
         */

      }, {
        key: "getViewportRect",
        value: function getViewportRect() {
          // Use the document element's bounding rect rather than the window scroll properties
          // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll
          // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different
          // conceptual viewports. Under most circumstances these viewports are equivalent, but they
          // can disagree when the page is pinch-zoomed (on devices that support touch).
          // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4
          // We use the documentElement instead of the body because, by default (without a css reset)
          // browsers typically give the document body an 8px margin, which is not included in
          // getBoundingClientRect().

          /** @type {?} */
          var scrollPosition = this.getViewportScrollPosition();

          var _this$getViewportSize = this.getViewportSize(),
              width = _this$getViewportSize.width,
              height = _this$getViewportSize.height;

          return {
            top: scrollPosition.top,
            left: scrollPosition.left,
            bottom: scrollPosition.top + height,
            right: scrollPosition.left + width,
            height: height,
            width: width
          };
        }
        /**
         * Gets the (top, left) scroll position of the viewport.
         * @return {?}
         */

      }, {
        key: "getViewportScrollPosition",
        value: function getViewportScrollPosition() {
          // While we can get a reference to the fake document
          // during SSR, it doesn't have getBoundingClientRect.
          if (!this._platform.isBrowser) {
            return {
              top: 0,
              left: 0
            };
          } // The top-left-corner of the viewport is determined by the scroll position of the document
          // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about
          // whether `document.body` or `document.documentElement` is the scrolled element, so reading
          // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of
          // `document.documentElement` works consistently, where the `top` and `left` values will
          // equal negative the scroll position.

          /** @type {?} */


          var document = this._getDocument();
          /** @type {?} */


          var window = this._getWindow();
          /** @type {?} */


          var documentElement =
          /** @type {?} */
          document.documentElement;
          /** @type {?} */

          var documentRect = documentElement.getBoundingClientRect();
          /** @type {?} */

          var top = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;
          /** @type {?} */

          var left = -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;
          return {
            top: top,
            left: left
          };
        }
        /**
         * Returns a stream that emits whenever the size of the viewport changes.
         * @param {?=} throttleTime Time in milliseconds to throttle the stream.
         * @return {?}
         */

      }, {
        key: "change",
        value: function change() {
          var throttleTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RESIZE_TIME;
          return throttleTime > 0 ? this._change.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["auditTime"])(throttleTime)) : this._change;
        }
        /**
         * Access injected document if available or fallback to global document reference
         * @private
         * @return {?}
         */

      }, {
        key: "_getDocument",
        value: function _getDocument() {
          return this._document || document;
        }
        /**
         * Use defaultView of injected document if available or fallback to global window reference
         * @private
         * @return {?}
         */

      }, {
        key: "_getWindow",
        value: function _getWindow() {
          /** @type {?} */
          var doc = this._getDocument();

          return doc.defaultView || window;
        }
        /**
         * Updates the cached viewport size.
         * @private
         * @return {?}
         */

      }, {
        key: "_updateViewportSize",
        value: function _updateViewportSize() {
          /** @type {?} */
          var window = this._getWindow();

          this._viewportSize = this._platform.isBrowser ? {
            width: window.innerWidth,
            height: window.innerHeight
          } : {
            width: 0,
            height: 0
          };
        }
      }]);

      return ViewportRuler;
    }();

    ViewportRuler.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"],
      args: [{
        providedIn: 'root'
      }]
    }];
    /** @nocollapse */

    ViewportRuler.ctorParameters = function () {
      return [{
        type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["Platform"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"]]
        }]
      }];
    };
    /** @nocollapse */


    ViewportRuler.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
      factory: function ViewportRuler_Factory() {
        return new ViewportRuler(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["Platform"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"], 8));
      },
      token: ViewportRuler,
      providedIn: "root"
    });

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Checks if the given ranges are equal.
     * @param {?} r1
     * @param {?} r2
     * @return {?}
     */


    function rangesEqual(r1, r2) {
      return r1.start == r2.start && r1.end == r2.end;
    }
    /**
     * Scheduler to be used for scroll events. Needs to fall back to
     * something that doesn't rely on requestAnimationFrame on environments
     * that don't support it (e.g. server-side rendering).
     * @type {?}
     */


    var SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? rxjs__WEBPACK_IMPORTED_MODULE_2__["animationFrameScheduler"] : rxjs__WEBPACK_IMPORTED_MODULE_2__["asapScheduler"];
    /**
     * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.
     */

    var CdkVirtualScrollViewport =
    /*#__PURE__*/
    function (_CdkScrollable) {
      _inherits(CdkVirtualScrollViewport, _CdkScrollable);

      var _super3 = _createSuper(CdkVirtualScrollViewport);

      /**
       * @param {?} elementRef
       * @param {?} _changeDetectorRef
       * @param {?} ngZone
       * @param {?} _scrollStrategy
       * @param {?} dir
       * @param {?} scrollDispatcher
       * @param {?=} viewportRuler
       */
      function CdkVirtualScrollViewport(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher,
      /**
       * @deprecated `viewportRuler` parameter to become required.
       * @breaking-change 11.0.0
       */
      viewportRuler) {
        var _this15;

        _classCallCheck(this, CdkVirtualScrollViewport);

        _this15 = _super3.call(this, elementRef, scrollDispatcher, ngZone, dir);
        _this15.elementRef = elementRef;
        _this15._changeDetectorRef = _changeDetectorRef;
        _this15._scrollStrategy = _scrollStrategy;
        /**
         * Emits when the viewport is detached from a CdkVirtualForOf.
         */

        _this15._detachedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        /**
         * Emits when the rendered range changes.
         */

        _this15._renderedRangeSubject = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        _this15._orientation = 'vertical'; // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll
        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because
        // depending on how the strategy calculates the scrolled index, it may come at a cost to
        // performance.

        /**
         * Emits when the index of the first element visible in the viewport changes.
         */

        _this15.scrolledIndexChange = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](
        /**
        * @param {?} observer
        * @return {?}
        */
        function (observer) {
          return _this15._scrollStrategy.scrolledIndexChange.subscribe(
          /**
          * @param {?} index
          * @return {?}
          */
          function (index) {
            return Promise.resolve().then(
            /**
            * @return {?}
            */
            function () {
              return _this15.ngZone.run(
              /**
              * @return {?}
              */
              function () {
                return observer.next(index);
              });
            });
          });
        });
        /**
         * A stream that emits whenever the rendered range changes.
         */

        _this15.renderedRangeStream = _this15._renderedRangeSubject.asObservable();
        /**
         * The total size of all content (in pixels), including content that is not currently rendered.
         */

        _this15._totalContentSize = 0;
        /**
         * A string representing the `style.width` property value to be used for the spacer element.
         */

        _this15._totalContentWidth = '';
        /**
         * A string representing the `style.height` property value to be used for the spacer element.
         */

        _this15._totalContentHeight = '';
        /**
         * The currently rendered range of indices.
         */

        _this15._renderedRange = {
          start: 0,
          end: 0
        };
        /**
         * The length of the data bound to this viewport (in number of items).
         */

        _this15._dataLength = 0;
        /**
         * The size of the viewport (in pixels).
         */

        _this15._viewportSize = 0;
        /**
         * The last rendered content offset that was set.
         */

        _this15._renderedContentOffset = 0;
        /**
         * Whether the last rendered content offset was to the end of the content (and therefore needs to
         * be rewritten as an offset to the start of the content).
         */

        _this15._renderedContentOffsetNeedsRewrite = false;
        /**
         * Whether there is a pending change detection cycle.
         */

        _this15._isChangeDetectionPending = false;
        /**
         * A list of functions to run after the next change detection cycle.
         */

        _this15._runAfterChangeDetection = [];
        /**
         * Subscription to changes in the viewport size.
         */

        _this15._viewportChanges = rxjs__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;

        if (!_scrollStrategy) {
          throw Error('Error: cdk-virtual-scroll-viewport requires the "itemSize" property to be set.');
        } // @breaking-change 11.0.0 Remove null check for `viewportRuler`.


        if (viewportRuler) {
          _this15._viewportChanges = viewportRuler.change().subscribe(
          /**
          * @return {?}
          */
          function () {
            _this15.checkViewportSize();
          });
        }

        return _this15;
      }
      /**
       * The direction the viewport scrolls.
       * @return {?}
       */


      _createClass(CdkVirtualScrollViewport, [{
        key: "ngOnInit",

        /**
         * @return {?}
         */
        value: function ngOnInit() {
          var _this16 = this;

          _get(_getPrototypeOf(CdkVirtualScrollViewport.prototype), "ngOnInit", this).call(this); // It's still too early to measure the viewport at this point. Deferring with a promise allows
          // the Viewport to be rendered with the correct size before we measure. We run this outside the
          // zone to avoid causing more change detection cycles. We handle the change detection loop
          // ourselves instead.


          this.ngZone.runOutsideAngular(
          /**
          * @return {?}
          */
          function () {
            return Promise.resolve().then(
            /**
            * @return {?}
            */
            function () {
              _this16._measureViewportSize();

              _this16._scrollStrategy.attach(_this16);

              _this16.elementScrolled().pipe( // Start off with a fake scroll event so we properly detect our initial position.
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["startWith"])(
              /** @type {?} */
              null), // Collect multiple events into one until the next animation frame. This way if
              // there are multiple scroll events in the same frame we only need to recheck
              // our layout once.
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["auditTime"])(0, SCROLL_SCHEDULER)).subscribe(
              /**
              * @return {?}
              */
              function () {
                return _this16._scrollStrategy.onContentScrolled();
              });

              _this16._markChangeDetectionNeeded();
            });
          });
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.detach();

          this._scrollStrategy.detach(); // Complete all subjects


          this._renderedRangeSubject.complete();

          this._detachedSubject.complete();

          this._viewportChanges.unsubscribe();

          _get(_getPrototypeOf(CdkVirtualScrollViewport.prototype), "ngOnDestroy", this).call(this);
        }
        /**
         * Attaches a `CdkVirtualForOf` to this viewport.
         * @param {?} forOf
         * @return {?}
         */

      }, {
        key: "attach",
        value: function attach(forOf) {
          var _this17 = this;

          if (this._forOf) {
            throw Error('CdkVirtualScrollViewport is already attached.');
          } // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length
          // changes. Run outside the zone to avoid triggering change detection, since we're managing the
          // change detection loop ourselves.


          this.ngZone.runOutsideAngular(
          /**
          * @return {?}
          */
          function () {
            _this17._forOf = forOf;

            _this17._forOf.dataStream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(_this17._detachedSubject)).subscribe(
            /**
            * @param {?} data
            * @return {?}
            */
            function (data) {
              /** @type {?} */
              var newLength = data.length;

              if (newLength !== _this17._dataLength) {
                _this17._dataLength = newLength;

                _this17._scrollStrategy.onDataLengthChanged();
              }

              _this17._doChangeDetection();
            });
          });
        }
        /**
         * Detaches the current `CdkVirtualForOf`.
         * @return {?}
         */

      }, {
        key: "detach",
        value: function detach() {
          this._forOf = null;

          this._detachedSubject.next();
        }
        /**
         * Gets the length of the data bound to this viewport (in number of items).
         * @return {?}
         */

      }, {
        key: "getDataLength",
        value: function getDataLength() {
          return this._dataLength;
        }
        /**
         * Gets the size of the viewport (in pixels).
         * @return {?}
         */

      }, {
        key: "getViewportSize",
        value: function getViewportSize() {
          return this._viewportSize;
        } // TODO(mmalerba): This is technically out of sync with what's really rendered until a render
        // cycle happens. I'm being careful to only call it after the render cycle is complete and before
        // setting it to something else, but its error prone and should probably be split into
        // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.

        /**
         * Get the current rendered range of items.
         * @return {?}
         */

      }, {
        key: "getRenderedRange",
        value: function getRenderedRange() {
          return this._renderedRange;
        }
        /**
         * Sets the total size of all content (in pixels), including content that is not currently
         * rendered.
         * @param {?} size
         * @return {?}
         */

      }, {
        key: "setTotalContentSize",
        value: function setTotalContentSize(size) {
          if (this._totalContentSize !== size) {
            this._totalContentSize = size;

            this._calculateSpacerSize();

            this._markChangeDetectionNeeded();
          }
        }
        /**
         * Sets the currently rendered range of indices.
         * @param {?} range
         * @return {?}
         */

      }, {
        key: "setRenderedRange",
        value: function setRenderedRange(range) {
          var _this18 = this;

          if (!rangesEqual(this._renderedRange, range)) {
            this._renderedRangeSubject.next(this._renderedRange = range);

            this._markChangeDetectionNeeded(
            /**
            * @return {?}
            */
            function () {
              return _this18._scrollStrategy.onContentRendered();
            });
          }
        }
        /**
         * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).
         * @return {?}
         */

      }, {
        key: "getOffsetToRenderedContentStart",
        value: function getOffsetToRenderedContentStart() {
          return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;
        }
        /**
         * Sets the offset from the start of the viewport to either the start or end of the rendered data
         * (in pixels).
         * @param {?} offset
         * @param {?=} to
         * @return {?}
         */

      }, {
        key: "setRenderedContentOffset",
        value: function setRenderedContentOffset(offset) {
          var _this19 = this;

          var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'to-start';
          // For a horizontal viewport in a right-to-left language we need to translate along the x-axis
          // in the negative direction.

          /** @type {?} */
          var isRtl = this.dir && this.dir.value == 'rtl';
          /** @type {?} */

          var isHorizontal = this.orientation == 'horizontal';
          /** @type {?} */

          var axis = isHorizontal ? 'X' : 'Y';
          /** @type {?} */

          var axisDirection = isHorizontal && isRtl ? -1 : 1;
          /** @type {?} */

          var transform = "translate".concat(axis, "(").concat(Number(axisDirection * offset), "px)");
          this._renderedContentOffset = offset;

          if (to === 'to-end') {
            transform += " translate".concat(axis, "(-100%)"); // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise
            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would
            // expand upward).

            this._renderedContentOffsetNeedsRewrite = true;
          }

          if (this._renderedContentTransform != transform) {
            // We know this value is safe because we parse `offset` with `Number()` before passing it
            // into the string.
            this._renderedContentTransform = transform;

            this._markChangeDetectionNeeded(
            /**
            * @return {?}
            */
            function () {
              if (_this19._renderedContentOffsetNeedsRewrite) {
                _this19._renderedContentOffset -= _this19.measureRenderedContentSize();
                _this19._renderedContentOffsetNeedsRewrite = false;

                _this19.setRenderedContentOffset(_this19._renderedContentOffset);
              } else {
                _this19._scrollStrategy.onRenderedOffsetChanged();
              }
            });
          }
        }
        /**
         * Scrolls to the given offset from the start of the viewport. Please note that this is not always
         * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left
         * direction, this would be the equivalent of setting a fictional `scrollRight` property.
         * @param {?} offset The offset to scroll to.
         * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.
         * @return {?}
         */

      }, {
        key: "scrollToOffset",
        value: function scrollToOffset(offset) {
          var behavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';

          /** @type {?} */
          var options = {
            behavior: behavior
          };

          if (this.orientation === 'horizontal') {
            options.start = offset;
          } else {
            options.top = offset;
          }

          this.scrollTo(options);
        }
        /**
         * Scrolls to the offset for the given index.
         * @param {?} index The index of the element to scroll to.
         * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.
         * @return {?}
         */

      }, {
        key: "scrollToIndex",
        value: function scrollToIndex(index) {
          var behavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';

          this._scrollStrategy.scrollToIndex(index, behavior);
        }
        /**
         * Gets the current scroll offset from the start of the viewport (in pixels).
         * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'
         *     in horizontal mode.
         * @return {?}
         */

      }, {
        key: "measureScrollOffset",
        value: function measureScrollOffset(from) {
          return from ? _get(_getPrototypeOf(CdkVirtualScrollViewport.prototype), "measureScrollOffset", this).call(this, from) : _get(_getPrototypeOf(CdkVirtualScrollViewport.prototype), "measureScrollOffset", this).call(this, this.orientation === 'horizontal' ? 'start' : 'top');
        }
        /**
         * Measure the combined size of all of the rendered items.
         * @return {?}
         */

      }, {
        key: "measureRenderedContentSize",
        value: function measureRenderedContentSize() {
          /** @type {?} */
          var contentEl = this._contentWrapper.nativeElement;
          return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;
        }
        /**
         * Measure the total combined size of the given range. Throws if the range includes items that are
         * not rendered.
         * @param {?} range
         * @return {?}
         */

      }, {
        key: "measureRangeSize",
        value: function measureRangeSize(range) {
          if (!this._forOf) {
            return 0;
          }

          return this._forOf.measureRangeSize(range, this.orientation);
        }
        /**
         * Update the viewport dimensions and re-render.
         * @return {?}
         */

      }, {
        key: "checkViewportSize",
        value: function checkViewportSize() {
          // TODO: Cleanup later when add logic for handling content resize
          this._measureViewportSize();

          this._scrollStrategy.onDataLengthChanged();
        }
        /**
         * Measure the viewport size.
         * @private
         * @return {?}
         */

      }, {
        key: "_measureViewportSize",
        value: function _measureViewportSize() {
          /** @type {?} */
          var viewportEl = this.elementRef.nativeElement;
          this._viewportSize = this.orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;
        }
        /**
         * Queue up change detection to run.
         * @private
         * @param {?=} runAfter
         * @return {?}
         */

      }, {
        key: "_markChangeDetectionNeeded",
        value: function _markChangeDetectionNeeded(runAfter) {
          var _this20 = this;

          if (runAfter) {
            this._runAfterChangeDetection.push(runAfter);
          } // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of
          // properties sequentially we only have to run `_doChangeDetection` once at the end.


          if (!this._isChangeDetectionPending) {
            this._isChangeDetectionPending = true;
            this.ngZone.runOutsideAngular(
            /**
            * @return {?}
            */
            function () {
              return Promise.resolve().then(
              /**
              * @return {?}
              */
              function () {
                _this20._doChangeDetection();
              });
            });
          }
        }
        /**
         * Run change detection.
         * @private
         * @return {?}
         */

      }, {
        key: "_doChangeDetection",
        value: function _doChangeDetection() {
          var _this21 = this;

          this._isChangeDetectionPending = false; // Apply the content transform. The transform can't be set via an Angular binding because
          // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of
          // string literals, a variable that can only be 'X' or 'Y', and user input that is run through
          // the `Number` function first to coerce it to a numeric value.

          this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform; // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection
          // from the root, since the repeated items are content projected in. Calling `detectChanges`
          // instead does not properly check the projected content.

          this.ngZone.run(
          /**
          * @return {?}
          */
          function () {
            return _this21._changeDetectorRef.markForCheck();
          });
          /** @type {?} */

          var runAfterChangeDetection = this._runAfterChangeDetection;
          this._runAfterChangeDetection = [];

          var _iterator2 = _createForOfIteratorHelper(runAfterChangeDetection),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var fn = _step2.value;
              fn();
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
        /**
         * Calculates the `style.width` and `style.height` for the spacer element.
         * @private
         * @return {?}
         */

      }, {
        key: "_calculateSpacerSize",
        value: function _calculateSpacerSize() {
          this._totalContentHeight = this.orientation === 'horizontal' ? '' : "".concat(this._totalContentSize, "px");
          this._totalContentWidth = this.orientation === 'horizontal' ? "".concat(this._totalContentSize, "px") : '';
        }
      }, {
        key: "orientation",
        get: function get() {
          return this._orientation;
        }
        /**
         * @param {?} orientation
         * @return {?}
         */
        ,
        set: function set(orientation) {
          if (this._orientation !== orientation) {
            this._orientation = orientation;

            this._calculateSpacerSize();
          }
        }
      }]);

      return CdkVirtualScrollViewport;
    }(CdkScrollable);

    CdkVirtualScrollViewport.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
      args: [{
        selector: 'cdk-virtual-scroll-viewport',
        template: "<!--\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\n  position.\n-->\n<div #contentWrapper class=\"cdk-virtual-scroll-content-wrapper\">\n  <ng-content></ng-content>\n</div>\n<!--\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\n  so that the scrollbar captures the size of the entire data set.\n-->\n<div class=\"cdk-virtual-scroll-spacer\"\n     [style.width]=\"_totalContentWidth\" [style.height]=\"_totalContentHeight\"></div>\n",
        host: {
          'class': 'cdk-virtual-scroll-viewport',
          '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === "horizontal"',
          '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== "horizontal"'
        },
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].None,
        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectionStrategy"].OnPush,
        providers: [{
          provide: CdkScrollable,
          useExisting: CdkVirtualScrollViewport
        }],
        styles: ["cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\n"]
      }]
    }];
    /** @nocollapse */

    CdkVirtualScrollViewport.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [VIRTUAL_SCROLL_STRATEGY]
        }]
      }, {
        type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__["Directionality"],
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]
        }]
      }, {
        type: ScrollDispatcher
      }, {
        type: ViewportRuler,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]
        }]
      }];
    };

    CdkVirtualScrollViewport.propDecorators = {
      orientation: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
      }],
      scrolledIndexChange: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
      }],
      _contentWrapper: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"],
        args: ['contentWrapper', {
          static: true
        }]
      }]
    };

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/virtual-for-of.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Helper to extract size from a DOM Node.
     * @param {?} orientation
     * @param {?} node
     * @return {?}
     */


    function getSize(orientation, node) {
      /** @type {?} */
      var el =
      /** @type {?} */
      node;

      if (!el.getBoundingClientRect) {
        return 0;
      }
      /** @type {?} */


      var rect = el.getBoundingClientRect();
      return orientation == 'horizontal' ? rect.width : rect.height;
    }
    /**
     * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling
     * container.
     * @template T
     */


    var CdkVirtualForOf =
    /*#__PURE__*/
    function () {
      /**
       * @param {?} _viewContainerRef
       * @param {?} _template
       * @param {?} _differs
       * @param {?} _viewport
       * @param {?} ngZone
       */
      function CdkVirtualForOf(_viewContainerRef, _template, _differs, _viewport, ngZone) {
        var _this22 = this;

        _classCallCheck(this, CdkVirtualForOf);

        this._viewContainerRef = _viewContainerRef;
        this._template = _template;
        this._differs = _differs;
        this._viewport = _viewport;
        /**
         * Emits when the rendered view of the data changes.
         */

        this.viewChange = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        /**
         * Subject that emits when a new DataSource instance is given.
         */

        this._dataSourceChanges = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        /**
         * The size of the cache used to store templates that are not being used for re-use later.
         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.
         */

        this.cdkVirtualForTemplateCacheSize = 20;
        /**
         * Emits whenever the data in the current DataSource changes.
         */

        this.dataStream = this._dataSourceChanges.pipe( // Start off with null `DataSource`.
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["startWith"])(
        /** @type {?} */
        null), // Bundle up the previous and current data sources so we can work with both.
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["pairwise"])(), // Use `_changeDataSource` to disconnect from the previous data source and connect to the
        // new one, passing back a stream of data changes which we run through `switchMap` to give
        // us a data stream that emits the latest data from whatever the current `DataSource` is.
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(
        /**
        * @param {?} __0
        * @return {?}
        */
        function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              prev = _ref2[0],
              cur = _ref2[1];

          return _this22._changeDataSource(prev, cur);
        }), // Replay the last emitted data when someone subscribes.
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["shareReplay"])(1));
        /**
         * The differ used to calculate changes to the data.
         */

        this._differ = null;
        /**
         * The template cache used to hold on ot template instancess that have been stamped out, but don't
         * currently need to be rendered. These instances will be reused in the future rather than
         * stamping out brand new ones.
         */

        this._templateCache = [];
        /**
         * Whether the rendered data should be updated during the next ngDoCheck cycle.
         */

        this._needsUpdate = false;
        this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.dataStream.subscribe(
        /**
        * @param {?} data
        * @return {?}
        */
        function (data) {
          _this22._data = data;

          _this22._onRenderedDataChange();
        });

        this._viewport.renderedRangeStream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(this._destroyed)).subscribe(
        /**
        * @param {?} range
        * @return {?}
        */
        function (range) {
          _this22._renderedRange = range;
          ngZone.run(
          /**
          * @return {?}
          */
          function () {
            return _this22.viewChange.next(_this22._renderedRange);
          });

          _this22._onRenderedDataChange();
        });

        this._viewport.attach(this);
      }
      /**
       * The DataSource to display.
       * @return {?}
       */


      _createClass(CdkVirtualForOf, [{
        key: "measureRangeSize",

        /**
         * Measures the combined size (width for horizontal orientation, height for vertical) of all items
         * in the specified range. Throws an error if the range includes items that are not currently
         * rendered.
         * @param {?} range
         * @param {?} orientation
         * @return {?}
         */
        value: function measureRangeSize(range, orientation) {
          if (range.start >= range.end) {
            return 0;
          }

          if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {
            throw Error("Error: attempted to measure an item that isn't rendered.");
          } // The index into the list of rendered views for the first item in the range.

          /** @type {?} */


          var renderedStartIndex = range.start - this._renderedRange.start; // The length of the range we're measuring.

          /** @type {?} */

          var rangeLen = range.end - range.start; // Loop over all root nodes for all items in the range and sum up their size.

          /** @type {?} */

          var totalSize = 0;
          /** @type {?} */

          var i = rangeLen;

          while (i--) {
            /** @type {?} */
            var view =
            /** @type {?} */
            this._viewContainerRef.get(i + renderedStartIndex);
            /** @type {?} */


            var j = view ? view.rootNodes.length : 0;

            while (j--) {
              totalSize += getSize(orientation,
              /** @type {?} */
              view.rootNodes[j]);
            }
          }

          return totalSize;
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngDoCheck",
        value: function ngDoCheck() {
          if (this._differ && this._needsUpdate) {
            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of
            // this list being rendered (can use simpler algorithm) vs needs update due to data actually
            // changing (need to do this diff).

            /** @type {?} */
            var changes = this._differ.diff(this._renderedItems);

            if (!changes) {
              this._updateContext();
            } else {
              this._applyChanges(changes);
            }

            this._needsUpdate = false;
          }
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this._viewport.detach();

          this._dataSourceChanges.next();

          this._dataSourceChanges.complete();

          this.viewChange.complete();

          this._destroyed.next();

          this._destroyed.complete();

          var _iterator3 = _createForOfIteratorHelper(this._templateCache),
              _step3;

          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var view = _step3.value;
              view.destroy();
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }
        /**
         * React to scroll state changes in the viewport.
         * @private
         * @return {?}
         */

      }, {
        key: "_onRenderedDataChange",
        value: function _onRenderedDataChange() {
          if (!this._renderedRange) {
            return;
          }

          this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);

          if (!this._differ) {
            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);
          }

          this._needsUpdate = true;
        }
        /**
         * Swap out one `DataSource` for another.
         * @private
         * @param {?} oldDs
         * @param {?} newDs
         * @return {?}
         */

      }, {
        key: "_changeDataSource",
        value: function _changeDataSource(oldDs, newDs) {
          if (oldDs) {
            oldDs.disconnect(this);
          }

          this._needsUpdate = true;
          return newDs ? newDs.connect(this) : Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])();
        }
        /**
         * Update the `CdkVirtualForOfContext` for all views.
         * @private
         * @return {?}
         */

      }, {
        key: "_updateContext",
        value: function _updateContext() {
          /** @type {?} */
          var count = this._data.length;
          /** @type {?} */

          var i = this._viewContainerRef.length;

          while (i--) {
            /** @type {?} */
            var view =
            /** @type {?} */
            this._viewContainerRef.get(i);

            view.context.index = this._renderedRange.start + i;
            view.context.count = count;

            this._updateComputedContextProperties(view.context);

            view.detectChanges();
          }
        }
        /**
         * Apply changes to the DOM.
         * @private
         * @param {?} changes
         * @return {?}
         */

      }, {
        key: "_applyChanges",
        value: function _applyChanges(changes) {
          var _this23 = this;

          // Rearrange the views to put them in the right location.
          changes.forEachOperation(
          /**
          * @param {?} record
          * @param {?} adjustedPreviousIndex
          * @param {?} currentIndex
          * @return {?}
          */
          function (record, adjustedPreviousIndex, currentIndex) {
            if (record.previousIndex == null) {
              // Item added.
              // Item added.

              /** @type {?} */
              var view = _this23._insertViewForNewItem(
              /** @type {?} */
              currentIndex);

              view.context.$implicit = record.item;
            } else if (currentIndex == null) {
              // Item removed.
              _this23._cacheView(_this23._detachView(
              /** @type {?} */
              adjustedPreviousIndex));
            } else {
              // Item moved.
              // Item moved.

              /** @type {?} */
              var _view =
              /** @type {?} */
              _this23._viewContainerRef.get(
              /** @type {?} */
              adjustedPreviousIndex);

              _this23._viewContainerRef.move(_view, currentIndex);

              _view.context.$implicit = record.item;
            }
          }); // Update $implicit for any items that had an identity change.

          changes.forEachIdentityChange(
          /**
          * @param {?} record
          * @return {?}
          */
          function (record) {
            /** @type {?} */
            var view =
            /** @type {?} */
            _this23._viewContainerRef.get(
            /** @type {?} */
            record.currentIndex);

            view.context.$implicit = record.item;
          }); // Update the context variables on all items.

          /** @type {?} */

          var count = this._data.length;
          /** @type {?} */

          var i = this._viewContainerRef.length;

          while (i--) {
            /** @type {?} */
            var view =
            /** @type {?} */
            this._viewContainerRef.get(i);

            view.context.index = this._renderedRange.start + i;
            view.context.count = count;

            this._updateComputedContextProperties(view.context);
          }
        }
        /**
         * Cache the given detached view.
         * @private
         * @param {?} view
         * @return {?}
         */

      }, {
        key: "_cacheView",
        value: function _cacheView(view) {
          if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {
            this._templateCache.push(view);
          } else {
            /** @type {?} */
            var index = this._viewContainerRef.indexOf(view); // It's very unlikely that the index will ever be -1, but just in case,
            // destroy the view on its own, otherwise destroy it through the
            // container to ensure that all the references are removed.


            if (index === -1) {
              view.destroy();
            } else {
              this._viewContainerRef.remove(index);
            }
          }
        }
        /**
         * Inserts a view for a new item, either from the cache or by creating a new one.
         * @private
         * @param {?} index
         * @return {?}
         */

      }, {
        key: "_insertViewForNewItem",
        value: function _insertViewForNewItem(index) {
          return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);
        }
        /**
         * Update the computed properties on the `CdkVirtualForOfContext`.
         * @private
         * @param {?} context
         * @return {?}
         */

      }, {
        key: "_updateComputedContextProperties",
        value: function _updateComputedContextProperties(context) {
          context.first = context.index === 0;
          context.last = context.index === context.count - 1;
          context.even = context.index % 2 === 0;
          context.odd = !context.even;
        }
        /**
         * Creates a new embedded view and moves it to the given index
         * @private
         * @param {?} index
         * @return {?}
         */

      }, {
        key: "_createEmbeddedViewAt",
        value: function _createEmbeddedViewAt(index) {
          // Note that it's important that we insert the item directly at the proper index,
          // rather than inserting it and the moving it in place, because if there's a directive
          // on the same node that injects the `ViewContainerRef`, Angular will insert another
          // comment node which can throw off the move when it's being repeated for all items.
          return this._viewContainerRef.createEmbeddedView(this._template, {
            $implicit:
            /** @type {?} */
            null,
            // It's guaranteed that the iterable is not "undefined" or "null" because we only
            // generate views for elements if the "cdkVirtualForOf" iterable has elements.
            cdkVirtualForOf:
            /** @type {?} */
            this._cdkVirtualForOf,
            index: -1,
            count: -1,
            first: false,
            last: false,
            odd: false,
            even: false
          }, index);
        }
        /**
         * Inserts a recycled view from the cache at the given index.
         * @private
         * @param {?} index
         * @return {?}
         */

      }, {
        key: "_insertViewFromCache",
        value: function _insertViewFromCache(index) {
          /** @type {?} */
          var cachedView = this._templateCache.pop();

          if (cachedView) {
            this._viewContainerRef.insert(cachedView, index);
          }

          return cachedView || null;
        }
        /**
         * Detaches the embedded view at the given index.
         * @private
         * @param {?} index
         * @return {?}
         */

      }, {
        key: "_detachView",
        value: function _detachView(index) {
          return (
            /** @type {?} */
            this._viewContainerRef.detach(index)
          );
        }
      }, {
        key: "cdkVirtualForOf",
        get: function get() {
          return this._cdkVirtualForOf;
        }
        /**
         * @param {?} value
         * @return {?}
         */
        ,
        set: function set(value) {
          this._cdkVirtualForOf = value;

          if (Object(_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_7__["isDataSource"])(value)) {
            this._dataSourceChanges.next(value);
          } else {
            // Slice the value if its an NgIterable to ensure we're working with an array.
            this._dataSourceChanges.next(new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_7__["ArrayDataSource"](Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["isObservable"])(value) ? value : Array.prototype.slice.call(value || [])));
          }
        }
        /**
         * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and
         * the item and produces a value to be used as the item's identity when tracking changes.
         * @return {?}
         */

      }, {
        key: "cdkVirtualForTrackBy",
        get: function get() {
          return this._cdkVirtualForTrackBy;
        }
        /**
         * @param {?} fn
         * @return {?}
         */
        ,
        set: function set(fn) {
          var _this24 = this;

          this._needsUpdate = true;
          this._cdkVirtualForTrackBy = fn ?
          /**
          * @param {?} index
          * @param {?} item
          * @return {?}
          */
          function (index, item) {
            return fn(index + (_this24._renderedRange ? _this24._renderedRange.start : 0), item);
          } : undefined;
        }
        /**
         * The template used to stamp out new elements.
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "cdkVirtualForTemplate",
        set: function set(value) {
          if (value) {
            this._needsUpdate = true;
            this._template = value;
          }
        }
      }]);

      return CdkVirtualForOf;
    }();

    CdkVirtualForOf.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
      args: [{
        selector: '[cdkVirtualFor][cdkVirtualForOf]'
      }]
    }];
    /** @nocollapse */

    CdkVirtualForOf.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"]
      }, {
        type: CdkVirtualScrollViewport,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["SkipSelf"]
        }]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
      }];
    };

    CdkVirtualForOf.propDecorators = {
      cdkVirtualForOf: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
      }],
      cdkVirtualForTrackBy: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
      }],
      cdkVirtualForTemplate: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
      }],
      cdkVirtualForTemplateCacheSize: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
      }]
    };

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/scrolling-module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    var CdkScrollableModule = function CdkScrollableModule() {
      _classCallCheck(this, CdkScrollableModule);
    };

    CdkScrollableModule.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
      args: [{
        exports: [CdkScrollable],
        declarations: [CdkScrollable]
      }]
    }];

    var ScrollingModule = function ScrollingModule() {
      _classCallCheck(this, ScrollingModule);
    };

    ScrollingModule.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
      args: [{
        imports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__["BidiModule"], _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_4__["PlatformModule"], CdkScrollableModule],
        exports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__["BidiModule"], CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport],
        declarations: [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]
      }]
    }];
    /**
     * @fileoverview added by tsickle
     * Generated from: src/cdk/scrolling/public-api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=scrolling.js.map

    /***/
  },

  /***/
  "./node_modules/@fullcalendar/core/main.js":
  /*!*************************************************!*\
    !*** ./node_modules/@fullcalendar/core/main.js ***!
    \*************************************************/

  /*! no static exports found */

  /***/
  function node_modulesFullcalendarCoreMainJs(module, exports, __webpack_require__) {
    /*!
    FullCalendar Core Package v4.0.2
    Docs & License: https://fullcalendar.io/
    (c) 2019 Adam Shaw
    */
    (function (global, factory) {
      true ? factory(exports) : undefined;
    })(this, function (exports) {
      'use strict'; // Creating
      // ----------------------------------------------------------------------------------------------------------------

      var elementPropHash = {
        className: true,
        colSpan: true,
        rowSpan: true
      };
      var containerTagHash = {
        '<tr': 'tbody',
        '<td': 'tr'
      };

      function createElement(tagName, attrs, content) {
        var el = document.createElement(tagName);

        if (attrs) {
          for (var attrName in attrs) {
            if (attrName === 'style') {
              applyStyle(el, attrs[attrName]);
            } else if (elementPropHash[attrName]) {
              el[attrName] = attrs[attrName];
            } else {
              el.setAttribute(attrName, attrs[attrName]);
            }
          }
        }

        if (typeof content === 'string') {
          el.innerHTML = content; // shortcut. no need to process HTML in any way
        } else if (content != null) {
          appendToElement(el, content);
        }

        return el;
      }

      function htmlToElement(html) {
        html = html.trim();
        var container = document.createElement(computeContainerTag(html));
        container.innerHTML = html;
        return container.firstChild;
      }

      function htmlToElements(html) {
        return Array.prototype.slice.call(htmlToNodeList(html));
      }

      function htmlToNodeList(html) {
        html = html.trim();
        var container = document.createElement(computeContainerTag(html));
        container.innerHTML = html;
        return container.childNodes;
      } // assumes html already trimmed and tag names are lowercase


      function computeContainerTag(html) {
        return containerTagHash[html.substr(0, 3) // faster than using regex
        ] || 'div';
      }

      function appendToElement(el, content) {
        var childNodes = normalizeContent(content);

        for (var i = 0; i < childNodes.length; i++) {
          el.appendChild(childNodes[i]);
        }
      }

      function prependToElement(parent, content) {
        var newEls = normalizeContent(content);
        var afterEl = parent.firstChild || null; // if no firstChild, will append to end, but that's okay, b/c there were no children

        for (var i = 0; i < newEls.length; i++) {
          parent.insertBefore(newEls[i], afterEl);
        }
      }

      function insertAfterElement(refEl, content) {
        var newEls = normalizeContent(content);
        var afterEl = refEl.nextSibling || null;

        for (var i = 0; i < newEls.length; i++) {
          refEl.parentNode.insertBefore(newEls[i], afterEl);
        }
      }

      function normalizeContent(content) {
        var els;

        if (typeof content === 'string') {
          els = htmlToElements(content);
        } else if (content instanceof Node) {
          els = [content];
        } else {
          // Node[] or NodeList
          els = Array.prototype.slice.call(content);
        }

        return els;
      }

      function removeElement(el) {
        if (el.parentNode) {
          el.parentNode.removeChild(el);
        }
      } // Querying
      // ----------------------------------------------------------------------------------------------------------------
      // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest


      var matchesMethod = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.msMatchesSelector;

      var closestMethod = Element.prototype.closest || function (selector) {
        // polyfill
        var el = this;

        if (!document.documentElement.contains(el)) {
          return null;
        }

        do {
          if (elementMatches(el, selector)) {
            return el;
          }

          el = el.parentElement || el.parentNode;
        } while (el !== null && el.nodeType === 1);

        return null;
      };

      function elementClosest(el, selector) {
        return closestMethod.call(el, selector);
      }

      function elementMatches(el, selector) {
        return matchesMethod.call(el, selector);
      } // accepts multiple subject els
      // returns a real array. good for methods like forEach


      function findElements(container, selector) {
        var containers = container instanceof HTMLElement ? [container] : container;
        var allMatches = [];

        for (var i = 0; i < containers.length; i++) {
          var matches = containers[i].querySelectorAll(selector);

          for (var j = 0; j < matches.length; j++) {
            allMatches.push(matches[j]);
          }
        }

        return allMatches;
      } // accepts multiple subject els
      // only queries direct child elements


      function findChildren(parent, selector) {
        var parents = parent instanceof HTMLElement ? [parent] : parent;
        var allMatches = [];

        for (var i = 0; i < parents.length; i++) {
          var childNodes = parents[i].children; // only ever elements

          for (var j = 0; j < childNodes.length; j++) {
            var childNode = childNodes[j];

            if (!selector || elementMatches(childNode, selector)) {
              allMatches.push(childNode);
            }
          }
        }

        return allMatches;
      } // Attributes
      // ----------------------------------------------------------------------------------------------------------------


      function forceClassName(el, className, bool) {
        if (bool) {
          el.classList.add(className);
        } else {
          el.classList.remove(className);
        }
      } // Style
      // ----------------------------------------------------------------------------------------------------------------


      var PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;

      function applyStyle(el, props) {
        for (var propName in props) {
          applyStyleProp(el, propName, props[propName]);
        }
      }

      function applyStyleProp(el, name, val) {
        if (val == null) {
          el.style[name] = '';
        } else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {
          el.style[name] = val + 'px';
        } else {
          el.style[name] = val;
        }
      }

      function pointInsideRect(point, rect) {
        return point.left >= rect.left && point.left < rect.right && point.top >= rect.top && point.top < rect.bottom;
      } // Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false


      function intersectRects(rect1, rect2) {
        var res = {
          left: Math.max(rect1.left, rect2.left),
          right: Math.min(rect1.right, rect2.right),
          top: Math.max(rect1.top, rect2.top),
          bottom: Math.min(rect1.bottom, rect2.bottom)
        };

        if (res.left < res.right && res.top < res.bottom) {
          return res;
        }

        return false;
      }

      function translateRect(rect, deltaX, deltaY) {
        return {
          left: rect.left + deltaX,
          right: rect.right + deltaX,
          top: rect.top + deltaY,
          bottom: rect.bottom + deltaY
        };
      } // Returns a new point that will have been moved to reside within the given rectangle


      function constrainPoint(point, rect) {
        return {
          left: Math.min(Math.max(point.left, rect.left), rect.right),
          top: Math.min(Math.max(point.top, rect.top), rect.bottom)
        };
      } // Returns a point that is the center of the given rectangle


      function getRectCenter(rect) {
        return {
          left: (rect.left + rect.right) / 2,
          top: (rect.top + rect.bottom) / 2
        };
      } // Subtracts point2's coordinates from point1's coordinates, returning a delta


      function diffPoints(point1, point2) {
        return {
          left: point1.left - point2.left,
          top: point1.top - point2.top
        };
      } // Logic for determining if, when the element is right-to-left, the scrollbar appears on the left side


      var isRtlScrollbarOnLeft = null;

      function getIsRtlScrollbarOnLeft() {
        if (isRtlScrollbarOnLeft === null) {
          isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft();
        }

        return isRtlScrollbarOnLeft;
      }

      function computeIsRtlScrollbarOnLeft() {
        var outerEl = createElement('div', {
          style: {
            position: 'absolute',
            top: -1000,
            left: 0,
            border: 0,
            padding: 0,
            overflow: 'scroll',
            direction: 'rtl'
          }
        }, '<div></div>');
        document.body.appendChild(outerEl);
        var innerEl = outerEl.firstChild;
        var res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left;
        removeElement(outerEl);
        return res;
      } // The scrollbar width computations in computeEdges are sometimes flawed when it comes to
      // retina displays, rounding, and IE11. Massage them into a usable value.


      function sanitizeScrollbarWidth(width) {
        width = Math.max(0, width); // no negatives

        width = Math.round(width);
        return width;
      }

      function computeEdges(el, getPadding) {
        if (getPadding === void 0) {
          getPadding = false;
        }

        var computedStyle = window.getComputedStyle(el);
        var borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0;
        var borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0;
        var borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0;
        var borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;
        var scrollbarLeftRight = sanitizeScrollbarWidth(el.offsetWidth - el.clientWidth - borderLeft - borderRight);
        var scrollbarBottom = sanitizeScrollbarWidth(el.offsetHeight - el.clientHeight - borderTop - borderBottom);
        var res = {
          borderLeft: borderLeft,
          borderRight: borderRight,
          borderTop: borderTop,
          borderBottom: borderBottom,
          scrollbarBottom: scrollbarBottom,
          scrollbarLeft: 0,
          scrollbarRight: 0
        };

        if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') {
          // is the scrollbar on the left side?
          res.scrollbarLeft = scrollbarLeftRight;
        } else {
          res.scrollbarRight = scrollbarLeftRight;
        }

        if (getPadding) {
          res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;
          res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;
          res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;
          res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;
        }

        return res;
      }

      function computeInnerRect(el, goWithinPadding) {
        if (goWithinPadding === void 0) {
          goWithinPadding = false;
        }

        var outerRect = computeRect(el);
        var edges = computeEdges(el, goWithinPadding);
        var res = {
          left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,
          right: outerRect.right - edges.borderRight - edges.scrollbarRight,
          top: outerRect.top + edges.borderTop,
          bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom
        };

        if (goWithinPadding) {
          res.left += edges.paddingLeft;
          res.right -= edges.paddingRight;
          res.top += edges.paddingTop;
          res.bottom -= edges.paddingBottom;
        }

        return res;
      }

      function computeRect(el) {
        var rect = el.getBoundingClientRect();
        return {
          left: rect.left + window.pageXOffset,
          top: rect.top + window.pageYOffset,
          right: rect.right + window.pageXOffset,
          bottom: rect.bottom + window.pageYOffset
        };
      }

      function computeViewportRect() {
        return {
          left: window.pageXOffset,
          right: window.pageXOffset + document.documentElement.clientWidth,
          top: window.pageYOffset,
          bottom: window.pageYOffset + document.documentElement.clientHeight
        };
      }

      function computeHeightAndMargins(el) {
        var computed = window.getComputedStyle(el);
        return el.getBoundingClientRect().height + parseInt(computed.marginTop, 10) + parseInt(computed.marginBottom, 10);
      } // does not return window


      function getClippingParents(el) {
        var parents = [];

        while (el instanceof HTMLElement) {
          // will stop when gets to document or null
          var computedStyle = window.getComputedStyle(el);

          if (computedStyle.position === 'fixed') {
            break;
          }

          if (/(auto|scroll)/.test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {
            parents.push(el);
          }

          el = el.parentNode;
        }

        return parents;
      }

      function computeClippingRect(el) {
        return getClippingParents(el).map(function (el) {
          return computeInnerRect(el);
        }).concat(computeViewportRect()).reduce(function (rect0, rect1) {
          return intersectRects(rect0, rect1) || rect1; // should always intersect
        });
      } // Stops a mouse/touch event from doing it's native browser action


      function preventDefault(ev) {
        ev.preventDefault();
      } // Event Delegation
      // ----------------------------------------------------------------------------------------------------------------


      function listenBySelector(container, eventType, selector, handler) {
        function realHandler(ev) {
          var matchedChild = elementClosest(ev.target, selector);

          if (matchedChild) {
            handler.call(matchedChild, ev, matchedChild);
          }
        }

        container.addEventListener(eventType, realHandler);
        return function () {
          container.removeEventListener(eventType, realHandler);
        };
      }

      function listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {
        var currentMatchedChild;
        return listenBySelector(container, 'mouseover', selector, function (ev, matchedChild) {
          if (matchedChild !== currentMatchedChild) {
            currentMatchedChild = matchedChild;
            onMouseEnter(ev, matchedChild);

            var realOnMouseLeave_1 = function realOnMouseLeave_1(ev) {
              currentMatchedChild = null;
              onMouseLeave(ev, matchedChild);
              matchedChild.removeEventListener('mouseleave', realOnMouseLeave_1);
            }; // listen to the next mouseleave, and then unattach


            matchedChild.addEventListener('mouseleave', realOnMouseLeave_1);
          }
        });
      } // Animation
      // ----------------------------------------------------------------------------------------------------------------


      var transitionEventNames = ['webkitTransitionEnd', 'otransitionend', 'oTransitionEnd', 'msTransitionEnd', 'transitionend']; // triggered only when the next single subsequent transition finishes

      function whenTransitionDone(el, callback) {
        var realCallback = function realCallback(ev) {
          callback(ev);
          transitionEventNames.forEach(function (eventName) {
            el.removeEventListener(eventName, realCallback);
          });
        };

        transitionEventNames.forEach(function (eventName) {
          el.addEventListener(eventName, realCallback); // cross-browser way to determine when the transition finishes
        });
      }

      var DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']; // Adding

      function addWeeks(m, n) {
        var a = dateToUtcArray(m);
        a[2] += n * 7;
        return arrayToUtcDate(a);
      }

      function addDays(m, n) {
        var a = dateToUtcArray(m);
        a[2] += n;
        return arrayToUtcDate(a);
      }

      function addMs(m, n) {
        var a = dateToUtcArray(m);
        a[6] += n;
        return arrayToUtcDate(a);
      } // Diffing (all return floats)


      function diffWeeks(m0, m1) {
        return diffDays(m0, m1) / 7;
      }

      function diffDays(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24);
      }

      function diffHours(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60);
      }

      function diffMinutes(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60);
      }

      function diffSeconds(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / 1000;
      }

      function diffDayAndTime(m0, m1) {
        var m0day = startOfDay(m0);
        var m1day = startOfDay(m1);
        return {
          years: 0,
          months: 0,
          days: Math.round(diffDays(m0day, m1day)),
          milliseconds: m1.valueOf() - m1day.valueOf() - (m0.valueOf() - m0day.valueOf())
        };
      } // Diffing Whole Units


      function diffWholeWeeks(m0, m1) {
        var d = diffWholeDays(m0, m1);

        if (d !== null && d % 7 === 0) {
          return d / 7;
        }

        return null;
      }

      function diffWholeDays(m0, m1) {
        if (timeAsMs(m0) === timeAsMs(m1)) {
          return Math.round(diffDays(m0, m1));
        }

        return null;
      } // Start-Of


      function startOfDay(m) {
        return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate()]);
      }

      function startOfHour(m) {
        return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours()]);
      }

      function startOfMinute(m) {
        return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours(), m.getUTCMinutes()]);
      }

      function startOfSecond(m) {
        return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours(), m.getUTCMinutes(), m.getUTCSeconds()]);
      } // Week Computation


      function weekOfYear(marker, dow, doy) {
        var y = marker.getUTCFullYear();
        var w = weekOfGivenYear(marker, y, dow, doy);

        if (w < 1) {
          return weekOfGivenYear(marker, y - 1, dow, doy);
        }

        var nextW = weekOfGivenYear(marker, y + 1, dow, doy);

        if (nextW >= 1) {
          return Math.min(w, nextW);
        }

        return w;
      }

      function weekOfGivenYear(marker, year, dow, doy) {
        var firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);
        var dayStart = startOfDay(marker);
        var days = Math.round(diffDays(firstWeekStart, dayStart));
        return Math.floor(days / 7) + 1; // zero-indexed
      } // start-of-first-week - start-of-year


      function firstWeekOffset(year, dow, doy) {
        // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        var fwd = 7 + dow - doy; // first-week day local weekday -- which local weekday is fwd

        var fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;
        return -fwdlw + fwd - 1;
      } // Array Conversion


      function dateToLocalArray(date) {
        return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()];
      }

      function arrayToLocalDate(a) {
        return new Date(a[0], a[1] || 0, a[2] == null ? 1 : a[2], // day of month
        a[3] || 0, a[4] || 0, a[5] || 0);
      }

      function dateToUtcArray(date) {
        return [date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds()];
      }

      function arrayToUtcDate(a) {
        // according to web standards (and Safari), a month index is required.
        // massage if only given a year.
        if (a.length === 1) {
          a = a.concat([0]);
        }

        return new Date(Date.UTC.apply(Date, a));
      } // Other Utils


      function isValidDate(m) {
        return !isNaN(m.valueOf());
      }

      function timeAsMs(m) {
        return m.getUTCHours() * 1000 * 60 * 60 + m.getUTCMinutes() * 1000 * 60 + m.getUTCSeconds() * 1000 + m.getUTCMilliseconds();
      }

      var INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds'];
      var PARSE_RE = /^(-?)(?:(\d+)\.)?(\d+):(\d\d)(?::(\d\d)(?:\.(\d\d\d))?)?/; // Parsing and Creation

      function createDuration(input, unit) {
        var _a;

        if (typeof input === 'string') {
          return parseString(input);
        } else if (typeof input === 'object' && input) {
          // non-null object
          return normalizeObject(input);
        } else if (typeof input === 'number') {
          return normalizeObject((_a = {}, _a[unit || 'milliseconds'] = input, _a));
        } else {
          return null;
        }
      }

      function parseString(s) {
        var m = PARSE_RE.exec(s);

        if (m) {
          var sign = m[1] ? -1 : 1;
          return {
            years: 0,
            months: 0,
            days: sign * (m[2] ? parseInt(m[2], 10) : 0),
            milliseconds: sign * ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours
            (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes
            (m[5] ? parseInt(m[5], 10) : 0) * 1000 + ( // seconds
            m[6] ? parseInt(m[6], 10) : 0) // ms
            )
          };
        }

        return null;
      }

      function normalizeObject(obj) {
        return {
          years: obj.years || obj.year || 0,
          months: obj.months || obj.month || 0,
          days: (obj.days || obj.day || 0) + getWeeksFromInput(obj) * 7,
          milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours
          (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes
          (obj.seconds || obj.second || 0) * 1000 + ( // seconds
          obj.milliseconds || obj.millisecond || obj.ms || 0) // ms

        };
      }

      function getWeeksFromInput(obj) {
        return obj.weeks || obj.week || 0;
      } // Equality


      function durationsEqual(d0, d1) {
        return d0.years === d1.years && d0.months === d1.months && d0.days === d1.days && d0.milliseconds === d1.milliseconds;
      }

      function isSingleDay(dur) {
        return dur.years === 0 && dur.months === 0 && dur.days === 1 && dur.milliseconds === 0;
      } // Simple Math


      function addDurations(d0, d1) {
        return {
          years: d0.years + d1.years,
          months: d0.months + d1.months,
          days: d0.days + d1.days,
          milliseconds: d0.milliseconds + d1.milliseconds
        };
      }

      function subtractDurations(d1, d0) {
        return {
          years: d1.years - d0.years,
          months: d1.months - d0.months,
          days: d1.days - d0.days,
          milliseconds: d1.milliseconds - d0.milliseconds
        };
      }

      function multiplyDuration(d, n) {
        return {
          years: d.years * n,
          months: d.months * n,
          days: d.days * n,
          milliseconds: d.milliseconds * n
        };
      } // Conversions
      // "Rough" because they are based on average-case Gregorian months/years


      function asRoughYears(dur) {
        return asRoughDays(dur) / 365;
      }

      function asRoughMonths(dur) {
        return asRoughDays(dur) / 30;
      }

      function asRoughDays(dur) {
        return asRoughMs(dur) / 864e5;
      }

      function asRoughMinutes(dur) {
        return asRoughMs(dur) / (1000 * 60);
      }

      function asRoughSeconds(dur) {
        return asRoughMs(dur) / 1000;
      }

      function asRoughMs(dur) {
        return dur.years * (365 * 864e5) + dur.months * (30 * 864e5) + dur.days * 864e5 + dur.milliseconds;
      } // Advanced Math


      function wholeDivideDurations(numerator, denominator) {
        var res = null;

        for (var i = 0; i < INTERNAL_UNITS.length; i++) {
          var unit = INTERNAL_UNITS[i];

          if (denominator[unit]) {
            var localRes = numerator[unit] / denominator[unit];

            if (!isInt(localRes) || res !== null && res !== localRes) {
              return null;
            }

            res = localRes;
          } else if (numerator[unit]) {
            // needs to divide by something but can't!
            return null;
          }
        }

        return res;
      }

      function greatestDurationDenominator(dur, dontReturnWeeks) {
        var ms = dur.milliseconds;

        if (ms) {
          if (ms % 1000 !== 0) {
            return {
              unit: 'millisecond',
              value: ms
            };
          }

          if (ms % (1000 * 60) !== 0) {
            return {
              unit: 'second',
              value: ms / 1000
            };
          }

          if (ms % (1000 * 60 * 60) !== 0) {
            return {
              unit: 'minute',
              value: ms / (1000 * 60)
            };
          }

          if (ms) {
            return {
              unit: 'hour',
              value: ms / (1000 * 60 * 60)
            };
          }
        }

        if (dur.days) {
          if (!dontReturnWeeks && dur.days % 7 === 0) {
            return {
              unit: 'week',
              value: dur.days / 7
            };
          }

          return {
            unit: 'day',
            value: dur.days
          };
        }

        if (dur.months) {
          return {
            unit: 'month',
            value: dur.months
          };
        }

        if (dur.years) {
          return {
            unit: 'year',
            value: dur.years
          };
        }

        return {
          unit: 'millisecond',
          value: 0
        };
      }
      /* FullCalendar-specific DOM Utilities
      ----------------------------------------------------------------------------------------------------------------------*/
      // Given the scrollbar widths of some other container, create borders/margins on rowEls in order to match the left
      // and right space that was offset by the scrollbars. A 1-pixel border first, then margin beyond that.


      function compensateScroll(rowEl, scrollbarWidths) {
        if (scrollbarWidths.left) {
          applyStyle(rowEl, {
            borderLeftWidth: 1,
            marginLeft: scrollbarWidths.left - 1
          });
        }

        if (scrollbarWidths.right) {
          applyStyle(rowEl, {
            borderRightWidth: 1,
            marginRight: scrollbarWidths.right - 1
          });
        }
      } // Undoes compensateScroll and restores all borders/margins


      function uncompensateScroll(rowEl) {
        applyStyle(rowEl, {
          marginLeft: '',
          marginRight: '',
          borderLeftWidth: '',
          borderRightWidth: ''
        });
      } // Make the mouse cursor express that an event is not allowed in the current area


      function disableCursor() {
        document.body.classList.add('fc-not-allowed');
      } // Returns the mouse cursor to its original look


      function enableCursor() {
        document.body.classList.remove('fc-not-allowed');
      } // Given a total available height to fill, have `els` (essentially child rows) expand to accomodate.
      // By default, all elements that are shorter than the recommended height are expanded uniformly, not considering
      // any other els that are already too tall. if `shouldRedistribute` is on, it considers these tall rows and
      // reduces the available height.


      function distributeHeight(els, availableHeight, shouldRedistribute) {
        // *FLOORING NOTE*: we floor in certain places because zoom can give inaccurate floating-point dimensions,
        // and it is better to be shorter than taller, to avoid creating unnecessary scrollbars.
        var minOffset1 = Math.floor(availableHeight / els.length); // for non-last element

        var minOffset2 = Math.floor(availableHeight - minOffset1 * (els.length - 1)); // for last element *FLOORING NOTE*

        var flexEls = []; // elements that are allowed to expand. array of DOM nodes

        var flexOffsets = []; // amount of vertical space it takes up

        var flexHeights = []; // actual css height

        var usedHeight = 0;
        undistributeHeight(els); // give all elements their natural height
        // find elements that are below the recommended height (expandable).
        // important to query for heights in a single first pass (to avoid reflow oscillation).

        els.forEach(function (el, i) {
          var minOffset = i === els.length - 1 ? minOffset2 : minOffset1;
          var naturalOffset = computeHeightAndMargins(el);

          if (naturalOffset < minOffset) {
            flexEls.push(el);
            flexOffsets.push(naturalOffset);
            flexHeights.push(el.offsetHeight);
          } else {
            // this element stretches past recommended height (non-expandable). mark the space as occupied.
            usedHeight += naturalOffset;
          }
        }); // readjust the recommended height to only consider the height available to non-maxed-out rows.

        if (shouldRedistribute) {
          availableHeight -= usedHeight;
          minOffset1 = Math.floor(availableHeight / flexEls.length);
          minOffset2 = Math.floor(availableHeight - minOffset1 * (flexEls.length - 1)); // *FLOORING NOTE*
        } // assign heights to all expandable elements


        flexEls.forEach(function (el, i) {
          var minOffset = i === flexEls.length - 1 ? minOffset2 : minOffset1;
          var naturalOffset = flexOffsets[i];
          var naturalHeight = flexHeights[i];
          var newHeight = minOffset - (naturalOffset - naturalHeight); // subtract the margin/padding

          if (naturalOffset < minOffset) {
            // we check this again because redistribution might have changed things
            el.style.height = newHeight + 'px';
          }
        });
      } // Undoes distrubuteHeight, restoring all els to their natural height


      function undistributeHeight(els) {
        els.forEach(function (el) {
          el.style.height = '';
        });
      } // Given `els`, a set of <td> cells, find the cell with the largest natural width and set the widths of all the
      // cells to be that width.
      // PREREQUISITE: if you want a cell to take up width, it needs to have a single inner element w/ display:inline


      function matchCellWidths(els) {
        var maxInnerWidth = 0;
        els.forEach(function (el) {
          var innerEl = el.firstChild; // hopefully an element

          if (innerEl instanceof HTMLElement) {
            var innerWidth_1 = innerEl.offsetWidth;

            if (innerWidth_1 > maxInnerWidth) {
              maxInnerWidth = innerWidth_1;
            }
          }
        });
        maxInnerWidth++; // sometimes not accurate of width the text needs to stay on one line. insurance

        els.forEach(function (el) {
          el.style.width = maxInnerWidth + 'px';
        });
        return maxInnerWidth;
      } // Given one element that resides inside another,
      // Subtracts the height of the inner element from the outer element.


      function subtractInnerElHeight(outerEl, innerEl) {
        // effin' IE8/9/10/11 sometimes returns 0 for dimensions. this weird hack was the only thing that worked
        var reflowStyleProps = {
          position: 'relative',
          left: -1 // ensure reflow in case the el was already relative. negative is less likely to cause new scroll

        };
        applyStyle(outerEl, reflowStyleProps);
        applyStyle(innerEl, reflowStyleProps);
        var diff = outerEl.offsetHeight - innerEl.offsetHeight; // grab the dimensions
        // undo hack

        var resetStyleProps = {
          position: '',
          left: ''
        };
        applyStyle(outerEl, resetStyleProps);
        applyStyle(innerEl, resetStyleProps);
        return diff;
      }
      /* Selection
      ----------------------------------------------------------------------------------------------------------------------*/


      function preventSelection(el) {
        el.classList.add('fc-unselectable');
        el.addEventListener('selectstart', preventDefault);
      }

      function allowSelection(el) {
        el.classList.remove('fc-unselectable');
        el.removeEventListener('selectstart', preventDefault);
      }
      /* Context Menu
      ----------------------------------------------------------------------------------------------------------------------*/


      function preventContextMenu(el) {
        el.addEventListener('contextmenu', preventDefault);
      }

      function allowContextMenu(el) {
        el.removeEventListener('contextmenu', preventDefault);
      }
      /* Object Ordering by Field
      ----------------------------------------------------------------------------------------------------------------------*/


      function parseFieldSpecs(input) {
        var specs = [];
        var tokens = [];
        var i;
        var token;

        if (typeof input === 'string') {
          tokens = input.split(/\s*,\s*/);
        } else if (typeof input === 'function') {
          tokens = [input];
        } else if (Array.isArray(input)) {
          tokens = input;
        }

        for (i = 0; i < tokens.length; i++) {
          token = tokens[i];

          if (typeof token === 'string') {
            specs.push(token.charAt(0) === '-' ? {
              field: token.substring(1),
              order: -1
            } : {
              field: token,
              order: 1
            });
          } else if (typeof token === 'function') {
            specs.push({
              func: token
            });
          }
        }

        return specs;
      }

      function compareByFieldSpecs(obj0, obj1, fieldSpecs) {
        var i;
        var cmp;

        for (i = 0; i < fieldSpecs.length; i++) {
          cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i]);

          if (cmp) {
            return cmp;
          }
        }

        return 0;
      }

      function compareByFieldSpec(obj0, obj1, fieldSpec) {
        if (fieldSpec.func) {
          return fieldSpec.func(obj0, obj1);
        }

        return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field]) * (fieldSpec.order || 1);
      }

      function flexibleCompare(a, b) {
        if (!a && !b) {
          return 0;
        }

        if (b == null) {
          return -1;
        }

        if (a == null) {
          return 1;
        }

        if (typeof a === 'string' || typeof b === 'string') {
          return String(a).localeCompare(String(b));
        }

        return a - b;
      }
      /* String Utilities
      ----------------------------------------------------------------------------------------------------------------------*/


      function capitaliseFirstLetter(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
      }

      function padStart(val, len) {
        var s = String(val);
        return '000'.substr(0, len - s.length) + s;
      }
      /* Number Utilities
      ----------------------------------------------------------------------------------------------------------------------*/


      function compareNumbers(a, b) {
        return a - b;
      }

      function isInt(n) {
        return n % 1 === 0;
      }
      /* Weird Utilities
      ----------------------------------------------------------------------------------------------------------------------*/


      function applyAll(functions, thisObj, args) {
        if (typeof functions === 'function') {
          // supplied a single function
          functions = [functions];
        }

        if (functions) {
          var i = void 0;
          var ret = void 0;

          for (i = 0; i < functions.length; i++) {
            ret = functions[i].apply(thisObj, args) || ret;
          }

          return ret;
        }
      }

      function firstDefined() {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        for (var i = 0; i < args.length; i++) {
          if (args[i] !== undefined) {
            return args[i];
          }
        }
      } // Returns a function, that, as long as it continues to be invoked, will not
      // be triggered. The function will be called after it stops being called for
      // N milliseconds. If `immediate` is passed, trigger the function on the
      // leading edge, instead of the trailing.
      // https://github.com/jashkenas/underscore/blob/1.6.0/underscore.js#L714


      function debounce(func, wait) {
        var timeout;
        var args;
        var context;
        var timestamp;
        var result;

        var later = function later() {
          var last = new Date().valueOf() - timestamp;

          if (last < wait) {
            timeout = setTimeout(later, wait - last);
          } else {
            timeout = null;
            result = func.apply(context, args);
            context = args = null;
          }
        };

        return function () {
          context = this;
          args = arguments;
          timestamp = new Date().valueOf();

          if (!timeout) {
            timeout = setTimeout(later, wait);
          }

          return result;
        };
      } // Number and Boolean are only types that defaults or not computed for
      // TODO: write more comments


      function refineProps(rawProps, processors, defaults, leftoverProps) {
        if (defaults === void 0) {
          defaults = {};
        }

        var refined = {};

        for (var key in processors) {
          var processor = processors[key];

          if (rawProps[key] !== undefined) {
            // found
            if (processor === Function) {
              refined[key] = typeof rawProps[key] === 'function' ? rawProps[key] : null;
            } else if (processor) {
              // a refining function?
              refined[key] = processor(rawProps[key]);
            } else {
              refined[key] = rawProps[key];
            }
          } else if (defaults[key] !== undefined) {
            // there's an explicit default
            refined[key] = defaults[key];
          } else {
            // must compute a default
            if (processor === String) {
              refined[key] = ''; // empty string is default for String
            } else if (!processor || processor === Number || processor === Boolean || processor === Function) {
              refined[key] = null; // assign null for other non-custom processor funcs
            } else {
              refined[key] = processor(null); // run the custom processor func
            }
          }
        }

        if (leftoverProps) {
          for (var key in rawProps) {
            if (processors[key] === undefined) {
              leftoverProps[key] = rawProps[key];
            }
          }
        }

        return refined;
      }
      /*
      Get a snapshot of an object, so we can compare it to later revisions.
      Intentionally only works with arrays, jaja
      */


      function freezeRaw(raw) {
        if (Array.isArray(raw)) {
          return Array.prototype.slice.call(raw);
        }

        return raw;
      }
      /* Date stuff that doesn't belong in datelib core
      ----------------------------------------------------------------------------------------------------------------------*/
      // given a timed range, computes an all-day range that has the same exact duration,
      // but whose start time is aligned with the start of the day.


      function computeAlignedDayRange(timedRange) {
        var dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;
        var start = startOfDay(timedRange.start);
        var end = addDays(start, dayCnt);
        return {
          start: start,
          end: end
        };
      } // given a timed range, computes an all-day range based on how for the end date bleeds into the next day
      // TODO: give nextDayThreshold a default arg


      function computeVisibleDayRange(timedRange, nextDayThreshold) {
        if (nextDayThreshold === void 0) {
          nextDayThreshold = createDuration(0);
        }

        var startDay = null;
        var endDay = null;

        if (timedRange.end) {
          endDay = startOfDay(timedRange.end);
          var endTimeMS = timedRange.end.valueOf() - endDay.valueOf(); // # of milliseconds into `endDay`
          // If the end time is actually inclusively part of the next day and is equal to or
          // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.
          // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.

          if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {
            endDay = addDays(endDay, 1);
          }
        }

        if (timedRange.start) {
          startDay = startOfDay(timedRange.start); // the beginning of the day the range starts
          // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.

          if (endDay && endDay <= startDay) {
            endDay = addDays(startDay, 1);
          }
        }

        return {
          start: startDay,
          end: endDay
        };
      } // spans from one day into another?


      function isMultiDayRange(range) {
        var visibleRange = computeVisibleDayRange(range);
        return diffDays(visibleRange.start, visibleRange.end) > 1;
      }

      function diffDates(date0, date1, dateEnv, largeUnit) {
        if (largeUnit === 'year') {
          return createDuration(dateEnv.diffWholeYears(date0, date1), 'year');
        } else if (largeUnit === 'month') {
          return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month');
        } else {
          return diffDayAndTime(date0, date1); // returns a duration
        }
      }
      /*! *****************************************************************************
      Copyright (c) Microsoft Corporation. All rights reserved.
      Licensed under the Apache License, Version 2.0 (the "License"); you may not use
      this file except in compliance with the License. You may obtain a copy of the
      License at http://www.apache.org/licenses/LICENSE-2.0
        THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
      KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
      WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
      MERCHANTABLITY OR NON-INFRINGEMENT.
        See the Apache Version 2.0 License for specific language governing permissions
      and limitations under the License.
      ***************************************************************************** */

      /* global Reflect, Promise */


      var _extendStatics = function extendStatics(d, b) {
        _extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };

        return _extendStatics(d, b);
      };

      function __extends(d, b) {
        _extendStatics(d, b);

        function __() {
          this.constructor = d;
        }

        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      }

      var _assign = function __assign() {
        _assign = Object.assign || function __assign(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];

            for (var p in s) {
              if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
          }

          return t;
        };

        return _assign.apply(this, arguments);
      };

      function parseRecurring(eventInput, allDayDefault, dateEnv, recurringTypes, leftovers) {
        for (var i = 0; i < recurringTypes.length; i++) {
          var localLeftovers = {};
          var parsed = recurringTypes[i].parse(eventInput, localLeftovers, dateEnv);

          if (parsed) {
            var allDay = localLeftovers.allDay;
            delete localLeftovers.allDay; // remove from leftovers

            if (allDay == null) {
              allDay = allDayDefault;

              if (allDay == null) {
                allDay = parsed.allDayGuess;

                if (allDay == null) {
                  allDay = false;
                }
              }
            }

            _assign(leftovers, localLeftovers);

            return {
              allDay: allDay,
              duration: parsed.duration,
              typeData: parsed.typeData,
              typeId: i
            };
          }
        }

        return null;
      }
      /*
      Event MUST have a recurringDef
      */


      function expandRecurringRanges(eventDef, framingRange, dateEnv, recurringTypes) {
        var typeDef = recurringTypes[eventDef.recurringDef.typeId];
        var markers = typeDef.expand(eventDef.recurringDef.typeData, framingRange, dateEnv); // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to

        if (eventDef.allDay) {
          markers = markers.map(startOfDay);
        }

        return markers;
      } // Merges an array of objects into a single object.
      // The second argument allows for an array of property names who's object values will be merged together.


      function mergeProps(propObjs, complexProps) {
        var dest = {};
        var i;
        var name;
        var complexObjs;
        var j;
        var val;
        var props;

        if (complexProps) {
          for (i = 0; i < complexProps.length; i++) {
            name = complexProps[i];
            complexObjs = []; // collect the trailing object values, stopping when a non-object is discovered

            for (j = propObjs.length - 1; j >= 0; j--) {
              val = propObjs[j][name];

              if (typeof val === 'object' && val) {
                // non-null object
                complexObjs.unshift(val);
              } else if (val !== undefined) {
                dest[name] = val; // if there were no objects, this value will be used

                break;
              }
            } // if the trailing values were objects, use the merged value


            if (complexObjs.length) {
              dest[name] = mergeProps(complexObjs);
            }
          }
        } // copy values into the destination, going from last to first


        for (i = propObjs.length - 1; i >= 0; i--) {
          props = propObjs[i];

          for (name in props) {
            if (!(name in dest)) {
              // if already assigned by previous props or complex props, don't reassign
              dest[name] = props[name];
            }
          }
        }

        return dest;
      }

      function filterHash(hash, func) {
        var filtered = {};

        for (var key in hash) {
          if (func(hash[key], key)) {
            filtered[key] = hash[key];
          }
        }

        return filtered;
      }

      function mapHash(hash, func) {
        var newHash = {};

        for (var key in hash) {
          newHash[key] = func(hash[key], key);
        }

        return newHash;
      }

      function arrayToHash(a) {
        var hash = {};

        for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {
          var item = a_1[_i];
          hash[item] = true;
        }

        return hash;
      }

      function hashValuesToArray(obj) {
        var a = [];

        for (var key in obj) {
          a.push(obj[key]);
        }

        return a;
      }

      function parseEvents(rawEvents, sourceId, calendar, allowOpenRange) {
        var eventStore = createEmptyEventStore();

        for (var _i = 0, rawEvents_1 = rawEvents; _i < rawEvents_1.length; _i++) {
          var rawEvent = rawEvents_1[_i];
          var tuple = parseEvent(rawEvent, sourceId, calendar, allowOpenRange);

          if (tuple) {
            eventTupleToStore(tuple, eventStore);
          }
        }

        return eventStore;
      }

      function eventTupleToStore(tuple, eventStore) {
        if (eventStore === void 0) {
          eventStore = createEmptyEventStore();
        }

        eventStore.defs[tuple.def.defId] = tuple.def;

        if (tuple.instance) {
          eventStore.instances[tuple.instance.instanceId] = tuple.instance;
        }

        return eventStore;
      }

      function expandRecurring(eventStore, framingRange, calendar) {
        var dateEnv = calendar.dateEnv;
        var defs = eventStore.defs,
            instances = eventStore.instances; // remove existing recurring instances

        instances = filterHash(instances, function (instance) {
          return !defs[instance.defId].recurringDef;
        });

        for (var defId in defs) {
          var def = defs[defId];

          if (def.recurringDef) {
            var starts = expandRecurringRanges(def, framingRange, calendar.dateEnv, calendar.pluginSystem.hooks.recurringTypes);
            var duration = def.recurringDef.duration;

            if (!duration) {
              duration = def.allDay ? calendar.defaultAllDayEventDuration : calendar.defaultTimedEventDuration;
            }

            for (var _i = 0, starts_1 = starts; _i < starts_1.length; _i++) {
              var start = starts_1[_i];
              var instance = createEventInstance(defId, {
                start: start,
                end: dateEnv.add(start, duration)
              });
              instances[instance.instanceId] = instance;
            }
          }
        }

        return {
          defs: defs,
          instances: instances
        };
      } // retrieves events that have the same groupId as the instance specified by `instanceId`
      // or they are the same as the instance.
      // why might instanceId not be in the store? an event from another calendar?


      function getRelevantEvents(eventStore, instanceId) {
        var instance = eventStore.instances[instanceId];

        if (instance) {
          var def_1 = eventStore.defs[instance.defId]; // get events/instances with same group

          var newStore = filterEventStoreDefs(eventStore, function (lookDef) {
            return isEventDefsGrouped(def_1, lookDef);
          }); // add the original
          // TODO: wish we could use eventTupleToStore or something like it

          newStore.defs[def_1.defId] = def_1;
          newStore.instances[instance.instanceId] = instance;
          return newStore;
        }

        return createEmptyEventStore();
      }

      function isEventDefsGrouped(def0, def1) {
        return Boolean(def0.groupId && def0.groupId === def1.groupId);
      }

      function transformRawEvents(rawEvents, eventSource, calendar) {
        var calEachTransform = calendar.opt('eventDataTransform');
        var sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;

        if (sourceEachTransform) {
          rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);
        }

        if (calEachTransform) {
          rawEvents = transformEachRawEvent(rawEvents, calEachTransform);
        }

        return rawEvents;
      }

      function transformEachRawEvent(rawEvents, func) {
        var refinedEvents;

        if (!func) {
          refinedEvents = rawEvents;
        } else {
          refinedEvents = [];

          for (var _i = 0, rawEvents_2 = rawEvents; _i < rawEvents_2.length; _i++) {
            var rawEvent = rawEvents_2[_i];
            var refinedEvent = func(rawEvent);

            if (refinedEvent) {
              refinedEvents.push(refinedEvent);
            } else if (refinedEvent == null) {
              refinedEvents.push(rawEvent);
            } // if a different falsy value, do nothing

          }
        }

        return refinedEvents;
      }

      function createEmptyEventStore() {
        return {
          defs: {},
          instances: {}
        };
      }

      function mergeEventStores(store0, store1) {
        return {
          defs: _assign({}, store0.defs, store1.defs),
          instances: _assign({}, store0.instances, store1.instances)
        };
      }

      function filterEventStoreDefs(eventStore, filterFunc) {
        var defs = filterHash(eventStore.defs, filterFunc);
        var instances = filterHash(eventStore.instances, function (instance) {
          return defs[instance.defId]; // still exists?
        });
        return {
          defs: defs,
          instances: instances
        };
      }

      function parseRange(input, dateEnv) {
        var start = null;
        var end = null;

        if (input.start) {
          start = dateEnv.createMarker(input.start);
        }

        if (input.end) {
          end = dateEnv.createMarker(input.end);
        }

        if (!start && !end) {
          return null;
        }

        if (start && end && end < start) {
          return null;
        }

        return {
          start: start,
          end: end
        };
      } // SIDE-EFFECT: will mutate ranges.
      // Will return a new array result.


      function invertRanges(ranges, constraintRange) {
        var invertedRanges = [];
        var start = constraintRange.start; // the end of the previous range. the start of the new range

        var i;
        var dateRange; // ranges need to be in order. required for our date-walking algorithm

        ranges.sort(compareRanges);

        for (i = 0; i < ranges.length; i++) {
          dateRange = ranges[i]; // add the span of time before the event (if there is any)

          if (dateRange.start > start) {
            // compare millisecond time (skip any ambig logic)
            invertedRanges.push({
              start: start,
              end: dateRange.start
            });
          }

          if (dateRange.end > start) {
            start = dateRange.end;
          }
        } // add the span of time after the last event (if there is any)


        if (start < constraintRange.end) {
          // compare millisecond time (skip any ambig logic)
          invertedRanges.push({
            start: start,
            end: constraintRange.end
          });
        }

        return invertedRanges;
      }

      function compareRanges(range0, range1) {
        return range0.start.valueOf() - range1.start.valueOf(); // earlier ranges go first
      }

      function intersectRanges(range0, range1) {
        var start = range0.start;
        var end = range0.end;
        var newRange = null;

        if (range1.start !== null) {
          if (start === null) {
            start = range1.start;
          } else {
            start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));
          }
        }

        if (range1.end != null) {
          if (end === null) {
            end = range1.end;
          } else {
            end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));
          }
        }

        if (start === null || end === null || start < end) {
          newRange = {
            start: start,
            end: end
          };
        }

        return newRange;
      }

      function rangesEqual(range0, range1) {
        return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) && (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf());
      }

      function rangesIntersect(range0, range1) {
        return (range0.end === null || range1.start === null || range0.end > range1.start) && (range0.start === null || range1.end === null || range0.start < range1.end);
      }

      function rangeContainsRange(outerRange, innerRange) {
        return (outerRange.start === null || innerRange.start !== null && innerRange.start >= outerRange.start) && (outerRange.end === null || innerRange.end !== null && innerRange.end <= outerRange.end);
      }

      function rangeContainsMarker(range, date) {
        return (range.start === null || date >= range.start) && (range.end === null || date < range.end);
      } // If the given date is not within the given range, move it inside.
      // (If it's past the end, make it one millisecond before the end).


      function constrainMarkerToRange(date, range) {
        if (range.start != null && date < range.start) {
          return range.start;
        }

        if (range.end != null && date >= range.end) {
          return new Date(range.end.valueOf() - 1);
        }

        return date;
      }

      function removeExact(array, exactVal) {
        var removeCnt = 0;
        var i = 0;

        while (i < array.length) {
          if (array[i] === exactVal) {
            array.splice(i, 1);
            removeCnt++;
          } else {
            i++;
          }
        }

        return removeCnt;
      }

      function isArraysEqual(a0, a1) {
        var len = a0.length;
        var i;

        if (len !== a1.length) {
          // not array? or not same length?
          return false;
        }

        for (i = 0; i < len; i++) {
          if (a0[i] !== a1[i]) {
            return false;
          }
        }

        return true;
      }

      function memoize(workerFunc) {
        var args;
        var res;
        return function () {
          if (!args || !isArraysEqual(args, arguments)) {
            args = arguments;
            res = workerFunc.apply(this, arguments);
          }

          return res;
        };
      }
      /*
      always executes the workerFunc, but if the result is equal to the previous result,
      return the previous result instead.
      */


      function memoizeOutput(workerFunc, equalityFunc) {
        var cachedRes = null;
        return function () {
          var newRes = workerFunc.apply(this, arguments);

          if (cachedRes === null || !(cachedRes === newRes || equalityFunc(cachedRes, newRes))) {
            cachedRes = newRes;
          }

          return cachedRes;
        };
      }

      var EXTENDED_SETTINGS_AND_SEVERITIES = {
        week: 3,
        separator: 0,
        omitZeroMinute: 0,
        meridiem: 0,
        omitCommas: 0
      };
      var STANDARD_DATE_PROP_SEVERITIES = {
        timeZoneName: 7,
        era: 6,
        year: 5,
        month: 4,
        day: 2,
        weekday: 2,
        hour: 1,
        minute: 1,
        second: 1
      };
      var MERIDIEM_RE = /\s*([ap])\.?m\.?/i; // eats up leading spaces too

      var COMMA_RE = /,/g; // we need re for globalness

      var MULTI_SPACE_RE = /\s+/g;
      var LTR_RE = /\u200e/g; // control character

      var UTC_RE = /UTC|GMT/;

      var NativeFormatter =
      /** @class */
      function () {
        function NativeFormatter(formatSettings) {
          var standardDateProps = {};
          var extendedSettings = {};
          var severity = 0;

          for (var name_1 in formatSettings) {
            if (name_1 in EXTENDED_SETTINGS_AND_SEVERITIES) {
              extendedSettings[name_1] = formatSettings[name_1];
              severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name_1], severity);
            } else {
              standardDateProps[name_1] = formatSettings[name_1];

              if (name_1 in STANDARD_DATE_PROP_SEVERITIES) {
                severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name_1], severity);
              }
            }
          }

          this.standardDateProps = standardDateProps;
          this.extendedSettings = extendedSettings;
          this.severity = severity;
          this.buildFormattingFunc = memoize(buildFormattingFunc);
        }

        NativeFormatter.prototype.format = function (date, context) {
          return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);
        };

        NativeFormatter.prototype.formatRange = function (start, end, context) {
          var _a = this,
              standardDateProps = _a.standardDateProps,
              extendedSettings = _a.extendedSettings;

          var diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);

          if (!diffSeverity) {
            return this.format(start, context);
          }

          var biggestUnitForPartial = diffSeverity;

          if (biggestUnitForPartial > 1 && ( // the two dates are different in a way that's larger scale than time
          standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') && (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') && (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')) {
            biggestUnitForPartial = 1; // make it look like the dates are only different in terms of time
          }

          var full0 = this.format(start, context);
          var full1 = this.format(end, context);

          if (full0 === full1) {
            return full0;
          }

          var partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);
          var partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);
          var partial0 = partialFormattingFunc(start);
          var partial1 = partialFormattingFunc(end);
          var insertion = findCommonInsertion(full0, partial0, full1, partial1);
          var separator = extendedSettings.separator || '';

          if (insertion) {
            return insertion.before + partial0 + separator + partial1 + insertion.after;
          }

          return full0 + separator + full1;
        };

        NativeFormatter.prototype.getLargestUnit = function () {
          switch (this.severity) {
            case 7:
            case 6:
            case 5:
              return 'year';

            case 4:
              return 'month';

            case 3:
              return 'week';

            default:
              return 'day';
          }
        };

        return NativeFormatter;
      }();

      function buildFormattingFunc(standardDateProps, extendedSettings, context) {
        var standardDatePropCnt = Object.keys(standardDateProps).length;

        if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {
          return function (date) {
            return formatTimeZoneOffset(date.timeZoneOffset);
          };
        }

        if (standardDatePropCnt === 0 && extendedSettings.week) {
          return function (date) {
            return formatWeekNumber(context.computeWeekNumber(date.marker), context.weekLabel, context.locale, extendedSettings.week);
          };
        }

        return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);
      }

      function buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {
        standardDateProps = _assign({}, standardDateProps); // copy

        extendedSettings = _assign({}, extendedSettings); // copy

        sanitizeSettings(standardDateProps, extendedSettings);
        standardDateProps.timeZone = 'UTC'; // we leverage the only guaranteed timeZone for our UTC markers

        var normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);
        var zeroFormat; // needed?

        if (extendedSettings.omitZeroMinute) {
          var zeroProps = _assign({}, standardDateProps);

          delete zeroProps.minute; // seconds and ms were already considered in sanitizeSettings

          zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);
        }

        return function (date) {
          var marker = date.marker;
          var format;

          if (zeroFormat && !marker.getUTCMinutes()) {
            format = zeroFormat;
          } else {
            format = normalFormat;
          }

          var s = format.format(marker);
          return postProcess(s, date, standardDateProps, extendedSettings, context);
        };
      }

      function sanitizeSettings(standardDateProps, extendedSettings) {
        // deal with a browser inconsistency where formatting the timezone
        // requires that the hour/minute be present.
        if (standardDateProps.timeZoneName) {
          if (!standardDateProps.hour) {
            standardDateProps.hour = '2-digit';
          }

          if (!standardDateProps.minute) {
            standardDateProps.minute = '2-digit';
          }
        } // only support short timezone names


        if (standardDateProps.timeZoneName === 'long') {
          standardDateProps.timeZoneName = 'short';
        } // if requesting to display seconds, MUST display minutes


        if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {
          delete extendedSettings.omitZeroMinute;
        }
      }

      function postProcess(s, date, standardDateProps, extendedSettings, context) {
        s = s.replace(LTR_RE, ''); // remove left-to-right control chars. do first. good for other regexes

        if (standardDateProps.timeZoneName === 'short') {
          s = injectTzoStr(s, context.timeZone === 'UTC' || date.timeZoneOffset == null ? 'UTC' : // important to normalize for IE, which does "GMT"
          formatTimeZoneOffset(date.timeZoneOffset));
        }

        if (extendedSettings.omitCommas) {
          s = s.replace(COMMA_RE, '').trim();
        }

        if (extendedSettings.omitZeroMinute) {
          s = s.replace(':00', ''); // zeroFormat doesn't always achieve this
        } // ^ do anything that might create adjacent spaces before this point,
        // because MERIDIEM_RE likes to eat up loading spaces


        if (extendedSettings.meridiem === false) {
          s = s.replace(MERIDIEM_RE, '').trim();
        } else if (extendedSettings.meridiem === 'narrow') {
          // a/p
          s = s.replace(MERIDIEM_RE, function (m0, m1) {
            return m1.toLocaleLowerCase();
          });
        } else if (extendedSettings.meridiem === 'short') {
          // am/pm
          s = s.replace(MERIDIEM_RE, function (m0, m1) {
            return m1.toLocaleLowerCase() + 'm';
          });
        } else if (extendedSettings.meridiem === 'lowercase') {
          // other meridiem transformers already converted to lowercase
          s = s.replace(MERIDIEM_RE, function (m0) {
            return m0.toLocaleLowerCase();
          });
        }

        s = s.replace(MULTI_SPACE_RE, ' ');
        s = s.trim();
        return s;
      }

      function injectTzoStr(s, tzoStr) {
        var replaced = false;
        s = s.replace(UTC_RE, function () {
          replaced = true;
          return tzoStr;
        }); // IE11 doesn't include UTC/GMT in the original string, so append to end

        if (!replaced) {
          s += ' ' + tzoStr;
        }

        return s;
      }

      function formatWeekNumber(num, weekLabel, locale, display) {
        var parts = [];

        if (display === 'narrow') {
          parts.push(weekLabel);
        } else if (display === 'short') {
          parts.push(weekLabel, ' ');
        } // otherwise, considered 'numeric'


        parts.push(locale.simpleNumberFormat.format(num));

        if (locale.options.isRtl) {
          // TODO: use control characters instead?
          parts.reverse();
        }

        return parts.join('');
      } // Range Formatting Utils
      // 0 = exactly the same
      // 1 = different by time
      // and bigger


      function computeMarkerDiffSeverity(d0, d1, ca) {
        if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {
          return 5;
        }

        if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {
          return 4;
        }

        if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {
          return 2;
        }

        if (timeAsMs(d0) !== timeAsMs(d1)) {
          return 1;
        }

        return 0;
      }

      function computePartialFormattingOptions(options, biggestUnit) {
        var partialOptions = {};

        for (var name_2 in options) {
          if (!(name_2 in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)
          STANDARD_DATE_PROP_SEVERITIES[name_2] <= biggestUnit) {
            partialOptions[name_2] = options[name_2];
          }
        }

        return partialOptions;
      }

      function findCommonInsertion(full0, partial0, full1, partial1) {
        var i0 = 0;

        while (i0 < full0.length) {
          var found0 = full0.indexOf(partial0, i0);

          if (found0 === -1) {
            break;
          }

          var before0 = full0.substr(0, found0);
          i0 = found0 + partial0.length;
          var after0 = full0.substr(i0);
          var i1 = 0;

          while (i1 < full1.length) {
            var found1 = full1.indexOf(partial1, i1);

            if (found1 === -1) {
              break;
            }

            var before1 = full1.substr(0, found1);
            i1 = found1 + partial1.length;
            var after1 = full1.substr(i1);

            if (before0 === before1 && after0 === after1) {
              return {
                before: before0,
                after: after0
              };
            }
          }
        }

        return null;
      }
      /*
      TODO: fix the terminology of "formatter" vs "formatting func"
      */

      /*
      At the time of instantiation, this object does not know which cmd-formatting system it will use.
      It receives this at the time of formatting, as a setting.
      */


      var CmdFormatter =
      /** @class */
      function () {
        function CmdFormatter(cmdStr, separator) {
          this.cmdStr = cmdStr;
          this.separator = separator;
        }

        CmdFormatter.prototype.format = function (date, context) {
          return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, this.separator));
        };

        CmdFormatter.prototype.formatRange = function (start, end, context) {
          return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, this.separator));
        };

        return CmdFormatter;
      }();

      var FuncFormatter =
      /** @class */
      function () {
        function FuncFormatter(func) {
          this.func = func;
        }

        FuncFormatter.prototype.format = function (date, context) {
          return this.func(createVerboseFormattingArg(date, null, context));
        };

        FuncFormatter.prototype.formatRange = function (start, end, context) {
          return this.func(createVerboseFormattingArg(start, end, context));
        };

        return FuncFormatter;
      }(); // Formatter Object Creation


      function createFormatter(input, defaultSeparator) {
        if (typeof input === 'object' && input) {
          // non-null object
          if (typeof defaultSeparator === 'string') {
            input = _assign({
              separator: defaultSeparator
            }, input);
          }

          return new NativeFormatter(input);
        } else if (typeof input === 'string') {
          return new CmdFormatter(input, defaultSeparator);
        } else if (typeof input === 'function') {
          return new FuncFormatter(input);
        }
      } // String Utils
      // timeZoneOffset is in minutes


      function buildIsoString(marker, timeZoneOffset, stripZeroTime) {
        if (stripZeroTime === void 0) {
          stripZeroTime = false;
        }

        var s = marker.toISOString();
        s = s.replace('.000', '');

        if (stripZeroTime) {
          s = s.replace('T00:00:00Z', '');
        }

        if (s.length > 10) {
          // time part wasn't stripped, can add timezone info
          if (timeZoneOffset == null) {
            s = s.replace('Z', '');
          } else if (timeZoneOffset !== 0) {
            s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true));
          } // otherwise, its UTC-0 and we want to keep the Z

        }

        return s;
      }

      function formatIsoTimeString(marker) {
        return padStart(marker.getUTCHours(), 2) + ':' + padStart(marker.getUTCMinutes(), 2) + ':' + padStart(marker.getUTCSeconds(), 2);
      }

      function formatTimeZoneOffset(minutes, doIso) {
        if (doIso === void 0) {
          doIso = false;
        }

        var sign = minutes < 0 ? '-' : '+';
        var abs = Math.abs(minutes);
        var hours = Math.floor(abs / 60);
        var mins = Math.round(abs % 60);

        if (doIso) {
          return sign + padStart(hours, 2) + ':' + padStart(mins, 2);
        } else {
          return 'GMT' + sign + hours + (mins ? ':' + padStart(mins, 2) : '');
        }
      } // Arg Utils


      function createVerboseFormattingArg(start, end, context, separator) {
        var startInfo = expandZonedMarker(start, context.calendarSystem);
        var endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;
        return {
          date: startInfo,
          start: startInfo,
          end: endInfo,
          timeZone: context.timeZone,
          localeCodes: context.locale.codes,
          separator: separator
        };
      }

      function expandZonedMarker(dateInfo, calendarSystem) {
        var a = calendarSystem.markerToArray(dateInfo.marker);
        return {
          marker: dateInfo.marker,
          timeZoneOffset: dateInfo.timeZoneOffset,
          array: a,
          year: a[0],
          month: a[1],
          day: a[2],
          hour: a[3],
          minute: a[4],
          second: a[5],
          millisecond: a[6]
        };
      }

      var EventSourceApi =
      /** @class */
      function () {
        function EventSourceApi(calendar, internalEventSource) {
          this.calendar = calendar;
          this.internalEventSource = internalEventSource;
        }

        EventSourceApi.prototype.remove = function () {
          this.calendar.dispatch({
            type: 'REMOVE_EVENT_SOURCE',
            sourceId: this.internalEventSource.sourceId
          });
        };

        EventSourceApi.prototype.refetch = function () {
          this.calendar.dispatch({
            type: 'FETCH_EVENT_SOURCES',
            sourceIds: [this.internalEventSource.sourceId]
          });
        };

        Object.defineProperty(EventSourceApi.prototype, "id", {
          get: function get() {
            return this.internalEventSource.publicId;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventSourceApi.prototype, "url", {
          // only relevant to json-feed event sources
          get: function get() {
            return this.internalEventSource.meta.url;
          },
          enumerable: true,
          configurable: true
        });
        return EventSourceApi;
      }();

      var EventApi =
      /** @class */
      function () {
        function EventApi(calendar, def, instance) {
          this._calendar = calendar;
          this._def = def;
          this._instance = instance || null;
        }
        /*
        TODO: make event struct more responsible for this
        */


        EventApi.prototype.setProp = function (name, val) {
          var _a, _b;

          if (name in DATE_PROPS) ;else if (name in NON_DATE_PROPS) {
            if (typeof NON_DATE_PROPS[name] === 'function') {
              val = NON_DATE_PROPS[name](val);
            }

            this.mutate({
              standardProps: (_a = {}, _a[name] = val, _a)
            });
          } else if (name in UNSCOPED_EVENT_UI_PROPS) {
            var ui = void 0;

            if (typeof UNSCOPED_EVENT_UI_PROPS[name] === 'function') {
              val = UNSCOPED_EVENT_UI_PROPS[name](val);
            }

            if (name === 'color') {
              ui = {
                backgroundColor: val,
                borderColor: val
              };
            } else if (name === 'editable') {
              ui = {
                startEditable: val,
                durationEditable: val
              };
            } else {
              ui = (_b = {}, _b[name] = val, _b);
            }

            this.mutate({
              standardProps: {
                ui: ui
              }
            });
          }
        };

        EventApi.prototype.setExtendedProp = function (name, val) {
          var _a;

          this.mutate({
            extendedProps: (_a = {}, _a[name] = val, _a)
          });
        };

        EventApi.prototype.setStart = function (startInput, options) {
          if (options === void 0) {
            options = {};
          }

          var dateEnv = this._calendar.dateEnv;
          var start = dateEnv.createMarker(startInput);

          if (start && this._instance) {
            // TODO: warning if parsed bad
            var instanceRange = this._instance.range;
            var startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity); // what if parsed bad!?

            var endDelta = null;

            if (options.maintainDuration) {
              var origDuration = diffDates(instanceRange.start, instanceRange.end, dateEnv, options.granularity);
              var newDuration = diffDates(start, instanceRange.end, dateEnv, options.granularity);
              endDelta = subtractDurations(origDuration, newDuration);
            }

            this.mutate({
              startDelta: startDelta,
              endDelta: endDelta
            });
          }
        };

        EventApi.prototype.setEnd = function (endInput, options) {
          if (options === void 0) {
            options = {};
          }

          var dateEnv = this._calendar.dateEnv;
          var end;

          if (endInput != null) {
            end = dateEnv.createMarker(endInput);

            if (!end) {
              return; // TODO: warning if parsed bad
            }
          }

          if (this._instance) {
            if (end) {
              var endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);
              this.mutate({
                endDelta: endDelta
              });
            } else {
              this.mutate({
                standardProps: {
                  hasEnd: false
                }
              });
            }
          }
        };

        EventApi.prototype.setDates = function (startInput, endInput, options) {
          if (options === void 0) {
            options = {};
          }

          var dateEnv = this._calendar.dateEnv;
          var standardProps = {
            allDay: options.allDay
          };
          var start = dateEnv.createMarker(startInput);
          var end;

          if (!start) {
            return; // TODO: warning if parsed bad
          }

          if (endInput != null) {
            end = dateEnv.createMarker(endInput);

            if (!end) {
              // TODO: warning if parsed bad
              return;
            }
          }

          if (this._instance) {
            var instanceRange = this._instance.range; // when computing the diff for an event being converted to all-day,
            // compute diff off of the all-day values the way event-mutation does.

            if (options.allDay === true) {
              instanceRange = computeAlignedDayRange(instanceRange);
            }

            var startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);

            if (end) {
              var endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);
              this.mutate({
                startDelta: startDelta,
                endDelta: endDelta,
                standardProps: standardProps
              });
            } else {
              standardProps.hasEnd = false;
              this.mutate({
                startDelta: startDelta,
                standardProps: standardProps
              });
            }
          }
        };

        EventApi.prototype.moveStart = function (deltaInput) {
          var delta = createDuration(deltaInput);

          if (delta) {
            // TODO: warning if parsed bad
            this.mutate({
              startDelta: delta
            });
          }
        };

        EventApi.prototype.moveEnd = function (deltaInput) {
          var delta = createDuration(deltaInput);

          if (delta) {
            // TODO: warning if parsed bad
            this.mutate({
              endDelta: delta
            });
          }
        };

        EventApi.prototype.moveDates = function (deltaInput) {
          var delta = createDuration(deltaInput);

          if (delta) {
            // TODO: warning if parsed bad
            this.mutate({
              startDelta: delta,
              endDelta: delta
            });
          }
        };

        EventApi.prototype.setAllDay = function (allDay, options) {
          if (options === void 0) {
            options = {};
          }

          var standardProps = {
            allDay: allDay
          };
          var maintainDuration = options.maintainDuration;

          if (maintainDuration == null) {
            maintainDuration = this._calendar.opt('allDayMaintainDuration');
          }

          if (this._def.allDay !== allDay) {
            standardProps.hasEnd = maintainDuration;
          }

          this.mutate({
            standardProps: standardProps
          });
        };

        EventApi.prototype.formatRange = function (formatInput) {
          var dateEnv = this._calendar.dateEnv;
          var instance = this._instance;
          var formatter = createFormatter(formatInput, this._calendar.opt('defaultRangeSeparator'));

          if (this._def.hasEnd) {
            return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {
              forcedStartTzo: instance.forcedStartTzo,
              forcedEndTzo: instance.forcedEndTzo
            });
          } else {
            return dateEnv.format(instance.range.start, formatter, {
              forcedTzo: instance.forcedStartTzo
            });
          }
        };

        EventApi.prototype.mutate = function (mutation) {
          var def = this._def;
          var instance = this._instance;

          if (instance) {
            this._calendar.dispatch({
              type: 'MUTATE_EVENTS',
              instanceId: instance.instanceId,
              mutation: mutation,
              fromApi: true
            });

            var eventStore = this._calendar.state.eventStore;
            this._def = eventStore.defs[def.defId];
            this._instance = eventStore.instances[instance.instanceId];
          }
        };

        EventApi.prototype.remove = function () {
          this._calendar.dispatch({
            type: 'REMOVE_EVENT_DEF',
            defId: this._def.defId
          });
        };

        Object.defineProperty(EventApi.prototype, "source", {
          get: function get() {
            var sourceId = this._def.sourceId;

            if (sourceId) {
              return new EventSourceApi(this._calendar, this._calendar.state.eventSources[sourceId]);
            }

            return null;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "start", {
          get: function get() {
            return this._instance ? this._calendar.dateEnv.toDate(this._instance.range.start) : null;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "end", {
          get: function get() {
            return this._instance && this._def.hasEnd ? this._calendar.dateEnv.toDate(this._instance.range.end) : null;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "id", {
          // computable props that all access the def
          // TODO: find a TypeScript-compatible way to do this at scale
          get: function get() {
            return this._def.publicId;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "groupId", {
          get: function get() {
            return this._def.groupId;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "allDay", {
          get: function get() {
            return this._def.allDay;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "title", {
          get: function get() {
            return this._def.title;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "url", {
          get: function get() {
            return this._def.url;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "rendering", {
          get: function get() {
            return this._def.rendering;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "startEditable", {
          get: function get() {
            return this._def.ui.startEditable;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "durationEditable", {
          get: function get() {
            return this._def.ui.durationEditable;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "constraint", {
          get: function get() {
            return this._def.ui.constraints[0] || null;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "overlap", {
          get: function get() {
            return this._def.ui.overlap;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "allow", {
          get: function get() {
            return this._def.ui.allows[0] || null;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "backgroundColor", {
          get: function get() {
            return this._def.ui.backgroundColor;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "borderColor", {
          get: function get() {
            return this._def.ui.borderColor;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "textColor", {
          get: function get() {
            return this._def.ui.textColor;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "classNames", {
          // NOTE: user can't modify these because Object.freeze was called in event-def parsing
          get: function get() {
            return this._def.ui.classNames;
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(EventApi.prototype, "extendedProps", {
          get: function get() {
            return this._def.extendedProps;
          },
          enumerable: true,
          configurable: true
        });
        return EventApi;
      }();
      /*
      Specifying nextDayThreshold signals that all-day ranges should be sliced.
      */


      function sliceEventStore(eventStore, eventUiBases, framingRange, nextDayThreshold) {
        var inverseBgByGroupId = {};
        var inverseBgByDefId = {};
        var defByGroupId = {};
        var bgRanges = [];
        var fgRanges = [];
        var eventUis = compileEventUis(eventStore.defs, eventUiBases);

        for (var defId in eventStore.defs) {
          var def = eventStore.defs[defId];

          if (def.rendering === 'inverse-background') {
            if (def.groupId) {
              inverseBgByGroupId[def.groupId] = [];

              if (!defByGroupId[def.groupId]) {
                defByGroupId[def.groupId] = def;
              }
            } else {
              inverseBgByDefId[defId] = [];
            }
          }
        }

        for (var instanceId in eventStore.instances) {
          var instance = eventStore.instances[instanceId];
          var def = eventStore.defs[instance.defId];
          var ui = eventUis[def.defId];
          var origRange = instance.range;
          var normalRange = !def.allDay && nextDayThreshold ? computeVisibleDayRange(origRange, nextDayThreshold) : origRange;
          var slicedRange = intersectRanges(normalRange, framingRange);

          if (slicedRange) {
            if (def.rendering === 'inverse-background') {
              if (def.groupId) {
                inverseBgByGroupId[def.groupId].push(slicedRange);
              } else {
                inverseBgByDefId[instance.defId].push(slicedRange);
              }
            } else {
              (def.rendering === 'background' ? bgRanges : fgRanges).push({
                def: def,
                ui: ui,
                instance: instance,
                range: slicedRange,
                isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),
                isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf()
              });
            }
          }
        }

        for (var groupId in inverseBgByGroupId) {
          // BY GROUP
          var ranges = inverseBgByGroupId[groupId];
          var invertedRanges = invertRanges(ranges, framingRange);

          for (var _i = 0, invertedRanges_1 = invertedRanges; _i < invertedRanges_1.length; _i++) {
            var invertedRange = invertedRanges_1[_i];
            var def = defByGroupId[groupId];
            var ui = eventUis[def.defId];
            bgRanges.push({
              def: def,
              ui: ui,
              instance: null,
              range: invertedRange,
              isStart: false,
              isEnd: false
            });
          }
        }

        for (var defId in inverseBgByDefId) {
          var ranges = inverseBgByDefId[defId];
          var invertedRanges = invertRanges(ranges, framingRange);

          for (var _a = 0, invertedRanges_2 = invertedRanges; _a < invertedRanges_2.length; _a++) {
            var invertedRange = invertedRanges_2[_a];
            bgRanges.push({
              def: eventStore.defs[defId],
              ui: eventUis[defId],
              instance: null,
              range: invertedRange,
              isStart: false,
              isEnd: false
            });
          }
        }

        return {
          bg: bgRanges,
          fg: fgRanges
        };
      }

      function hasBgRendering(def) {
        return def.rendering === 'background' || def.rendering === 'inverse-background';
      }

      function filterSegsViaEls(view, segs, isMirror) {
        if (view.hasPublicHandlers('eventRender')) {
          segs = segs.filter(function (seg) {
            var custom = view.publiclyTrigger('eventRender', [{
              event: new EventApi(view.calendar, seg.eventRange.def, seg.eventRange.instance),
              isMirror: isMirror,
              isStart: seg.isStart,
              isEnd: seg.isEnd,
              // TODO: include seg.range once all components consistently generate it
              el: seg.el,
              view: view
            }]);

            if (custom === false) {
              // means don't render at all
              return false;
            } else if (custom && custom !== true) {
              seg.el = custom;
            }

            return true;
          });
        }

        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
          var seg = segs_1[_i];
          setElSeg(seg.el, seg);
        }

        return segs;
      }

      function setElSeg(el, seg) {
        el.fcSeg = seg;
      }

      function getElSeg(el) {
        return el.fcSeg || null;
      } // event ui computation


      function compileEventUis(eventDefs, eventUiBases) {
        return mapHash(eventDefs, function (eventDef) {
          return compileEventUi(eventDef, eventUiBases);
        });
      }

      function compileEventUi(eventDef, eventUiBases) {
        var uis = [];

        if (eventUiBases['']) {
          uis.push(eventUiBases['']);
        }

        if (eventUiBases[eventDef.defId]) {
          uis.push(eventUiBases[eventDef.defId]);
        }

        uis.push(eventDef.ui);
        return combineEventUis(uis);
      } // applies the mutation to ALL defs/instances within the event store


      function applyMutationToEventStore(eventStore, eventConfigBase, mutation, calendar) {
        var eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);
        var dest = createEmptyEventStore();

        for (var defId in eventStore.defs) {
          var def = eventStore.defs[defId];
          dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, calendar.pluginSystem.hooks.eventDefMutationAppliers, calendar);
        }

        for (var instanceId in eventStore.instances) {
          var instance = eventStore.instances[instanceId];
          var def = dest.defs[instance.defId]; // important to grab the newly modified def

          dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, calendar);
        }

        return dest;
      }

      function applyMutationToEventDef(eventDef, eventConfig, mutation, appliers, calendar) {
        var standardProps = mutation.standardProps || {}; // if hasEnd has not been specified, guess a good value based on deltas.
        // if duration will change, there's no way the default duration will persist,
        // and thus, we need to mark the event as having a real end

        if (standardProps.hasEnd == null && eventConfig.durationEditable && willDeltasAffectDuration(eventConfig.startEditable ? mutation.startDelta : null, mutation.endDelta || null)) {
          standardProps.hasEnd = true; // TODO: is this mutation okay?
        }

        var copy = _assign({}, eventDef, standardProps, {
          ui: _assign({}, eventDef.ui, standardProps.ui)
        });

        if (mutation.extendedProps) {
          copy.extendedProps = _assign({}, copy.extendedProps, mutation.extendedProps);
        }

        for (var _i = 0, appliers_1 = appliers; _i < appliers_1.length; _i++) {
          var applier = appliers_1[_i];
          applier(copy, mutation, calendar);
        }

        if (!copy.hasEnd && calendar.opt('forceEventDuration')) {
          copy.hasEnd = true;
        }

        return copy;
      }

      function willDeltasAffectDuration(startDelta, endDelta) {
        if (startDelta && !asRoughMs(startDelta)) {
          startDelta = null;
        }

        if (endDelta && !asRoughMs(endDelta)) {
          endDelta = null;
        }

        if (!startDelta && !endDelta) {
          return false;
        }

        if (Boolean(startDelta) !== Boolean(endDelta)) {
          return true;
        }

        return !durationsEqual(startDelta, endDelta);
      }

      function applyMutationToEventInstance(eventInstance, eventDef, // must first be modified by applyMutationToEventDef
      eventConfig, mutation, calendar) {
        var dateEnv = calendar.dateEnv;
        var forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;
        var clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;

        var copy = _assign({}, eventInstance);

        if (forceAllDay) {
          copy.range = computeAlignedDayRange(copy.range);
        }

        if (mutation.startDelta && eventConfig.startEditable) {
          copy.range = {
            start: dateEnv.add(copy.range.start, mutation.startDelta),
            end: copy.range.end
          };
        }

        if (clearEnd) {
          copy.range = {
            start: copy.range.start,
            end: calendar.getDefaultEventEnd(eventDef.allDay, copy.range.start)
          };
        } else if (mutation.endDelta && (eventConfig.durationEditable || !willDeltasAffectDuration( // TODO: nonDRY logic above
        eventConfig.startEditable ? mutation.startDelta : null, mutation.endDelta))) {
          copy.range = {
            start: copy.range.start,
            end: dateEnv.add(copy.range.end, mutation.endDelta)
          };
        } // in case event was all-day but the supplied deltas were not
        // better util for this?


        if (eventDef.allDay) {
          copy.range = {
            start: startOfDay(copy.range.start),
            end: startOfDay(copy.range.end)
          };
        } // handle invalid durations


        if (copy.range.end < copy.range.start) {
          copy.range.end = calendar.getDefaultEventEnd(eventDef.allDay, copy.range.start);
        }

        return copy;
      }

      function reduceEventStore(eventStore, action, eventSources, dateProfile, calendar) {
        switch (action.type) {
          case 'RECEIVE_EVENTS':
            // raw
            return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, calendar);

          case 'ADD_EVENTS':
            // already parsed, but not expanded
            return addEvent(eventStore, action.eventStore, // new ones
            dateProfile ? dateProfile.activeRange : null, calendar);

          case 'MERGE_EVENTS':
            // already parsed and expanded
            return mergeEventStores(eventStore, action.eventStore);

          case 'PREV': // TODO: how do we track all actions that affect dateProfile :(

          case 'NEXT':
          case 'SET_DATE':
          case 'SET_VIEW_TYPE':
            if (dateProfile) {
              return expandRecurring(eventStore, dateProfile.activeRange, calendar);
            } else {
              return eventStore;
            }

          case 'CHANGE_TIMEZONE':
            return rezoneDates(eventStore, action.oldDateEnv, calendar.dateEnv);

          case 'MUTATE_EVENTS':
            return applyMutationToRelated(eventStore, action.instanceId, action.mutation, action.fromApi, calendar);

          case 'REMOVE_EVENT_INSTANCES':
            return excludeInstances(eventStore, action.instances);

          case 'REMOVE_EVENT_DEF':
            return filterEventStoreDefs(eventStore, function (eventDef) {
              return eventDef.defId !== action.defId;
            });

          case 'REMOVE_EVENT_SOURCE':
            return excludeEventsBySourceId(eventStore, action.sourceId);

          case 'REMOVE_ALL_EVENT_SOURCES':
            return filterEventStoreDefs(eventStore, function (eventDef) {
              return !eventDef.sourceId; // only keep events with no source id
            });

          case 'REMOVE_ALL_EVENTS':
            return createEmptyEventStore();

          case 'RESET_EVENTS':
            return {
              defs: eventStore.defs,
              instances: eventStore.instances
            };

          default:
            return eventStore;
        }
      }

      function receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, calendar) {
        if (eventSource && // not already removed
        fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources
        ) {
            var subset = parseEvents(transformRawEvents(rawEvents, eventSource, calendar), eventSource.sourceId, calendar);

            if (fetchRange) {
              subset = expandRecurring(subset, fetchRange, calendar);
            }

            return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);
          }

        return eventStore;
      }

      function addEvent(eventStore, subset, expandRange, calendar) {
        if (expandRange) {
          subset = expandRecurring(subset, expandRange, calendar);
        }

        return mergeEventStores(eventStore, subset);
      }

      function rezoneDates(eventStore, oldDateEnv, newDateEnv) {
        var defs = eventStore.defs;
        var instances = mapHash(eventStore.instances, function (instance) {
          var def = defs[instance.defId];

          if (def.allDay || def.recurringDef) {
            return instance; // isn't dependent on timezone
          } else {
            return _assign({}, instance, {
              range: {
                start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),
                end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo))
              },
              forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo,
              forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo
            });
          }
        });
        return {
          defs: defs,
          instances: instances
        };
      }

      function applyMutationToRelated(eventStore, instanceId, mutation, fromApi, calendar) {
        var relevant = getRelevantEvents(eventStore, instanceId);
        var eventConfigBase = fromApi ? {
          '': {
            startEditable: true,
            durationEditable: true,
            constraints: [],
            overlap: null,
            allows: [],
            backgroundColor: '',
            borderColor: '',
            textColor: '',
            classNames: []
          }
        } : calendar.eventUiBases;
        relevant = applyMutationToEventStore(relevant, eventConfigBase, mutation, calendar);
        return mergeEventStores(eventStore, relevant);
      }

      function excludeEventsBySourceId(eventStore, sourceId) {
        return filterEventStoreDefs(eventStore, function (eventDef) {
          return eventDef.sourceId !== sourceId;
        });
      } // QUESTION: why not just return instances? do a general object-property-exclusion util


      function excludeInstances(eventStore, removals) {
        return {
          defs: eventStore.defs,
          instances: filterHash(eventStore.instances, function (instance) {
            return !removals[instance.instanceId];
          })
        };
      } // high-level segmenting-aware tester functions
      // ------------------------------------------------------------------------------------------------------------------------


      function isInteractionValid(interaction, calendar) {
        return isNewPropsValid({
          eventDrag: interaction
        }, calendar); // HACK: the eventDrag props is used for ALL interactions
      }

      function isDateSelectionValid(dateSelection, calendar) {
        return isNewPropsValid({
          dateSelection: dateSelection
        }, calendar);
      }

      function isNewPropsValid(newProps, calendar) {
        var view = calendar.view;

        var props = _assign({
          businessHours: view ? view.props.businessHours : createEmptyEventStore(),
          dateSelection: '',
          eventStore: calendar.state.eventStore,
          eventUiBases: calendar.eventUiBases,
          eventSelection: '',
          eventDrag: null,
          eventResize: null
        }, newProps);

        return (calendar.pluginSystem.hooks.isPropsValid || isPropsValid)(props, calendar);
      }

      function isPropsValid(state, calendar, dateSpanMeta, filterConfig) {
        if (dateSpanMeta === void 0) {
          dateSpanMeta = {};
        }

        if (state.eventDrag && !isInteractionPropsValid(state, calendar, dateSpanMeta, filterConfig)) {
          return false;
        }

        if (state.dateSelection && !isDateSelectionPropsValid(state, calendar, dateSpanMeta, filterConfig)) {
          return false;
        }

        return true;
      } // Moving Event Validation
      // ------------------------------------------------------------------------------------------------------------------------


      function isInteractionPropsValid(state, calendar, dateSpanMeta, filterConfig) {
        var interaction = state.eventDrag; // HACK: the eventDrag props is used for ALL interactions

        var subjectEventStore = interaction.mutatedEvents;
        var subjectDefs = subjectEventStore.defs;
        var subjectInstances = subjectEventStore.instances;
        var subjectConfigs = compileEventUis(subjectDefs, interaction.isEvent ? state.eventUiBases : {
          '': calendar.selectionConfig
        } // if not a real event, validate as a selection
        );

        if (filterConfig) {
          subjectConfigs = mapHash(subjectConfigs, filterConfig);
        }

        var otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances); // exclude the subject events. TODO: exclude defs too?

        var otherDefs = otherEventStore.defs;
        var otherInstances = otherEventStore.instances;
        var otherConfigs = compileEventUis(otherDefs, state.eventUiBases);

        for (var subjectInstanceId in subjectInstances) {
          var subjectInstance = subjectInstances[subjectInstanceId];
          var subjectRange = subjectInstance.range;
          var subjectConfig = subjectConfigs[subjectInstance.defId];
          var subjectDef = subjectDefs[subjectInstance.defId]; // constraint

          if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, calendar)) {
            return false;
          } // overlap


          var overlapFunc = calendar.opt('eventOverlap');

          if (typeof overlapFunc !== 'function') {
            overlapFunc = null;
          }

          for (var otherInstanceId in otherInstances) {
            var otherInstance = otherInstances[otherInstanceId]; // intersect! evaluate

            if (rangesIntersect(subjectRange, otherInstance.range)) {
              var otherOverlap = otherConfigs[otherInstance.defId].overlap; // consider the other event's overlap. only do this if the subject event is a "real" event

              if (otherOverlap === false && interaction.isEvent) {
                return false;
              }

              if (subjectConfig.overlap === false) {
                return false;
              }

              if (overlapFunc && !overlapFunc(new EventApi(calendar, otherDefs[otherInstance.defId], otherInstance), // still event
              new EventApi(calendar, subjectDef, subjectInstance) // moving event
              )) {
                return false;
              }
            }
          } // allow (a function)


          for (var _i = 0, _a = subjectConfig.allows; _i < _a.length; _i++) {
            var subjectAllow = _a[_i];

            var subjectDateSpan = _assign({}, dateSpanMeta, {
              range: subjectInstance.range,
              allDay: subjectDef.allDay
            });

            var origDef = state.eventStore.defs[subjectDef.defId];
            var origInstance = state.eventStore.instances[subjectInstanceId];
            var eventApi = void 0;

            if (origDef) {
              // was previously in the calendar
              eventApi = new EventApi(calendar, origDef, origInstance);
            } else {
              // was an external event
              eventApi = new EventApi(calendar, subjectDef); // no instance, because had no dates
            }

            if (!subjectAllow(calendar.buildDateSpanApi(subjectDateSpan), eventApi)) {
              return false;
            }
          }
        }

        return true;
      } // Date Selection Validation
      // ------------------------------------------------------------------------------------------------------------------------


      function isDateSelectionPropsValid(state, calendar, dateSpanMeta, filterConfig) {
        var relevantEventStore = state.eventStore;
        var relevantDefs = relevantEventStore.defs;
        var relevantInstances = relevantEventStore.instances;
        var selection = state.dateSelection;
        var selectionRange = selection.range;
        var selectionConfig = calendar.selectionConfig;

        if (filterConfig) {
          selectionConfig = filterConfig(selectionConfig);
        } // constraint


        if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, calendar)) {
          return false;
        } // overlap


        var overlapFunc = calendar.opt('selectOverlap');

        if (typeof overlapFunc !== 'function') {
          overlapFunc = null;
        }

        for (var relevantInstanceId in relevantInstances) {
          var relevantInstance = relevantInstances[relevantInstanceId]; // intersect! evaluate

          if (rangesIntersect(selectionRange, relevantInstance.range)) {
            if (selectionConfig.overlap === false) {
              return false;
            }

            if (overlapFunc && !overlapFunc(new EventApi(calendar, relevantDefs[relevantInstance.defId], relevantInstance))) {
              return false;
            }
          }
        } // allow (a function)


        for (var _i = 0, _a = selectionConfig.allows; _i < _a.length; _i++) {
          var selectionAllow = _a[_i];

          var fullDateSpan = _assign({}, dateSpanMeta, selection);

          if (!selectionAllow(calendar.buildDateSpanApi(fullDateSpan), null)) {
            return false;
          }
        }

        return true;
      } // Constraint Utils
      // ------------------------------------------------------------------------------------------------------------------------


      function allConstraintsPass(constraints, subjectRange, otherEventStore, businessHoursUnexpanded, calendar) {
        for (var _i = 0, constraints_1 = constraints; _i < constraints_1.length; _i++) {
          var constraint = constraints_1[_i];

          if (!anyRangesContainRange(constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, calendar), subjectRange)) {
            return false;
          }
        }

        return true;
      }

      function constraintToRanges(constraint, subjectRange, // for expanding a recurring constraint, or expanding business hours
      otherEventStore, // for if constraint is an even group ID
      businessHoursUnexpanded, // for if constraint is 'businessHours'
      calendar // for expanding businesshours
      ) {
        if (constraint === 'businessHours') {
          return eventStoreToRanges(expandRecurring(businessHoursUnexpanded, subjectRange, calendar));
        } else if (typeof constraint === 'string') {
          // an group ID
          return eventStoreToRanges(filterEventStoreDefs(otherEventStore, function (eventDef) {
            return eventDef.groupId === constraint;
          }));
        } else if (typeof constraint === 'object' && constraint) {
          // non-null object
          return eventStoreToRanges(expandRecurring(constraint, subjectRange, calendar));
        }

        return []; // if it's false
      } // TODO: move to event-store file?


      function eventStoreToRanges(eventStore) {
        var instances = eventStore.instances;
        var ranges = [];

        for (var instanceId in instances) {
          ranges.push(instances[instanceId].range);
        }

        return ranges;
      } // TODO: move to geom file?


      function anyRangesContainRange(outerRanges, innerRange) {
        for (var _i = 0, outerRanges_1 = outerRanges; _i < outerRanges_1.length; _i++) {
          var outerRange = outerRanges_1[_i];

          if (rangeContainsRange(outerRange, innerRange)) {
            return true;
          }
        }

        return false;
      } // Parsing
      // ------------------------------------------------------------------------------------------------------------------------


      function normalizeConstraint(input, calendar) {
        if (Array.isArray(input)) {
          return parseEvents(input, '', calendar, true); // allowOpenRange=true
        } else if (typeof input === 'object' && input) {
          // non-null object
          return parseEvents([input], '', calendar, true); // allowOpenRange=true
        } else if (input != null) {
          return String(input);
        } else {
          return null;
        }
      }

      function htmlEscape(s) {
        return (s + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&#039;').replace(/"/g, '&quot;').replace(/\n/g, '<br />');
      } // Given a hash of CSS properties, returns a string of CSS.
      // Uses property names as-is (no camel-case conversion). Will not make statements for null/undefined values.


      function cssToStr(cssProps) {
        var statements = [];

        for (var name_1 in cssProps) {
          var val = cssProps[name_1];

          if (val != null && val !== '') {
            statements.push(name_1 + ':' + val);
          }
        }

        return statements.join(';');
      } // Given an object hash of HTML attribute names to values,
      // generates a string that can be injected between < > in HTML


      function attrsToStr(attrs) {
        var parts = [];

        for (var name_2 in attrs) {
          var val = attrs[name_2];

          if (val != null) {
            parts.push(name_2 + '="' + htmlEscape(val) + '"');
          }
        }

        return parts.join(' ');
      }

      function parseClassName(raw) {
        if (Array.isArray(raw)) {
          return raw;
        } else if (typeof raw === 'string') {
          return raw.split(/\s+/);
        } else {
          return [];
        }
      }

      var UNSCOPED_EVENT_UI_PROPS = {
        editable: Boolean,
        startEditable: Boolean,
        durationEditable: Boolean,
        constraint: null,
        overlap: null,
        allow: null,
        className: parseClassName,
        classNames: parseClassName,
        color: String,
        backgroundColor: String,
        borderColor: String,
        textColor: String
      };

      function processUnscopedUiProps(rawProps, calendar, leftovers) {
        var props = refineProps(rawProps, UNSCOPED_EVENT_UI_PROPS, {}, leftovers);
        var constraint = normalizeConstraint(props.constraint, calendar);
        return {
          startEditable: props.startEditable != null ? props.startEditable : props.editable,
          durationEditable: props.durationEditable != null ? props.durationEditable : props.editable,
          constraints: constraint != null ? [constraint] : [],
          overlap: props.overlap,
          allows: props.allow != null ? [props.allow] : [],
          backgroundColor: props.backgroundColor || props.color,
          borderColor: props.borderColor || props.color,
          textColor: props.textColor,
          classNames: props.classNames.concat(props.className)
        };
      }

      function processScopedUiProps(prefix, rawScoped, calendar, leftovers) {
        var rawUnscoped = {};
        var wasFound = {};

        for (var key in UNSCOPED_EVENT_UI_PROPS) {
          var scopedKey = prefix + capitaliseFirstLetter(key);
          rawUnscoped[key] = rawScoped[scopedKey];
          wasFound[scopedKey] = true;
        }

        if (prefix === 'event') {
          rawUnscoped.editable = rawScoped.editable; // special case. there is no 'eventEditable', just 'editable'
        }

        if (leftovers) {
          for (var key in rawScoped) {
            if (!wasFound[key]) {
              leftovers[key] = rawScoped[key];
            }
          }
        }

        return processUnscopedUiProps(rawUnscoped, calendar);
      }

      var EMPTY_EVENT_UI = {
        startEditable: null,
        durationEditable: null,
        constraints: [],
        overlap: null,
        allows: [],
        backgroundColor: '',
        borderColor: '',
        textColor: '',
        classNames: []
      }; // prevent against problems with <2 args!

      function combineEventUis(uis) {
        return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);
      }

      function combineTwoEventUis(item0, item1) {
        return {
          startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,
          durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,
          constraints: item0.constraints.concat(item1.constraints),
          overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,
          allows: item0.allows.concat(item1.allows),
          backgroundColor: item1.backgroundColor || item0.backgroundColor,
          borderColor: item1.borderColor || item0.borderColor,
          textColor: item1.textColor || item0.textColor,
          classNames: item0.classNames.concat(item1.classNames)
        };
      }

      var NON_DATE_PROPS = {
        id: String,
        groupId: String,
        title: String,
        url: String,
        rendering: String,
        extendedProps: null
      };
      var DATE_PROPS = {
        start: null,
        date: null,
        end: null,
        allDay: null
      };
      var uid = 0;

      function parseEvent(raw, sourceId, calendar, allowOpenRange) {
        var allDayDefault = computeIsAllDayDefault(sourceId, calendar);
        var leftovers0 = {};
        var recurringRes = parseRecurring(raw, // raw, but with single-event stuff stripped out
        allDayDefault, calendar.dateEnv, calendar.pluginSystem.hooks.recurringTypes, leftovers0 // will populate with non-recurring props
        );

        if (recurringRes) {
          var def = parseEventDef(leftovers0, sourceId, recurringRes.allDay, Boolean(recurringRes.duration), calendar);
          def.recurringDef = {
            typeId: recurringRes.typeId,
            typeData: recurringRes.typeData,
            duration: recurringRes.duration
          };
          return {
            def: def,
            instance: null
          };
        } else {
          var leftovers1 = {};
          var singleRes = parseSingle(raw, allDayDefault, calendar, leftovers1, allowOpenRange);

          if (singleRes) {
            var def = parseEventDef(leftovers1, sourceId, singleRes.allDay, singleRes.hasEnd, calendar);
            var instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);
            return {
              def: def,
              instance: instance
            };
          }
        }

        return null;
      }
      /*
      Will NOT populate extendedProps with the leftover properties.
      Will NOT populate date-related props.
      The EventNonDateInput has been normalized (id => publicId, etc).
      */


      function parseEventDef(raw, sourceId, allDay, hasEnd, calendar) {
        var leftovers = {};
        var def = pluckNonDateProps(raw, calendar, leftovers);
        def.defId = String(uid++);
        def.sourceId = sourceId;
        def.allDay = allDay;
        def.hasEnd = hasEnd;

        for (var _i = 0, _a = calendar.pluginSystem.hooks.eventDefParsers; _i < _a.length; _i++) {
          var eventDefParser = _a[_i];
          var newLeftovers = {};
          eventDefParser(def, leftovers, newLeftovers);
          leftovers = newLeftovers;
        }

        def.extendedProps = _assign(leftovers, def.extendedProps || {}); // help out EventApi from having user modify props

        Object.freeze(def.ui.classNames);
        Object.freeze(def.extendedProps);
        return def;
      }

      function createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {
        return {
          instanceId: String(uid++),
          defId: defId,
          range: range,
          forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,
          forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo
        };
      }

      function parseSingle(raw, allDayDefault, calendar, leftovers, allowOpenRange) {
        var props = pluckDateProps(raw, leftovers);
        var allDay = props.allDay;
        var startMeta;
        var startMarker = null;
        var hasEnd = false;
        var endMeta;
        var endMarker = null;
        startMeta = calendar.dateEnv.createMarkerMeta(props.start);

        if (startMeta) {
          startMarker = startMeta.marker;
        } else if (!allowOpenRange) {
          return null;
        }

        if (props.end != null) {
          endMeta = calendar.dateEnv.createMarkerMeta(props.end);
        }

        if (allDay == null) {
          if (allDayDefault != null) {
            allDay = allDayDefault;
          } else {
            // fall back to the date props LAST
            allDay = (!startMeta || startMeta.isTimeUnspecified) && (!endMeta || endMeta.isTimeUnspecified);
          }
        }

        if (allDay && startMarker) {
          startMarker = startOfDay(startMarker);
        }

        if (endMeta) {
          endMarker = endMeta.marker;

          if (allDay) {
            endMarker = startOfDay(endMarker);
          }

          if (startMarker && endMarker <= startMarker) {
            endMarker = null;
          }
        }

        if (endMarker) {
          hasEnd = true;
        } else if (!allowOpenRange) {
          hasEnd = calendar.opt('forceEventDuration') || false;
          endMarker = calendar.dateEnv.add(startMarker, allDay ? calendar.defaultAllDayEventDuration : calendar.defaultTimedEventDuration);
        }

        return {
          allDay: allDay,
          hasEnd: hasEnd,
          range: {
            start: startMarker,
            end: endMarker
          },
          forcedStartTzo: startMeta ? startMeta.forcedTzo : null,
          forcedEndTzo: endMeta ? endMeta.forcedTzo : null
        };
      }

      function pluckDateProps(raw, leftovers) {
        var props = refineProps(raw, DATE_PROPS, {}, leftovers);
        props.start = props.start !== null ? props.start : props.date;
        delete props.date;
        return props;
      }

      function pluckNonDateProps(raw, calendar, leftovers) {
        var preLeftovers = {};
        var props = refineProps(raw, NON_DATE_PROPS, {}, preLeftovers);
        var ui = processUnscopedUiProps(preLeftovers, calendar, leftovers);
        props.publicId = props.id;
        delete props.id;
        props.ui = ui;
        return props;
      }

      function computeIsAllDayDefault(sourceId, calendar) {
        var res = null;

        if (sourceId) {
          var source = calendar.state.eventSources[sourceId];
          res = source.allDayDefault;
        }

        if (res == null) {
          res = calendar.opt('allDayDefault');
        }

        return res;
      }

      var DEF_DEFAULTS = {
        startTime: '09:00',
        endTime: '17:00',
        daysOfWeek: [1, 2, 3, 4, 5],
        rendering: 'inverse-background',
        classNames: 'fc-nonbusiness',
        groupId: '_businessHours' // so multiple defs get grouped

      };
      /*
      TODO: pass around as EventDefHash!!!
      */

      function parseBusinessHours(input, calendar) {
        return parseEvents(refineInputs(input), '', calendar);
      }

      function refineInputs(input) {
        var rawDefs;

        if (input === true) {
          rawDefs = [{}]; // will get DEF_DEFAULTS verbatim
        } else if (Array.isArray(input)) {
          // if specifying an array, every sub-definition NEEDS a day-of-week
          rawDefs = input.filter(function (rawDef) {
            return rawDef.daysOfWeek;
          });
        } else if (typeof input === 'object' && input) {
          // non-null object
          rawDefs = [input];
        } else {
          // is probably false
          rawDefs = [];
        }

        rawDefs = rawDefs.map(function (rawDef) {
          return _assign({}, DEF_DEFAULTS, rawDef);
        });
        return rawDefs;
      }

      function memoizeRendering(renderFunc, unrenderFunc, dependencies) {
        if (dependencies === void 0) {
          dependencies = [];
        }

        var dependents = [];
        var thisContext;
        var prevArgs;

        function unrender() {
          if (prevArgs) {
            for (var _i = 0, dependents_1 = dependents; _i < dependents_1.length; _i++) {
              var dependent = dependents_1[_i];
              dependent.unrender();
            }

            if (unrenderFunc) {
              unrenderFunc.apply(thisContext, prevArgs);
            }

            prevArgs = null;
          }
        }

        function res() {
          if (!prevArgs || !isArraysEqual(prevArgs, arguments)) {
            unrender();
            thisContext = this;
            prevArgs = arguments;
            renderFunc.apply(this, arguments);
          }
        }

        res.dependents = dependents;
        res.unrender = unrender;

        for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {
          var dependency = dependencies_1[_i];
          dependency.dependents.push(res);
        }

        return res;
      }

      function isValuesSimilar(val0, val1, depth) {
        if (depth === void 0) {
          depth = 1;
        }

        if (val0 === val1) {
          return true;
        } else if (Array.isArray(val0) && Array.isArray(val1)) {
          return isArraysSimilar(val0, val1, depth);
        } else if (typeof val0 === 'object' && val0 && typeof val1 === 'object' && val1) {
          // non-null objects
          return isObjectsSimilar(val0, val1, depth);
        } else {
          return false;
        }
      }

      function isArraysSimilar(a0, a1, depth) {
        if (depth === void 0) {
          depth = 1;
        }

        if (a0 === a1) {
          return true;
        } else if (depth > 0) {
          if (a0.length !== a1.length) {
            return false;
          } else {
            for (var i = 0; i < a0.length; i++) {
              if (!isValuesSimilar(a0[i], a1[i], depth - 1)) {
                return false;
              }
            }

            return true;
          }
        } else {
          return false;
        }
      }

      function isObjectsSimilar(obj0, obj1, depth) {
        if (depth === void 0) {
          depth = 1;
        }

        if (obj0 === obj1) {
          return true;
        } else if (depth > 0) {
          for (var prop in obj0) {
            if (!(prop in obj1)) {
              return false;
            }
          }

          for (var prop in obj1) {
            if (!(prop in obj0)) {
              return false;
            } else {
              if (!isValuesSimilar(obj0[prop], obj1[prop], depth - 1)) {
                return false;
              }
            }
          }

          return true;
        } else {
          return false;
        }
      }

      function computeChangedProps(obj0, obj1, depth) {
        if (depth === void 0) {
          depth = 1;
        }

        var res = {};

        for (var prop in obj1) {
          if (!(prop in obj0) || !isValuesSimilar(obj0[prop], obj1[prop], depth - 1)) {
            res[prop] = obj1[prop];
          }
        }

        return res;
      }

      function anyKeysRemoved(obj0, obj1) {
        for (var prop in obj0) {
          if (!(prop in obj1)) {
            return true;
          }
        }

        return false;
      }

      var EMPTY_EVENT_STORE = createEmptyEventStore(); // for purecomponents. TODO: keep elsewhere

      var Splitter =
      /** @class */
      function () {
        function Splitter() {
          this.getKeysForEventDefs = memoize(this._getKeysForEventDefs);
          this.splitDateSelection = memoize(this._splitDateSpan);
          this.splitEventStore = memoize(this._splitEventStore);
          this.splitIndividualUi = memoize(this._splitIndividualUi);
          this.splitEventDrag = memoize(this._splitInteraction);
          this.splitEventResize = memoize(this._splitInteraction);
          this.eventUiBuilders = {}; // TODO: typescript protection
        }

        Splitter.prototype.splitProps = function (props) {
          var _this = this;

          var keyInfos = this.getKeyInfo(props);
          var defKeys = this.getKeysForEventDefs(props.eventStore);
          var dateSelections = this.splitDateSelection(props.dateSelection);
          var individualUi = this.splitIndividualUi(props.eventUiBases, defKeys); // the individual *bases*

          var eventStores = this.splitEventStore(props.eventStore, defKeys);
          var eventDrags = this.splitEventDrag(props.eventDrag);
          var eventResizes = this.splitEventResize(props.eventResize);
          var splitProps = {};
          this.eventUiBuilders = mapHash(keyInfos, function (info, key) {
            return _this.eventUiBuilders[key] || memoize(buildEventUiForKey);
          });

          for (var key in keyInfos) {
            var keyInfo = keyInfos[key];
            var eventStore = eventStores[key] || EMPTY_EVENT_STORE;
            var buildEventUi = this.eventUiBuilders[key];
            splitProps[key] = {
              businessHours: keyInfo.businessHours || props.businessHours,
              dateSelection: dateSelections[key] || null,
              eventStore: eventStore,
              eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),
              eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',
              eventDrag: eventDrags[key] || null,
              eventResize: eventResizes[key] || null
            };
          }

          return splitProps;
        };

        Splitter.prototype._splitDateSpan = function (dateSpan) {
          var dateSpans = {};

          if (dateSpan) {
            var keys = this.getKeysForDateSpan(dateSpan);

            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
              var key = keys_1[_i];
              dateSpans[key] = dateSpan;
            }
          }

          return dateSpans;
        };

        Splitter.prototype._getKeysForEventDefs = function (eventStore) {
          var _this = this;

          return mapHash(eventStore.defs, function (eventDef) {
            return _this.getKeysForEventDef(eventDef);
          });
        };

        Splitter.prototype._splitEventStore = function (eventStore, defKeys) {
          var defs = eventStore.defs,
              instances = eventStore.instances;
          var splitStores = {};

          for (var defId in defs) {
            for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {
              var key = _a[_i];

              if (!splitStores[key]) {
                splitStores[key] = createEmptyEventStore();
              }

              splitStores[key].defs[defId] = defs[defId];
            }
          }

          for (var instanceId in instances) {
            var instance = instances[instanceId];

            for (var _b = 0, _c = defKeys[instance.defId]; _b < _c.length; _b++) {
              var key = _c[_b];

              if (splitStores[key]) {
                // must have already been created
                splitStores[key].instances[instanceId] = instance;
              }
            }
          }

          return splitStores;
        };

        Splitter.prototype._splitIndividualUi = function (eventUiBases, defKeys) {
          var splitHashes = {};

          for (var defId in eventUiBases) {
            if (defId) {
              // not the '' key
              for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {
                var key = _a[_i];

                if (!splitHashes[key]) {
                  splitHashes[key] = {};
                }

                splitHashes[key][defId] = eventUiBases[defId];
              }
            }
          }

          return splitHashes;
        };

        Splitter.prototype._splitInteraction = function (interaction) {
          var splitStates = {};

          if (interaction) {
            var affectedStores_1 = this._splitEventStore(interaction.affectedEvents, this._getKeysForEventDefs(interaction.affectedEvents) // can't use cached. might be events from other calendar
            ); // can't rely on defKeys because event data is mutated


            var mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents);

            var mutatedStores_1 = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId);

            var populate = function populate(key) {
              if (!splitStates[key]) {
                splitStates[key] = {
                  affectedEvents: affectedStores_1[key] || EMPTY_EVENT_STORE,
                  mutatedEvents: mutatedStores_1[key] || EMPTY_EVENT_STORE,
                  isEvent: interaction.isEvent,
                  origSeg: interaction.origSeg
                };
              }
            };

            for (var key in affectedStores_1) {
              populate(key);
            }

            for (var key in mutatedStores_1) {
              populate(key);
            }
          }

          return splitStates;
        };

        return Splitter;
      }();

      function buildEventUiForKey(allUi, eventUiForKey, individualUi) {
        var baseParts = [];

        if (allUi) {
          baseParts.push(allUi);
        }

        if (eventUiForKey) {
          baseParts.push(eventUiForKey);
        }

        var stuff = {
          '': combineEventUis(baseParts)
        };

        if (individualUi) {
          _assign(stuff, individualUi);
        }

        return stuff;
      } // Generates HTML for an anchor to another view into the calendar.
      // Will either generate an <a> tag or a non-clickable <span> tag, depending on enabled settings.
      // `gotoOptions` can either be a DateMarker, or an object with the form:
      // { date, type, forceOff }
      // `type` is a view-type like "day" or "week". default value is "day".
      // `attrs` and `innerHtml` are use to generate the rest of the HTML tag.


      function buildGotoAnchorHtml(component, gotoOptions, attrs, innerHtml) {
        var dateEnv = component.dateEnv;
        var date;
        var type;
        var forceOff;
        var finalOptions;

        if (gotoOptions instanceof Date) {
          date = gotoOptions; // a single date-like input
        } else {
          date = gotoOptions.date;
          type = gotoOptions.type;
          forceOff = gotoOptions.forceOff;
        }

        finalOptions = {
          date: dateEnv.formatIso(date, {
            omitTime: true
          }),
          type: type || 'day'
        };

        if (typeof attrs === 'string') {
          innerHtml = attrs;
          attrs = null;
        }

        attrs = attrs ? ' ' + attrsToStr(attrs) : ''; // will have a leading space

        innerHtml = innerHtml || '';

        if (!forceOff && component.opt('navLinks')) {
          return '<a' + attrs + ' data-goto="' + htmlEscape(JSON.stringify(finalOptions)) + '">' + innerHtml + '</a>';
        } else {
          return '<span' + attrs + '>' + innerHtml + '</span>';
        }
      }

      function getAllDayHtml(component) {
        return component.opt('allDayHtml') || htmlEscape(component.opt('allDayText'));
      } // Computes HTML classNames for a single-day element


      function getDayClasses(date, dateProfile, context, noThemeHighlight) {
        var calendar = context.calendar,
            view = context.view,
            theme = context.theme,
            dateEnv = context.dateEnv;
        var classes = [];
        var todayStart;
        var todayEnd;

        if (!rangeContainsMarker(dateProfile.activeRange, date)) {
          classes.push('fc-disabled-day');
        } else {
          classes.push('fc-' + DAY_IDS[date.getUTCDay()]);

          if (view.opt('monthMode') && dateEnv.getMonth(date) !== dateEnv.getMonth(dateProfile.currentRange.start)) {
            classes.push('fc-other-month');
          }

          todayStart = startOfDay(calendar.getNow());
          todayEnd = addDays(todayStart, 1);

          if (date < todayStart) {
            classes.push('fc-past');
          } else if (date >= todayEnd) {
            classes.push('fc-future');
          } else {
            classes.push('fc-today');

            if (noThemeHighlight !== true) {
              classes.push(theme.getClass('today'));
            }
          }
        }

        return classes;
      } // given a function that resolves a result asynchronously.
      // the function can either call passed-in success and failure callbacks,
      // or it can return a promise.
      // if you need to pass additional params to func, bind them first.


      function unpromisify(func, success, failure) {
        // guard against success/failure callbacks being called more than once
        // and guard against a promise AND callback being used together.
        var isResolved = false;

        var wrappedSuccess = function wrappedSuccess() {
          if (!isResolved) {
            isResolved = true;
            success.apply(this, arguments);
          }
        };

        var wrappedFailure = function wrappedFailure() {
          if (!isResolved) {
            isResolved = true;

            if (failure) {
              failure.apply(this, arguments);
            }
          }
        };

        var res = func(wrappedSuccess, wrappedFailure);

        if (res && typeof res.then === 'function') {
          res.then(wrappedSuccess, wrappedFailure);
        }
      }

      var Mixin =
      /** @class */
      function () {
        function Mixin() {} // mix into a CLASS


        Mixin.mixInto = function (destClass) {
          this.mixIntoObj(destClass.prototype);
        }; // mix into ANY object


        Mixin.mixIntoObj = function (destObj) {
          var _this = this;

          Object.getOwnPropertyNames(this.prototype).forEach(function (name) {
            if (!destObj[name]) {
              // if destination doesn't already define it
              destObj[name] = _this.prototype[name];
            }
          });
        };
        /*
        will override existing methods
        TODO: remove! not used anymore
        */


        Mixin.mixOver = function (destClass) {
          var _this = this;

          Object.getOwnPropertyNames(this.prototype).forEach(function (name) {
            destClass.prototype[name] = _this.prototype[name];
          });
        };

        return Mixin;
      }();
      /*
      USAGE:
        import { default as EmitterMixin, EmitterInterface } from './EmitterMixin'
      in class:
        on: EmitterInterface['on']
        one: EmitterInterface['one']
        off: EmitterInterface['off']
        trigger: EmitterInterface['trigger']
        triggerWith: EmitterInterface['triggerWith']
        hasHandlers: EmitterInterface['hasHandlers']
      after class:
        EmitterMixin.mixInto(TheClass)
      */


      var EmitterMixin =
      /** @class */
      function (_super) {
        __extends(EmitterMixin, _super);

        function EmitterMixin() {
          return _super !== null && _super.apply(this, arguments) || this;
        }

        EmitterMixin.prototype.on = function (type, handler) {
          addToHash(this._handlers || (this._handlers = {}), type, handler);
          return this; // for chaining
        }; // todo: add comments


        EmitterMixin.prototype.one = function (type, handler) {
          addToHash(this._oneHandlers || (this._oneHandlers = {}), type, handler);
          return this; // for chaining
        };

        EmitterMixin.prototype.off = function (type, handler) {
          if (this._handlers) {
            removeFromHash(this._handlers, type, handler);
          }

          if (this._oneHandlers) {
            removeFromHash(this._oneHandlers, type, handler);
          }

          return this; // for chaining
        };

        EmitterMixin.prototype.trigger = function (type) {
          var args = [];

          for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
          }

          this.triggerWith(type, this, args);
          return this; // for chaining
        };

        EmitterMixin.prototype.triggerWith = function (type, context, args) {
          if (this._handlers) {
            applyAll(this._handlers[type], context, args);
          }

          if (this._oneHandlers) {
            applyAll(this._oneHandlers[type], context, args);
            delete this._oneHandlers[type]; // will never fire again
          }

          return this; // for chaining
        };

        EmitterMixin.prototype.hasHandlers = function (type) {
          return this._handlers && this._handlers[type] && this._handlers[type].length || this._oneHandlers && this._oneHandlers[type] && this._oneHandlers[type].length;
        };

        return EmitterMixin;
      }(Mixin);

      function addToHash(hash, type, handler) {
        (hash[type] || (hash[type] = [])).push(handler);
      }

      function removeFromHash(hash, type, handler) {
        if (handler) {
          if (hash[type]) {
            hash[type] = hash[type].filter(function (func) {
              return func !== handler;
            });
          }
        } else {
          delete hash[type]; // remove all handler funcs for this type
        }
      }
      /*
      Records offset information for a set of elements, relative to an origin element.
      Can record the left/right OR the top/bottom OR both.
      Provides methods for querying the cache by position.
      */


      var PositionCache =
      /** @class */
      function () {
        function PositionCache(originEl, els, isHorizontal, isVertical) {
          this.originEl = originEl;
          this.els = els;
          this.isHorizontal = isHorizontal;
          this.isVertical = isVertical;
        } // Queries the els for coordinates and stores them.
        // Call this method before using and of the get* methods below.


        PositionCache.prototype.build = function () {
          var originEl = this.originEl;
          var originClientRect = this.originClientRect = originEl.getBoundingClientRect(); // relative to viewport top-left

          if (this.isHorizontal) {
            this.buildElHorizontals(originClientRect.left);
          }

          if (this.isVertical) {
            this.buildElVerticals(originClientRect.top);
          }
        }; // Populates the left/right internal coordinate arrays


        PositionCache.prototype.buildElHorizontals = function (originClientLeft) {
          var lefts = [];
          var rights = [];

          for (var _i = 0, _a = this.els; _i < _a.length; _i++) {
            var el = _a[_i];
            var rect = el.getBoundingClientRect();
            lefts.push(rect.left - originClientLeft);
            rights.push(rect.right - originClientLeft);
          }

          this.lefts = lefts;
          this.rights = rights;
        }; // Populates the top/bottom internal coordinate arrays


        PositionCache.prototype.buildElVerticals = function (originClientTop) {
          var tops = [];
          var bottoms = [];

          for (var _i = 0, _a = this.els; _i < _a.length; _i++) {
            var el = _a[_i];
            var rect = el.getBoundingClientRect();
            tops.push(rect.top - originClientTop);
            bottoms.push(rect.bottom - originClientTop);
          }

          this.tops = tops;
          this.bottoms = bottoms;
        }; // Given a left offset (from document left), returns the index of the el that it horizontally intersects.
        // If no intersection is made, returns undefined.


        PositionCache.prototype.leftToIndex = function (leftPosition) {
          var lefts = this.lefts;
          var rights = this.rights;
          var len = lefts.length;
          var i;

          for (i = 0; i < len; i++) {
            if (leftPosition >= lefts[i] && leftPosition < rights[i]) {
              return i;
            }
          }
        }; // Given a top offset (from document top), returns the index of the el that it vertically intersects.
        // If no intersection is made, returns undefined.


        PositionCache.prototype.topToIndex = function (topPosition) {
          var tops = this.tops;
          var bottoms = this.bottoms;
          var len = tops.length;
          var i;

          for (i = 0; i < len; i++) {
            if (topPosition >= tops[i] && topPosition < bottoms[i]) {
              return i;
            }
          }
        }; // Gets the width of the element at the given index


        PositionCache.prototype.getWidth = function (leftIndex) {
          return this.rights[leftIndex] - this.lefts[leftIndex];
        }; // Gets the height of the element at the given index


        PositionCache.prototype.getHeight = function (topIndex) {
          return this.bottoms[topIndex] - this.tops[topIndex];
        };

        return PositionCache;
      }();
      /*
      An object for getting/setting scroll-related information for an element.
      Internally, this is done very differently for window versus DOM element,
      so this object serves as a common interface.
      */


      var ScrollController =
      /** @class */
      function () {
        function ScrollController() {}

        ScrollController.prototype.getMaxScrollTop = function () {
          return this.getScrollHeight() - this.getClientHeight();
        };

        ScrollController.prototype.getMaxScrollLeft = function () {
          return this.getScrollWidth() - this.getClientWidth();
        };

        ScrollController.prototype.canScrollVertically = function () {
          return this.getMaxScrollTop() > 0;
        };

        ScrollController.prototype.canScrollHorizontally = function () {
          return this.getMaxScrollLeft() > 0;
        };

        ScrollController.prototype.canScrollUp = function () {
          return this.getScrollTop() > 0;
        };

        ScrollController.prototype.canScrollDown = function () {
          return this.getScrollTop() < this.getMaxScrollTop();
        };

        ScrollController.prototype.canScrollLeft = function () {
          return this.getScrollLeft() > 0;
        };

        ScrollController.prototype.canScrollRight = function () {
          return this.getScrollLeft() < this.getMaxScrollLeft();
        };

        return ScrollController;
      }();

      var ElementScrollController =
      /** @class */
      function (_super) {
        __extends(ElementScrollController, _super);

        function ElementScrollController(el) {
          var _this = _super.call(this) || this;

          _this.el = el;
          return _this;
        }

        ElementScrollController.prototype.getScrollTop = function () {
          return this.el.scrollTop;
        };

        ElementScrollController.prototype.getScrollLeft = function () {
          return this.el.scrollLeft;
        };

        ElementScrollController.prototype.setScrollTop = function (top) {
          this.el.scrollTop = top;
        };

        ElementScrollController.prototype.setScrollLeft = function (left) {
          this.el.scrollLeft = left;
        };

        ElementScrollController.prototype.getScrollWidth = function () {
          return this.el.scrollWidth;
        };

        ElementScrollController.prototype.getScrollHeight = function () {
          return this.el.scrollHeight;
        };

        ElementScrollController.prototype.getClientHeight = function () {
          return this.el.clientHeight;
        };

        ElementScrollController.prototype.getClientWidth = function () {
          return this.el.clientWidth;
        };

        return ElementScrollController;
      }(ScrollController);

      var WindowScrollController =
      /** @class */
      function (_super) {
        __extends(WindowScrollController, _super);

        function WindowScrollController() {
          return _super !== null && _super.apply(this, arguments) || this;
        }

        WindowScrollController.prototype.getScrollTop = function () {
          return window.pageYOffset;
        };

        WindowScrollController.prototype.getScrollLeft = function () {
          return window.pageXOffset;
        };

        WindowScrollController.prototype.setScrollTop = function (n) {
          window.scroll(window.pageXOffset, n);
        };

        WindowScrollController.prototype.setScrollLeft = function (n) {
          window.scroll(n, window.pageYOffset);
        };

        WindowScrollController.prototype.getScrollWidth = function () {
          return document.documentElement.scrollWidth;
        };

        WindowScrollController.prototype.getScrollHeight = function () {
          return document.documentElement.scrollHeight;
        };

        WindowScrollController.prototype.getClientHeight = function () {
          return document.documentElement.clientHeight;
        };

        WindowScrollController.prototype.getClientWidth = function () {
          return document.documentElement.clientWidth;
        };

        return WindowScrollController;
      }(ScrollController);
      /*
      Embodies a div that has potential scrollbars
      */


      var ScrollComponent =
      /** @class */
      function (_super) {
        __extends(ScrollComponent, _super);

        function ScrollComponent(overflowX, overflowY) {
          var _this = _super.call(this, createElement('div', {
            className: 'fc-scroller'
          })) || this;

          _this.overflowX = overflowX;
          _this.overflowY = overflowY;

          _this.applyOverflow();

          return _this;
        } // sets to natural height, unlocks overflow


        ScrollComponent.prototype.clear = function () {
          this.setHeight('auto');
          this.applyOverflow();
        };

        ScrollComponent.prototype.destroy = function () {
          removeElement(this.el);
        }; // Overflow
        // -----------------------------------------------------------------------------------------------------------------


        ScrollComponent.prototype.applyOverflow = function () {
          applyStyle(this.el, {
            overflowX: this.overflowX,
            overflowY: this.overflowY
          });
        }; // Causes any 'auto' overflow values to resolves to 'scroll' or 'hidden'.
        // Useful for preserving scrollbar widths regardless of future resizes.
        // Can pass in scrollbarWidths for optimization.


        ScrollComponent.prototype.lockOverflow = function (scrollbarWidths) {
          var overflowX = this.overflowX;
          var overflowY = this.overflowY;
          scrollbarWidths = scrollbarWidths || this.getScrollbarWidths();

          if (overflowX === 'auto') {
            overflowX = scrollbarWidths.bottom || // horizontal scrollbars?
            this.canScrollHorizontally() // OR scrolling pane with massless scrollbars?
            ? 'scroll' : 'hidden';
          }

          if (overflowY === 'auto') {
            overflowY = scrollbarWidths.left || scrollbarWidths.right || // horizontal scrollbars?
            this.canScrollVertically() // OR scrolling pane with massless scrollbars?
            ? 'scroll' : 'hidden';
          }

          applyStyle(this.el, {
            overflowX: overflowX,
            overflowY: overflowY
          });
        };

        ScrollComponent.prototype.setHeight = function (height) {
          applyStyleProp(this.el, 'height', height);
        };

        ScrollComponent.prototype.getScrollbarWidths = function () {
          var edges = computeEdges(this.el);
          return {
            left: edges.scrollbarLeft,
            right: edges.scrollbarRight,
            bottom: edges.scrollbarBottom
          };
        };

        return ScrollComponent;
      }(ElementScrollController);

      var Theme =
      /** @class */
      function () {
        function Theme(calendarOptions) {
          this.calendarOptions = calendarOptions;
          this.processIconOverride();
        }

        Theme.prototype.processIconOverride = function () {
          if (this.iconOverrideOption) {
            this.setIconOverride(this.calendarOptions[this.iconOverrideOption]);
          }
        };

        Theme.prototype.setIconOverride = function (iconOverrideHash) {
          var iconClassesCopy;
          var buttonName;

          if (typeof iconOverrideHash === 'object' && iconOverrideHash) {
            // non-null object
            iconClassesCopy = _assign({}, this.iconClasses);

            for (buttonName in iconOverrideHash) {
              iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);
            }

            this.iconClasses = iconClassesCopy;
          } else if (iconOverrideHash === false) {
            this.iconClasses = {};
          }
        };

        Theme.prototype.applyIconOverridePrefix = function (className) {
          var prefix = this.iconOverridePrefix;

          if (prefix && className.indexOf(prefix) !== 0) {
            // if not already present
            className = prefix + className;
          }

          return className;
        };

        Theme.prototype.getClass = function (key) {
          return this.classes[key] || '';
        };

        Theme.prototype.getIconClass = function (buttonName) {
          var className = this.iconClasses[buttonName];

          if (className) {
            return this.baseIconClass + ' ' + className;
          }

          return '';
        };

        Theme.prototype.getCustomButtonIconClass = function (customButtonProps) {
          var className;

          if (this.iconOverrideCustomButtonOption) {
            className = customButtonProps[this.iconOverrideCustomButtonOption];

            if (className) {
              return this.baseIconClass + ' ' + this.applyIconOverridePrefix(className);
            }
          }

          return '';
        };

        return Theme;
      }();

      Theme.prototype.classes = {};
      Theme.prototype.iconClasses = {};
      Theme.prototype.baseIconClass = '';
      Theme.prototype.iconOverridePrefix = '';
      var guid = 0;

      var Component =
      /** @class */
      function () {
        function Component(context, isView) {
          // HACK to populate view at top of component instantiation call chain
          if (isView) {
            context.view = this;
          }

          this.uid = String(guid++);
          this.context = context;
          this.dateEnv = context.dateEnv;
          this.theme = context.theme;
          this.view = context.view;
          this.calendar = context.calendar;
          this.isRtl = this.opt('dir') === 'rtl';
        }

        Component.addEqualityFuncs = function (newFuncs) {
          this.prototype.equalityFuncs = _assign({}, this.prototype.equalityFuncs, newFuncs);
        };

        Component.prototype.opt = function (name) {
          return this.context.options[name];
        };

        Component.prototype.receiveProps = function (props) {
          var _a = recycleProps(this.props || {}, props, this.equalityFuncs),
              anyChanges = _a.anyChanges,
              comboProps = _a.comboProps;

          this.props = comboProps;

          if (anyChanges) {
            this.render(comboProps);
          }
        };

        Component.prototype.render = function (props) {}; // after destroy is called, this component won't ever be used again


        Component.prototype.destroy = function () {};

        return Component;
      }();

      Component.prototype.equalityFuncs = {};
      /*
      Reuses old values when equal. If anything is unequal, returns newProps as-is.
      Great for PureComponent, but won't be feasible with React, so just eliminate and use React's DOM diffing.
      */

      function recycleProps(oldProps, newProps, equalityFuncs) {
        var comboProps = {}; // some old, some new

        var anyChanges = false;

        for (var key in newProps) {
          if (key in oldProps && (oldProps[key] === newProps[key] || equalityFuncs[key] && equalityFuncs[key](oldProps[key], newProps[key]))) {
            // equal to old? use old prop
            comboProps[key] = oldProps[key];
          } else {
            comboProps[key] = newProps[key];
            anyChanges = true;
          }
        }

        for (var key in oldProps) {
          if (!(key in newProps)) {
            anyChanges = true;
            break;
          }
        }

        return {
          anyChanges: anyChanges,
          comboProps: comboProps
        };
      }
      /*
      PURPOSES:
      - hook up to fg, fill, and mirror renderers
      - interface for dragging and hits
      */


      var DateComponent =
      /** @class */
      function (_super) {
        __extends(DateComponent, _super);

        function DateComponent(context, el, isView) {
          var _this = _super.call(this, context, isView) || this;

          _this.el = el;
          return _this;
        }

        DateComponent.prototype.destroy = function () {
          _super.prototype.destroy.call(this);

          removeElement(this.el);
        }; // TODO: WHAT ABOUT (sourceSeg && sourceSeg.component.doesDragMirror)
        //
        // Event Drag-n-Drop Rendering (for both events and external elements)
        // ---------------------------------------------------------------------------------------------------------------

        /*
        renderEventDragSegs(state: EventSegUiInteractionState) {
          if (state) {
            let { isEvent, segs, sourceSeg } = state
                   if (this.eventRenderer) {
              this.eventRenderer.hideByHash(state.affectedInstances)
            }
                   // if the user is dragging something that is considered an event with real event data,
            // and this component likes to do drag mirrors OR the component where the seg came from
            // likes to do drag mirrors, then render a drag mirror.
            if (isEvent && (this.doesDragMirror || sourceSeg && sourceSeg.component.doesDragMirror)) {
              if (this.mirrorRenderer) {
                this.mirrorRenderer.renderSegs(segs, { isDragging: true, sourceSeg })
              }
            }
                   // if it would be impossible to render a drag mirror OR this component likes to render
            // highlights, then render a highlight.
            if (!isEvent || this.doesDragHighlight) {
              if (this.fillRenderer) {
                this.fillRenderer.renderSegs('highlight', segs)
              }
            }
          }
        }
        */
        // Hit System
        // -----------------------------------------------------------------------------------------------------------------


        DateComponent.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {
          return null; // this should be abstract
        }; // Validation
        // -----------------------------------------------------------------------------------------------------------------


        DateComponent.prototype.isInteractionValid = function (interaction) {
          var calendar = this.calendar;
          var dateProfile = this.props.dateProfile; // HACK

          var instances = interaction.mutatedEvents.instances;

          if (dateProfile) {
            // HACK for DayTile
            for (var instanceId in instances) {
              if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {
                return false;
              }
            }
          }

          return isInteractionValid(interaction, calendar);
        };

        DateComponent.prototype.isDateSelectionValid = function (selection) {
          var dateProfile = this.props.dateProfile; // HACK

          if (dateProfile && // HACK for DayTile
          !rangeContainsRange(dateProfile.validRange, selection.range)) {
            return false;
          }

          return isDateSelectionValid(selection, this.calendar);
        }; // Triggering
        // -----------------------------------------------------------------------------------------------------------------
        // TODO: move to Calendar


        DateComponent.prototype.publiclyTrigger = function (name, args) {
          var calendar = this.calendar;
          return calendar.publiclyTrigger(name, args);
        };

        DateComponent.prototype.publiclyTriggerAfterSizing = function (name, args) {
          var calendar = this.calendar;
          return calendar.publiclyTriggerAfterSizing(name, args);
        };

        DateComponent.prototype.hasPublicHandlers = function (name) {
          var calendar = this.calendar;
          return calendar.hasPublicHandlers(name);
        };

        DateComponent.prototype.triggerRenderedSegs = function (segs, isMirrors) {
          var calendar = this.calendar;

          if (this.hasPublicHandlers('eventPositioned')) {
            for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
              var seg = segs_1[_i];
              this.publiclyTriggerAfterSizing('eventPositioned', [{
                event: new EventApi(calendar, seg.eventRange.def, seg.eventRange.instance),
                isMirror: isMirrors,
                isStart: seg.isStart,
                isEnd: seg.isEnd,
                el: seg.el,
                view: this // ?

              }]);
            }
          }

          if (!calendar.state.loadingLevel) {
            // avoid initial empty state while pending
            calendar.afterSizingTriggers._eventsPositioned = [null]; // fire once
          }
        };

        DateComponent.prototype.triggerWillRemoveSegs = function (segs, isMirrors) {
          var calendar = this.calendar;

          for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
            var seg = segs_2[_i];
            calendar.trigger('eventElRemove', seg.el);
          }

          if (this.hasPublicHandlers('eventDestroy')) {
            for (var _a = 0, segs_3 = segs; _a < segs_3.length; _a++) {
              var seg = segs_3[_a];
              this.publiclyTrigger('eventDestroy', [{
                event: new EventApi(calendar, seg.eventRange.def, seg.eventRange.instance),
                isMirror: isMirrors,
                el: seg.el,
                view: this // ?

              }]);
            }
          }
        }; // Pointer Interaction Utils
        // -----------------------------------------------------------------------------------------------------------------


        DateComponent.prototype.isValidSegDownEl = function (el) {
          return !this.props.eventDrag && // HACK
          !this.props.eventResize && // HACK
          !elementClosest(el, '.fc-mirror') && (this.isPopover() || !this.isInPopover(el)); // ^above line ensures we don't detect a seg interaction within a nested component.
          // it's a HACK because it only supports a popover as the nested component.
        };

        DateComponent.prototype.isValidDateDownEl = function (el) {
          var segEl = elementClosest(el, this.fgSegSelector);
          return (!segEl || segEl.classList.contains('fc-mirror')) && !elementClosest(el, '.fc-more') && // a "more.." link
          !elementClosest(el, 'a[data-goto]') && // a clickable nav link
          !this.isInPopover(el);
        };

        DateComponent.prototype.isPopover = function () {
          return this.el.classList.contains('fc-popover');
        };

        DateComponent.prototype.isInPopover = function (el) {
          return Boolean(elementClosest(el, '.fc-popover'));
        };

        return DateComponent;
      }(Component);

      DateComponent.prototype.fgSegSelector = '.fc-event-container > *';
      DateComponent.prototype.bgSegSelector = '.fc-bgevent:not(.fc-nonbusiness)';
      var uid$1 = 0;

      function createPlugin(input) {
        return {
          id: String(uid$1++),
          deps: input.deps || [],
          reducers: input.reducers || [],
          eventDefParsers: input.eventDefParsers || [],
          eventDragMutationMassagers: input.eventDragMutationMassagers || [],
          eventDefMutationAppliers: input.eventDefMutationAppliers || [],
          dateSelectionTransformers: input.dateSelectionTransformers || [],
          datePointTransforms: input.datePointTransforms || [],
          dateSpanTransforms: input.dateSpanTransforms || [],
          views: input.views || {},
          viewPropsTransformers: input.viewPropsTransformers || [],
          isPropsValid: input.isPropsValid || null,
          externalDefTransforms: input.externalDefTransforms || [],
          eventResizeJoinTransforms: input.eventResizeJoinTransforms || [],
          viewContainerModifiers: input.viewContainerModifiers || [],
          eventDropTransformers: input.eventDropTransformers || [],
          componentInteractions: input.componentInteractions || [],
          calendarInteractions: input.calendarInteractions || [],
          themeClasses: input.themeClasses || {},
          eventSourceDefs: input.eventSourceDefs || [],
          cmdFormatter: input.cmdFormatter,
          recurringTypes: input.recurringTypes || [],
          namedTimeZonedImpl: input.namedTimeZonedImpl,
          defaultView: input.defaultView || '',
          elementDraggingImpl: input.elementDraggingImpl,
          optionChangeHandlers: input.optionChangeHandlers || {}
        };
      }

      var PluginSystem =
      /** @class */
      function () {
        function PluginSystem() {
          this.hooks = {
            reducers: [],
            eventDefParsers: [],
            eventDragMutationMassagers: [],
            eventDefMutationAppliers: [],
            dateSelectionTransformers: [],
            datePointTransforms: [],
            dateSpanTransforms: [],
            views: {},
            viewPropsTransformers: [],
            isPropsValid: null,
            externalDefTransforms: [],
            eventResizeJoinTransforms: [],
            viewContainerModifiers: [],
            eventDropTransformers: [],
            componentInteractions: [],
            calendarInteractions: [],
            themeClasses: {},
            eventSourceDefs: [],
            cmdFormatter: null,
            recurringTypes: [],
            namedTimeZonedImpl: null,
            defaultView: '',
            elementDraggingImpl: null,
            optionChangeHandlers: {}
          };
          this.addedHash = {};
        }

        PluginSystem.prototype.add = function (plugin) {
          if (!this.addedHash[plugin.id]) {
            this.addedHash[plugin.id] = true;

            for (var _i = 0, _a = plugin.deps; _i < _a.length; _i++) {
              var dep = _a[_i];
              this.add(dep);
            }

            this.hooks = combineHooks(this.hooks, plugin);
          }
        };

        return PluginSystem;
      }();

      function combineHooks(hooks0, hooks1) {
        return {
          reducers: hooks0.reducers.concat(hooks1.reducers),
          eventDefParsers: hooks0.eventDefParsers.concat(hooks1.eventDefParsers),
          eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),
          eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),
          dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),
          datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),
          dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),
          views: _assign({}, hooks0.views, hooks1.views),
          viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),
          isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,
          externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),
          eventResizeJoinTransforms: hooks0.eventResizeJoinTransforms.concat(hooks1.eventResizeJoinTransforms),
          viewContainerModifiers: hooks0.viewContainerModifiers.concat(hooks1.viewContainerModifiers),
          eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),
          calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),
          componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),
          themeClasses: _assign({}, hooks0.themeClasses, hooks1.themeClasses),
          eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),
          cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,
          recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),
          namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,
          defaultView: hooks0.defaultView || hooks1.defaultView,
          elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,
          optionChangeHandlers: _assign({}, hooks0.optionChangeHandlers, hooks1.optionChangeHandlers)
        };
      }

      var eventSourceDef = {
        ignoreRange: true,
        parseMeta: function parseMeta(raw) {
          if (Array.isArray(raw)) {
            // short form
            return raw;
          } else if (Array.isArray(raw.events)) {
            return raw.events;
          }

          return null;
        },
        fetch: function fetch(arg, success) {
          success({
            rawEvents: arg.eventSource.meta
          });
        }
      };
      var ArrayEventSourcePlugin = createPlugin({
        eventSourceDefs: [eventSourceDef]
      });
      var eventSourceDef$1 = {
        parseMeta: function parseMeta(raw) {
          if (typeof raw === 'function') {
            // short form
            return raw;
          } else if (typeof raw.events === 'function') {
            return raw.events;
          }

          return null;
        },
        fetch: function fetch(arg, success, failure) {
          var dateEnv = arg.calendar.dateEnv;
          var func = arg.eventSource.meta;
          unpromisify(func.bind(null, {
            start: dateEnv.toDate(arg.range.start),
            end: dateEnv.toDate(arg.range.end),
            startStr: dateEnv.formatIso(arg.range.start),
            endStr: dateEnv.formatIso(arg.range.end),
            timeZone: dateEnv.timeZone
          }), function (rawEvents) {
            success({
              rawEvents: rawEvents
            }); // needs an object response
          }, failure // send errorObj directly to failure callback
          );
        }
      };
      var FuncEventSourcePlugin = createPlugin({
        eventSourceDefs: [eventSourceDef$1]
      });

      function requestJson(method, url, params, successCallback, failureCallback) {
        method = method.toUpperCase();
        var body = null;

        if (method === 'GET') {
          url = injectQueryStringParams(url, params);
        } else {
          body = encodeParams(params);
        }

        var xhr = new XMLHttpRequest();
        xhr.open(method, url, true);

        if (method !== 'GET') {
          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        }

        xhr.onload = function () {
          if (xhr.status >= 200 && xhr.status < 400) {
            try {
              var res = JSON.parse(xhr.responseText);
              successCallback(res, xhr);
            } catch (err) {
              failureCallback('Failure parsing JSON', xhr);
            }
          } else {
            failureCallback('Request failed', xhr);
          }
        };

        xhr.onerror = function () {
          failureCallback('Request failed', xhr);
        };

        xhr.send(body);
      }

      function injectQueryStringParams(url, params) {
        return url + (url.indexOf('?') === -1 ? '?' : '&') + encodeParams(params);
      }

      function encodeParams(params) {
        var parts = [];

        for (var key in params) {
          parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(params[key]));
        }

        return parts.join('&');
      }

      var eventSourceDef$2 = {
        parseMeta: function parseMeta(raw) {
          if (typeof raw === 'string') {
            // short form
            raw = {
              url: raw
            };
          } else if (!raw || typeof raw !== 'object' || !raw.url) {
            return null;
          }

          return {
            url: raw.url,
            method: (raw.method || 'GET').toUpperCase(),
            extraParams: raw.extraParams,
            startParam: raw.startParam,
            endParam: raw.endParam,
            timeZoneParam: raw.timeZoneParam
          };
        },
        fetch: function fetch(arg, success, failure) {
          var meta = arg.eventSource.meta;
          var requestParams = buildRequestParams(meta, arg.range, arg.calendar);
          requestJson(meta.method, meta.url, requestParams, function (rawEvents, xhr) {
            success({
              rawEvents: rawEvents,
              xhr: xhr
            });
          }, function (errorMessage, xhr) {
            failure({
              message: errorMessage,
              xhr: xhr
            });
          });
        }
      };
      var JsonFeedEventSourcePlugin = createPlugin({
        eventSourceDefs: [eventSourceDef$2]
      });

      function buildRequestParams(meta, range, calendar) {
        var dateEnv = calendar.dateEnv;
        var startParam;
        var endParam;
        var timeZoneParam;
        var customRequestParams;
        var params = {};
        startParam = meta.startParam;

        if (startParam == null) {
          startParam = calendar.opt('startParam');
        }

        endParam = meta.endParam;

        if (endParam == null) {
          endParam = calendar.opt('endParam');
        }

        timeZoneParam = meta.timeZoneParam;

        if (timeZoneParam == null) {
          timeZoneParam = calendar.opt('timeZoneParam');
        } // retrieve any outbound GET/POST data from the options


        if (typeof meta.extraParams === 'function') {
          // supplied as a function that returns a key/value object
          customRequestParams = meta.extraParams();
        } else {
          // probably supplied as a straight key/value object
          customRequestParams = meta.extraParams || {};
        }

        _assign(params, customRequestParams);

        params[startParam] = dateEnv.formatIso(range.start);
        params[endParam] = dateEnv.formatIso(range.end);

        if (dateEnv.timeZone !== 'local') {
          params[timeZoneParam] = dateEnv.timeZone;
        }

        return params;
      }

      var recurring = {
        parse: function parse(rawEvent, leftoverProps, dateEnv) {
          var createMarker = dateEnv.createMarker.bind(dateEnv);
          var processors = {
            daysOfWeek: null,
            startTime: createDuration,
            endTime: createDuration,
            startRecur: createMarker,
            endRecur: createMarker
          };
          var props = refineProps(rawEvent, processors, {}, leftoverProps);
          var anyValid = false;

          for (var propName in props) {
            if (props[propName] != null) {
              anyValid = true;
              break;
            }
          }

          if (anyValid) {
            return {
              allDayGuess: Boolean(!props.startTime && !props.endTime),
              duration: props.startTime && props.endTime ? subtractDurations(props.endTime, props.startTime) : null,
              typeData: props // doesn't need endTime anymore but oh well

            };
          }

          return null;
        },
        expand: function expand(typeData, framingRange, dateEnv) {
          var clippedFramingRange = intersectRanges(framingRange, {
            start: typeData.startRecur,
            end: typeData.endRecur
          });

          if (clippedFramingRange) {
            return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);
          } else {
            return [];
          }
        }
      };
      var SimpleRecurrencePlugin = createPlugin({
        recurringTypes: [recurring]
      });

      function expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {
        var dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;
        var dayMarker = startOfDay(framingRange.start);
        var endMarker = framingRange.end;
        var instanceStarts = [];

        while (dayMarker < endMarker) {
          var instanceStart // if everyday, or this particular day-of-week
          = void 0; // if everyday, or this particular day-of-week

          if (!dowHash || dowHash[dayMarker.getUTCDay()]) {
            if (startTime) {
              instanceStart = dateEnv.add(dayMarker, startTime);
            } else {
              instanceStart = dayMarker;
            }

            instanceStarts.push(instanceStart);
          }

          dayMarker = addDays(dayMarker, 1);
        }

        return instanceStarts;
      }

      var DefaultOptionChangeHandlers = createPlugin({
        optionChangeHandlers: {
          events: function events(_events, calendar) {
            handleEventSources([_events], calendar);
          },
          eventSources: handleEventSources,
          plugins: handlePlugins
        }
      });

      function handleEventSources(inputs, calendar) {
        var unfoundSources = hashValuesToArray(calendar.state.eventSources);
        var newInputs = [];

        for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {
          var input = inputs_1[_i];
          var inputFound = false;

          for (var i = 0; i < unfoundSources.length; i++) {
            if (isValuesSimilar(unfoundSources[i]._raw, input, 2)) {
              unfoundSources.splice(i, 1); // delete

              inputFound = true;
              break;
            }
          }

          if (!inputFound) {
            newInputs.push(input);
          }
        }

        for (var _a = 0, unfoundSources_1 = unfoundSources; _a < unfoundSources_1.length; _a++) {
          var unfoundSource = unfoundSources_1[_a];
          calendar.dispatch({
            type: 'REMOVE_EVENT_SOURCE',
            sourceId: unfoundSource.sourceId
          });
        }

        for (var _b = 0, newInputs_1 = newInputs; _b < newInputs_1.length; _b++) {
          var newInput = newInputs_1[_b];
          calendar.addEventSource(newInput);
        }
      } // shortcoming: won't remove plugins


      function handlePlugins(inputs, calendar) {
        calendar.addPluginInputs(inputs); // will gracefully handle duplicates
      }

      var config = {}; // TODO: make these options

      var globalDefaults = {
        defaultRangeSeparator: ' - ',
        titleRangeSeparator: " \u2013 ",
        defaultTimedEventDuration: '01:00:00',
        defaultAllDayEventDuration: {
          day: 1
        },
        forceEventDuration: false,
        nextDayThreshold: '00:00:00',
        // display
        columnHeader: true,
        defaultView: '',
        aspectRatio: 1.35,
        header: {
          left: 'title',
          center: '',
          right: 'today prev,next'
        },
        weekends: true,
        weekNumbers: false,
        weekNumberCalculation: 'local',
        editable: false,
        // nowIndicator: false,
        scrollTime: '06:00:00',
        minTime: '00:00:00',
        maxTime: '24:00:00',
        showNonCurrentDates: true,
        // event ajax
        lazyFetching: true,
        startParam: 'start',
        endParam: 'end',
        timeZoneParam: 'timeZone',
        timeZone: 'local',
        // allDayDefault: undefined,
        // locale
        locales: [],
        locale: '',
        // dir: will get this from the default locale
        // buttonIcons: null,
        // allows setting a min-height to the event segment to prevent short events overlapping each other
        timeGridEventMinHeight: 0,
        themeSystem: 'standard',
        // eventResizableFromStart: false,
        dragRevertDuration: 500,
        dragScroll: true,
        allDayMaintainDuration: false,
        // selectable: false,
        unselectAuto: true,
        // selectMinDistance: 0,
        dropAccept: '*',
        eventOrder: 'start,-duration,allDay,title',
        // ^ if start tie, longer events go before shorter. final tie-breaker is title text
        // rerenderDelay: null,
        eventLimit: false,
        eventLimitClick: 'popover',
        dayPopoverFormat: {
          month: 'long',
          day: 'numeric',
          year: 'numeric'
        },
        handleWindowResize: true,
        windowResizeDelay: 100,
        longPressDelay: 1000,
        eventDragMinDistance: 5 // only applies to mouse

      };
      var rtlDefaults = {
        header: {
          left: 'next,prev today',
          center: '',
          right: 'title'
        },
        buttonIcons: {
          // TODO: make RTL support the responibility of the theme
          prev: 'fc-icon-chevron-right',
          next: 'fc-icon-chevron-left',
          prevYear: 'fc-icon-chevrons-right',
          nextYear: 'fc-icon-chevrons-left'
        }
      };
      var complexOptions = ['header', 'footer', 'buttonText', 'buttonIcons']; // Merges an array of option objects into a single object

      function mergeOptions(optionObjs) {
        return mergeProps(optionObjs, complexOptions);
      } // TODO: move this stuff to a "plugin"-related file...


      var INTERNAL_PLUGINS = [ArrayEventSourcePlugin, FuncEventSourcePlugin, JsonFeedEventSourcePlugin, SimpleRecurrencePlugin, DefaultOptionChangeHandlers];

      function refinePluginDefs(pluginInputs) {
        var plugins = [];

        for (var _i = 0, pluginInputs_1 = pluginInputs; _i < pluginInputs_1.length; _i++) {
          var pluginInput = pluginInputs_1[_i];

          if (typeof pluginInput === 'string') {
            var globalName = 'FullCalendar' + capitaliseFirstLetter(pluginInput);

            if (!window[globalName]) {
              console.warn('Plugin file not loaded for ' + pluginInput);
            } else {
              plugins.push(window[globalName].default); // is an ES6 module
            }
          } else {
            plugins.push(pluginInput);
          }
        }

        return INTERNAL_PLUGINS.concat(plugins);
      }

      var RAW_EN_LOCALE = {
        code: 'en',
        week: {
          dow: 0,
          doy: 4 // 4 days need to be within the year to be considered the first week

        },
        dir: 'ltr',
        buttonText: {
          prev: 'prev',
          next: 'next',
          prevYear: 'prev year',
          nextYear: 'next year',
          year: 'year',
          today: 'today',
          month: 'month',
          week: 'week',
          day: 'day',
          list: 'list'
        },
        weekLabel: 'W',
        allDayText: 'all-day',
        eventLimitText: 'more',
        noEventsMessage: 'No events to display'
      };

      function parseRawLocales(explicitRawLocales) {
        var defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';
        var globalArray = window['FullCalendarLocalesAll'] || []; // from locales-all.js

        var globalObject = window['FullCalendarLocales'] || {}; // from locales/*.js. keys are meaningless

        var allRawLocales = globalArray.concat( // globalArray is low prio
        hashValuesToArray(globalObject), // medium prio
        explicitRawLocales // highest prio
        );
        var rawLocaleMap = {
          en: RAW_EN_LOCALE // necessary?

        };

        for (var _i = 0, allRawLocales_1 = allRawLocales; _i < allRawLocales_1.length; _i++) {
          var rawLocale = allRawLocales_1[_i];
          rawLocaleMap[rawLocale.code] = rawLocale;
        }

        return {
          map: rawLocaleMap,
          defaultCode: defaultCode
        };
      }

      function buildLocale(inputSingular, available) {
        if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {
          return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);
        } else {
          return queryLocale(inputSingular, available);
        }
      }

      function queryLocale(codeArg, available) {
        var codes = [].concat(codeArg || []); // will convert to array

        var raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;
        return parseLocale(codeArg, codes, raw);
      }

      function queryRawLocale(codes, available) {
        for (var i = 0; i < codes.length; i++) {
          var parts = codes[i].toLocaleLowerCase().split('-');

          for (var j = parts.length; j > 0; j--) {
            var simpleId = parts.slice(0, j).join('-');

            if (available[simpleId]) {
              return available[simpleId];
            }
          }
        }

        return null;
      }

      function parseLocale(codeArg, codes, raw) {
        var merged = mergeProps([RAW_EN_LOCALE, raw], ['buttonText']);
        delete merged.code; // don't want this part of the options

        var week = merged.week;
        delete merged.week;
        return {
          codeArg: codeArg,
          codes: codes,
          week: week,
          simpleNumberFormat: new Intl.NumberFormat(codeArg),
          options: merged
        };
      }

      var OptionsManager =
      /** @class */
      function () {
        function OptionsManager(overrides) {
          this.overrides = _assign({}, overrides); // make a copy

          this.dynamicOverrides = {};
          this.compute();
        }

        OptionsManager.prototype.add = function (props) {
          _assign(this.overrides, props);

          this.compute();
        };

        OptionsManager.prototype.addDynamic = function (props) {
          _assign(this.dynamicOverrides, props);

          this.compute();
        };

        OptionsManager.prototype.reset = function (props) {
          this.overrides = props;
          this.compute();
        }; // Computes the flattened options hash for the calendar and assigns to `this.options`.
        // Assumes this.overrides and this.dynamicOverrides have already been initialized.


        OptionsManager.prototype.compute = function () {
          // TODO: not a very efficient system
          var locales = firstDefined( // explicit locale option given?
          this.dynamicOverrides.locales, this.overrides.locales, globalDefaults.locales);
          var locale = firstDefined( // explicit locales option given?
          this.dynamicOverrides.locale, this.overrides.locale, globalDefaults.locale);
          var available = parseRawLocales(locales);
          var localeDefaults = buildLocale(locale || available.defaultCode, available.map).options;
          var dir = firstDefined( // based on options computed so far, is direction RTL?
          this.dynamicOverrides.dir, this.overrides.dir, localeDefaults.dir);
          var dirDefaults = dir === 'rtl' ? rtlDefaults : {};
          this.dirDefaults = dirDefaults;
          this.localeDefaults = localeDefaults;
          this.computed = mergeOptions([globalDefaults, dirDefaults, localeDefaults, this.overrides, this.dynamicOverrides]);
        };

        return OptionsManager;
      }();

      var calendarSystemClassMap = {};

      function registerCalendarSystem(name, theClass) {
        calendarSystemClassMap[name] = theClass;
      }

      function createCalendarSystem(name) {
        return new calendarSystemClassMap[name]();
      }

      var GregorianCalendarSystem =
      /** @class */
      function () {
        function GregorianCalendarSystem() {}

        GregorianCalendarSystem.prototype.getMarkerYear = function (d) {
          return d.getUTCFullYear();
        };

        GregorianCalendarSystem.prototype.getMarkerMonth = function (d) {
          return d.getUTCMonth();
        };

        GregorianCalendarSystem.prototype.getMarkerDay = function (d) {
          return d.getUTCDate();
        };

        GregorianCalendarSystem.prototype.arrayToMarker = function (arr) {
          return arrayToUtcDate(arr);
        };

        GregorianCalendarSystem.prototype.markerToArray = function (marker) {
          return dateToUtcArray(marker);
        };

        return GregorianCalendarSystem;
      }();

      registerCalendarSystem('gregory', GregorianCalendarSystem);
      var ISO_START = /^\s*\d{4}-\d\d-\d\d([T ]\d)?/;
      var ISO_TZO_RE = /(?:(Z)|([-+])(\d\d)(?::(\d\d))?)$/;

      function parse(str) {
        var timeZoneOffset = null;
        var isTimeUnspecified = false;
        var m = ISO_START.exec(str);

        if (m) {
          isTimeUnspecified = !m[1];

          if (isTimeUnspecified) {
            str += 'T00:00:00Z';
          } else {
            str = str.replace(ISO_TZO_RE, function (whole, z, sign, minutes, seconds) {
              if (z) {
                timeZoneOffset = 0;
              } else {
                timeZoneOffset = (parseInt(minutes, 10) * 60 + parseInt(seconds || 0, 10)) * (sign === '-' ? -1 : 1);
              }

              return '';
            }) + 'Z'; // otherwise will parse in local
          }
        }

        var marker = new Date(str);

        if (!isValidDate(marker)) {
          return null;
        }

        return {
          marker: marker,
          isTimeUnspecified: isTimeUnspecified,
          timeZoneOffset: timeZoneOffset
        };
      }

      var DateEnv =
      /** @class */
      function () {
        function DateEnv(settings) {
          var timeZone = this.timeZone = settings.timeZone;
          var isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC';

          if (settings.namedTimeZoneImpl && isNamedTimeZone) {
            this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);
          }

          this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);
          this.calendarSystem = createCalendarSystem(settings.calendarSystem);
          this.locale = settings.locale;
          this.weekDow = settings.locale.week.dow;
          this.weekDoy = settings.locale.week.doy;

          if (settings.weekNumberCalculation === 'ISO') {
            this.weekDow = 1;
            this.weekDoy = 4;
          } else if (typeof settings.firstDay === 'number') {
            this.weekDow = settings.firstDay;
          }

          if (typeof settings.weekNumberCalculation === 'function') {
            this.weekNumberFunc = settings.weekNumberCalculation;
          }

          this.weekLabel = settings.weekLabel != null ? settings.weekLabel : settings.locale.options.weekLabel;
          this.cmdFormatter = settings.cmdFormatter;
        } // Creating / Parsing


        DateEnv.prototype.createMarker = function (input) {
          var meta = this.createMarkerMeta(input);

          if (meta === null) {
            return null;
          }

          return meta.marker;
        };

        DateEnv.prototype.createNowMarker = function () {
          if (this.canComputeOffset) {
            return this.timestampToMarker(new Date().valueOf());
          } else {
            // if we can't compute the current date val for a timezone,
            // better to give the current local date vals than UTC
            return arrayToUtcDate(dateToLocalArray(new Date()));
          }
        };

        DateEnv.prototype.createMarkerMeta = function (input) {
          if (typeof input === 'string') {
            return this.parse(input);
          }

          var marker = null;

          if (typeof input === 'number') {
            marker = this.timestampToMarker(input);
          } else if (input instanceof Date) {
            input = input.valueOf();

            if (!isNaN(input)) {
              marker = this.timestampToMarker(input);
            }
          } else if (Array.isArray(input)) {
            marker = arrayToUtcDate(input);
          }

          if (marker === null || !isValidDate(marker)) {
            return null;
          }

          return {
            marker: marker,
            isTimeUnspecified: false,
            forcedTzo: null
          };
        };

        DateEnv.prototype.parse = function (s) {
          var parts = parse(s);

          if (parts === null) {
            return null;
          }

          var marker = parts.marker;
          var forcedTzo = null;

          if (parts.timeZoneOffset !== null) {
            if (this.canComputeOffset) {
              marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000);
            } else {
              forcedTzo = parts.timeZoneOffset;
            }
          }

          return {
            marker: marker,
            isTimeUnspecified: parts.isTimeUnspecified,
            forcedTzo: forcedTzo
          };
        }; // Accessors


        DateEnv.prototype.getYear = function (marker) {
          return this.calendarSystem.getMarkerYear(marker);
        };

        DateEnv.prototype.getMonth = function (marker) {
          return this.calendarSystem.getMarkerMonth(marker);
        }; // Adding / Subtracting


        DateEnv.prototype.add = function (marker, dur) {
          var a = this.calendarSystem.markerToArray(marker);
          a[0] += dur.years;
          a[1] += dur.months;
          a[2] += dur.days;
          a[6] += dur.milliseconds;
          return this.calendarSystem.arrayToMarker(a);
        };

        DateEnv.prototype.subtract = function (marker, dur) {
          var a = this.calendarSystem.markerToArray(marker);
          a[0] -= dur.years;
          a[1] -= dur.months;
          a[2] -= dur.days;
          a[6] -= dur.milliseconds;
          return this.calendarSystem.arrayToMarker(a);
        };

        DateEnv.prototype.addYears = function (marker, n) {
          var a = this.calendarSystem.markerToArray(marker);
          a[0] += n;
          return this.calendarSystem.arrayToMarker(a);
        };

        DateEnv.prototype.addMonths = function (marker, n) {
          var a = this.calendarSystem.markerToArray(marker);
          a[1] += n;
          return this.calendarSystem.arrayToMarker(a);
        }; // Diffing Whole Units


        DateEnv.prototype.diffWholeYears = function (m0, m1) {
          var calendarSystem = this.calendarSystem;

          if (timeAsMs(m0) === timeAsMs(m1) && calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) && calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {
            return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);
          }

          return null;
        };

        DateEnv.prototype.diffWholeMonths = function (m0, m1) {
          var calendarSystem = this.calendarSystem;

          if (timeAsMs(m0) === timeAsMs(m1) && calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {
            return calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0) + (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;
          }

          return null;
        }; // Range / Duration


        DateEnv.prototype.greatestWholeUnit = function (m0, m1) {
          var n = this.diffWholeYears(m0, m1);

          if (n !== null) {
            return {
              unit: 'year',
              value: n
            };
          }

          n = this.diffWholeMonths(m0, m1);

          if (n !== null) {
            return {
              unit: 'month',
              value: n
            };
          }

          n = diffWholeWeeks(m0, m1);

          if (n !== null) {
            return {
              unit: 'week',
              value: n
            };
          }

          n = diffWholeDays(m0, m1);

          if (n !== null) {
            return {
              unit: 'day',
              value: n
            };
          }

          n = diffHours(m0, m1);

          if (isInt(n)) {
            return {
              unit: 'hour',
              value: n
            };
          }

          n = diffMinutes(m0, m1);

          if (isInt(n)) {
            return {
              unit: 'minute',
              value: n
            };
          }

          n = diffSeconds(m0, m1);

          if (isInt(n)) {
            return {
              unit: 'second',
              value: n
            };
          }

          return {
            unit: 'millisecond',
            value: m1.valueOf() - m0.valueOf()
          };
        };

        DateEnv.prototype.countDurationsBetween = function (m0, m1, d) {
          // TODO: can use greatestWholeUnit
          var diff;

          if (d.years) {
            diff = this.diffWholeYears(m0, m1);

            if (diff !== null) {
              return diff / asRoughYears(d);
            }
          }

          if (d.months) {
            diff = this.diffWholeMonths(m0, m1);

            if (diff !== null) {
              return diff / asRoughMonths(d);
            }
          }

          if (d.days) {
            diff = diffWholeDays(m0, m1);

            if (diff !== null) {
              return diff / asRoughDays(d);
            }
          }

          return (m1.valueOf() - m0.valueOf()) / asRoughMs(d);
        }; // Start-Of


        DateEnv.prototype.startOf = function (m, unit) {
          if (unit === 'year') {
            return this.startOfYear(m);
          } else if (unit === 'month') {
            return this.startOfMonth(m);
          } else if (unit === 'week') {
            return this.startOfWeek(m);
          } else if (unit === 'day') {
            return startOfDay(m);
          } else if (unit === 'hour') {
            return startOfHour(m);
          } else if (unit === 'minute') {
            return startOfMinute(m);
          } else if (unit === 'second') {
            return startOfSecond(m);
          }
        };

        DateEnv.prototype.startOfYear = function (m) {
          return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m)]);
        };

        DateEnv.prototype.startOfMonth = function (m) {
          return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m), this.calendarSystem.getMarkerMonth(m)]);
        };

        DateEnv.prototype.startOfWeek = function (m) {
          return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m), this.calendarSystem.getMarkerMonth(m), m.getUTCDate() - (m.getUTCDay() - this.weekDow + 7) % 7]);
        }; // Week Number


        DateEnv.prototype.computeWeekNumber = function (marker) {
          if (this.weekNumberFunc) {
            return this.weekNumberFunc(this.toDate(marker));
          } else {
            return weekOfYear(marker, this.weekDow, this.weekDoy);
          }
        }; // TODO: choke on timeZoneName: long


        DateEnv.prototype.format = function (marker, formatter, dateOptions) {
          if (dateOptions === void 0) {
            dateOptions = {};
          }

          return formatter.format({
            marker: marker,
            timeZoneOffset: dateOptions.forcedTzo != null ? dateOptions.forcedTzo : this.offsetForMarker(marker)
          }, this);
        };

        DateEnv.prototype.formatRange = function (start, end, formatter, dateOptions) {
          if (dateOptions === void 0) {
            dateOptions = {};
          }

          if (dateOptions.isEndExclusive) {
            end = addMs(end, -1);
          }

          return formatter.formatRange({
            marker: start,
            timeZoneOffset: dateOptions.forcedStartTzo != null ? dateOptions.forcedStartTzo : this.offsetForMarker(start)
          }, {
            marker: end,
            timeZoneOffset: dateOptions.forcedEndTzo != null ? dateOptions.forcedEndTzo : this.offsetForMarker(end)
          }, this);
        };

        DateEnv.prototype.formatIso = function (marker, extraOptions) {
          if (extraOptions === void 0) {
            extraOptions = {};
          }

          var timeZoneOffset = null;

          if (!extraOptions.omitTimeZoneOffset) {
            if (extraOptions.forcedTzo != null) {
              timeZoneOffset = extraOptions.forcedTzo;
            } else {
              timeZoneOffset = this.offsetForMarker(marker);
            }
          }

          return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);
        }; // TimeZone


        DateEnv.prototype.timestampToMarker = function (ms) {
          if (this.timeZone === 'local') {
            return arrayToUtcDate(dateToLocalArray(new Date(ms)));
          } else if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {
            return new Date(ms);
          } else {
            return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));
          }
        };

        DateEnv.prototype.offsetForMarker = function (m) {
          if (this.timeZone === 'local') {
            return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset(); // convert "inverse" offset to "normal" offset
          } else if (this.timeZone === 'UTC') {
            return 0;
          } else if (this.namedTimeZoneImpl) {
            return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m));
          }

          return null;
        }; // Conversion


        DateEnv.prototype.toDate = function (m, forcedTzo) {
          if (this.timeZone === 'local') {
            return arrayToLocalDate(dateToUtcArray(m));
          } else if (this.timeZone === 'UTC') {
            return new Date(m.valueOf()); // make sure it's a copy
          } else if (!this.namedTimeZoneImpl) {
            return new Date(m.valueOf() - (forcedTzo || 0));
          } else {
            return new Date(m.valueOf() - this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60 // convert minutes -> ms
            );
          }
        };

        return DateEnv;
      }();

      var SIMPLE_SOURCE_PROPS = {
        id: String,
        allDayDefault: Boolean,
        eventDataTransform: Function,
        success: Function,
        failure: Function
      };
      var uid$2 = 0;

      function doesSourceNeedRange(eventSource, calendar) {
        var defs = calendar.pluginSystem.hooks.eventSourceDefs;
        return !defs[eventSource.sourceDefId].ignoreRange;
      }

      function parseEventSource(raw, calendar) {
        var defs = calendar.pluginSystem.hooks.eventSourceDefs;

        for (var i = defs.length - 1; i >= 0; i--) {
          // later-added plugins take precedence
          var def = defs[i];
          var meta = def.parseMeta(raw);

          if (meta) {
            var res = parseEventSourceProps(typeof raw === 'object' ? raw : {}, meta, i, calendar);
            res._raw = freezeRaw(raw);
            return res;
          }
        }

        return null;
      }

      function parseEventSourceProps(raw, meta, sourceDefId, calendar) {
        var leftovers0 = {};
        var props = refineProps(raw, SIMPLE_SOURCE_PROPS, {}, leftovers0);
        var leftovers1 = {};
        var ui = processUnscopedUiProps(leftovers0, calendar, leftovers1);
        props.isFetching = false;
        props.latestFetchId = '';
        props.fetchRange = null;
        props.publicId = String(raw.id || '');
        props.sourceId = String(uid$2++);
        props.sourceDefId = sourceDefId;
        props.meta = meta;
        props.ui = ui;
        props.extendedProps = leftovers1;
        return props;
      }

      function reduceEventSources(eventSources, action, dateProfile, calendar) {
        switch (action.type) {
          case 'ADD_EVENT_SOURCES':
            // already parsed
            return addSources(eventSources, action.sources, dateProfile ? dateProfile.activeRange : null, calendar);

          case 'REMOVE_EVENT_SOURCE':
            return removeSource(eventSources, action.sourceId);

          case 'PREV': // TODO: how do we track all actions that affect dateProfile :(

          case 'NEXT':
          case 'SET_DATE':
          case 'SET_VIEW_TYPE':
            if (dateProfile) {
              return fetchDirtySources(eventSources, dateProfile.activeRange, calendar);
            } else {
              return eventSources;
            }

          case 'FETCH_EVENT_SOURCES':
          case 'CHANGE_TIMEZONE':
            return fetchSourcesByIds(eventSources, action.sourceIds ? arrayToHash(action.sourceIds) : excludeStaticSources(eventSources, calendar), dateProfile ? dateProfile.activeRange : null, calendar);

          case 'RECEIVE_EVENTS':
          case 'RECEIVE_EVENT_ERROR':
            return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);

          case 'REMOVE_ALL_EVENT_SOURCES':
            return {};

          default:
            return eventSources;
        }
      }

      var uid$3 = 0;

      function addSources(eventSourceHash, sources, fetchRange, calendar) {
        var hash = {};

        for (var _i = 0, sources_1 = sources; _i < sources_1.length; _i++) {
          var source = sources_1[_i];
          hash[source.sourceId] = source;
        }

        if (fetchRange) {
          hash = fetchDirtySources(hash, fetchRange, calendar);
        }

        return _assign({}, eventSourceHash, hash);
      }

      function removeSource(eventSourceHash, sourceId) {
        return filterHash(eventSourceHash, function (eventSource) {
          return eventSource.sourceId !== sourceId;
        });
      }

      function fetchDirtySources(sourceHash, fetchRange, calendar) {
        return fetchSourcesByIds(sourceHash, filterHash(sourceHash, function (eventSource) {
          return isSourceDirty(eventSource, fetchRange, calendar);
        }), fetchRange, calendar);
      }

      function isSourceDirty(eventSource, fetchRange, calendar) {
        if (!doesSourceNeedRange(eventSource, calendar)) {
          return !eventSource.latestFetchId;
        } else {
          return !calendar.opt('lazyFetching') || !eventSource.fetchRange || fetchRange.start < eventSource.fetchRange.start || fetchRange.end > eventSource.fetchRange.end;
        }
      }

      function fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, calendar) {
        var nextSources = {};

        for (var sourceId in prevSources) {
          var source = prevSources[sourceId];

          if (sourceIdHash[sourceId]) {
            nextSources[sourceId] = fetchSource(source, fetchRange, calendar);
          } else {
            nextSources[sourceId] = source;
          }
        }

        return nextSources;
      }

      function fetchSource(eventSource, fetchRange, calendar) {
        var sourceDef = calendar.pluginSystem.hooks.eventSourceDefs[eventSource.sourceDefId];
        var fetchId = String(uid$3++);
        sourceDef.fetch({
          eventSource: eventSource,
          calendar: calendar,
          range: fetchRange
        }, function (res) {
          var rawEvents = res.rawEvents;
          var calSuccess = calendar.opt('eventSourceSuccess');
          var calSuccessRes;
          var sourceSuccessRes;

          if (eventSource.success) {
            sourceSuccessRes = eventSource.success(rawEvents, res.xhr);
          }

          if (calSuccess) {
            calSuccessRes = calSuccess(rawEvents, res.xhr);
          }

          rawEvents = sourceSuccessRes || calSuccessRes || rawEvents;
          calendar.dispatch({
            type: 'RECEIVE_EVENTS',
            sourceId: eventSource.sourceId,
            fetchId: fetchId,
            fetchRange: fetchRange,
            rawEvents: rawEvents
          });
        }, function (error) {
          var callFailure = calendar.opt('eventSourceFailure');
          console.warn(error.message, error);

          if (eventSource.failure) {
            eventSource.failure(error);
          }

          if (callFailure) {
            callFailure(error);
          }

          calendar.dispatch({
            type: 'RECEIVE_EVENT_ERROR',
            sourceId: eventSource.sourceId,
            fetchId: fetchId,
            fetchRange: fetchRange,
            error: error
          });
        });
        return _assign({}, eventSource, {
          isFetching: true,
          latestFetchId: fetchId
        });
      }

      function receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {
        var _a;

        var eventSource = sourceHash[sourceId];

        if (eventSource && // not already removed
        fetchId === eventSource.latestFetchId) {
          return _assign({}, sourceHash, (_a = {}, _a[sourceId] = _assign({}, eventSource, {
            isFetching: false,
            fetchRange: fetchRange
          }), _a));
        }

        return sourceHash;
      }

      function excludeStaticSources(eventSources, calendar) {
        return filterHash(eventSources, function (eventSource) {
          return doesSourceNeedRange(eventSource, calendar);
        });
      }

      var DateProfileGenerator =
      /** @class */
      function () {
        function DateProfileGenerator(viewSpec, calendar) {
          this.viewSpec = viewSpec;
          this.options = viewSpec.options;
          this.dateEnv = calendar.dateEnv;
          this.calendar = calendar;
          this.initHiddenDays();
        }
        /* Date Range Computation
        ------------------------------------------------------------------------------------------------------------------*/
        // Builds a structure with info about what the dates/ranges will be for the "prev" view.


        DateProfileGenerator.prototype.buildPrev = function (currentDateProfile, currentDate) {
          var dateEnv = this.dateEnv;
          var prevDate = dateEnv.subtract(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month
          currentDateProfile.dateIncrement);
          return this.build(prevDate, -1);
        }; // Builds a structure with info about what the dates/ranges will be for the "next" view.


        DateProfileGenerator.prototype.buildNext = function (currentDateProfile, currentDate) {
          var dateEnv = this.dateEnv;
          var nextDate = dateEnv.add(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month
          currentDateProfile.dateIncrement);
          return this.build(nextDate, 1);
        }; // Builds a structure holding dates/ranges for rendering around the given date.
        // Optional direction param indicates whether the date is being incremented/decremented
        // from its previous value. decremented = -1, incremented = 1 (default).


        DateProfileGenerator.prototype.build = function (currentDate, direction, forceToValid) {
          if (forceToValid === void 0) {
            forceToValid = false;
          }

          var validRange;
          var minTime = null;
          var maxTime = null;
          var currentInfo;
          var isRangeAllDay;
          var renderRange;
          var activeRange;
          var isValid;
          validRange = this.buildValidRange();
          validRange = this.trimHiddenDays(validRange);

          if (forceToValid) {
            currentDate = constrainMarkerToRange(currentDate, validRange);
          }

          currentInfo = this.buildCurrentRangeInfo(currentDate, direction);
          isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);
          renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);
          renderRange = this.trimHiddenDays(renderRange);
          activeRange = renderRange;

          if (!this.options.showNonCurrentDates) {
            activeRange = intersectRanges(activeRange, currentInfo.range);
          }

          minTime = createDuration(this.options.minTime);
          maxTime = createDuration(this.options.maxTime);
          activeRange = this.adjustActiveRange(activeRange, minTime, maxTime);
          activeRange = intersectRanges(activeRange, validRange); // might return null
          // it's invalid if the originally requested date is not contained,
          // or if the range is completely outside of the valid range.

          isValid = rangesIntersect(currentInfo.range, validRange);
          return {
            // constraint for where prev/next operations can go and where events can be dragged/resized to.
            // an object with optional start and end properties.
            validRange: validRange,
            // range the view is formally responsible for.
            // for example, a month view might have 1st-31st, excluding padded dates
            currentRange: currentInfo.range,
            // name of largest unit being displayed, like "month" or "week"
            currentRangeUnit: currentInfo.unit,
            isRangeAllDay: isRangeAllDay,
            // dates that display events and accept drag-n-drop
            // will be `null` if no dates accept events
            activeRange: activeRange,
            // date range with a rendered skeleton
            // includes not-active days that need some sort of DOM
            renderRange: renderRange,
            // Duration object that denotes the first visible time of any given day
            minTime: minTime,
            // Duration object that denotes the exclusive visible end time of any given day
            maxTime: maxTime,
            isValid: isValid,
            // how far the current date will move for a prev/next operation
            dateIncrement: this.buildDateIncrement(currentInfo.duration) // pass a fallback (might be null) ^

          };
        }; // Builds an object with optional start/end properties.
        // Indicates the minimum/maximum dates to display.
        // not responsible for trimming hidden days.


        DateProfileGenerator.prototype.buildValidRange = function () {
          return this.getRangeOption('validRange', this.calendar.getNow()) || {
            start: null,
            end: null
          }; // completely open-ended
        }; // Builds a structure with info about the "current" range, the range that is
        // highlighted as being the current month for example.
        // See build() for a description of `direction`.
        // Guaranteed to have `range` and `unit` properties. `duration` is optional.


        DateProfileGenerator.prototype.buildCurrentRangeInfo = function (date, direction) {
          var _a = this,
              viewSpec = _a.viewSpec,
              dateEnv = _a.dateEnv;

          var duration = null;
          var unit = null;
          var range = null;
          var dayCount;

          if (viewSpec.duration) {
            duration = viewSpec.duration;
            unit = viewSpec.durationUnit;
            range = this.buildRangeFromDuration(date, direction, duration, unit);
          } else if (dayCount = this.options.dayCount) {
            unit = 'day';
            range = this.buildRangeFromDayCount(date, direction, dayCount);
          } else if (range = this.buildCustomVisibleRange(date)) {
            unit = dateEnv.greatestWholeUnit(range.start, range.end).unit;
          } else {
            duration = this.getFallbackDuration();
            unit = greatestDurationDenominator(duration).unit;
            range = this.buildRangeFromDuration(date, direction, duration, unit);
          }

          return {
            duration: duration,
            unit: unit,
            range: range
          };
        };

        DateProfileGenerator.prototype.getFallbackDuration = function () {
          return createDuration({
            day: 1
          });
        }; // Returns a new activeRange to have time values (un-ambiguate)
        // minTime or maxTime causes the range to expand.


        DateProfileGenerator.prototype.adjustActiveRange = function (range, minTime, maxTime) {
          var dateEnv = this.dateEnv;
          var start = range.start;
          var end = range.end;

          if (this.viewSpec.class.prototype.usesMinMaxTime) {
            // expand active range if minTime is negative (why not when positive?)
            if (asRoughDays(minTime) < 0) {
              start = startOfDay(start); // necessary?

              start = dateEnv.add(start, minTime);
            } // expand active range if maxTime is beyond one day (why not when positive?)


            if (asRoughDays(maxTime) > 1) {
              end = startOfDay(end); // necessary?

              end = addDays(end, -1);
              end = dateEnv.add(end, maxTime);
            }
          }

          return {
            start: start,
            end: end
          };
        }; // Builds the "current" range when it is specified as an explicit duration.
        // `unit` is the already-computed greatestDurationDenominator unit of duration.


        DateProfileGenerator.prototype.buildRangeFromDuration = function (date, direction, duration, unit) {
          var dateEnv = this.dateEnv;
          var alignment = this.options.dateAlignment;
          var dateIncrementInput;
          var dateIncrementDuration;
          var start;
          var end;
          var res; // compute what the alignment should be

          if (!alignment) {
            dateIncrementInput = this.options.dateIncrement;

            if (dateIncrementInput) {
              dateIncrementDuration = createDuration(dateIncrementInput); // use the smaller of the two units

              if (asRoughMs(dateIncrementDuration) < asRoughMs(duration)) {
                alignment = greatestDurationDenominator(dateIncrementDuration, !getWeeksFromInput(dateIncrementInput)).unit;
              } else {
                alignment = unit;
              }
            } else {
              alignment = unit;
            }
          } // if the view displays a single day or smaller


          if (asRoughDays(duration) <= 1) {
            if (this.isHiddenDay(start)) {
              start = this.skipHiddenDays(start, direction);
              start = startOfDay(start);
            }
          }

          function computeRes() {
            start = dateEnv.startOf(date, alignment);
            end = dateEnv.add(start, duration);
            res = {
              start: start,
              end: end
            };
          }

          computeRes(); // if range is completely enveloped by hidden days, go past the hidden days

          if (!this.trimHiddenDays(res)) {
            date = this.skipHiddenDays(date, direction);
            computeRes();
          }

          return res;
        }; // Builds the "current" range when a dayCount is specified.


        DateProfileGenerator.prototype.buildRangeFromDayCount = function (date, direction, dayCount) {
          var dateEnv = this.dateEnv;
          var customAlignment = this.options.dateAlignment;
          var runningCount = 0;
          var start = date;
          var end;

          if (customAlignment) {
            start = dateEnv.startOf(start, customAlignment);
          }

          start = startOfDay(start);
          start = this.skipHiddenDays(start, direction);
          end = start;

          do {
            end = addDays(end, 1);

            if (!this.isHiddenDay(end)) {
              runningCount++;
            }
          } while (runningCount < dayCount);

          return {
            start: start,
            end: end
          };
        }; // Builds a normalized range object for the "visible" range,
        // which is a way to define the currentRange and activeRange at the same time.


        DateProfileGenerator.prototype.buildCustomVisibleRange = function (date) {
          var dateEnv = this.dateEnv;
          var visibleRange = this.getRangeOption('visibleRange', dateEnv.toDate(date));

          if (visibleRange && (visibleRange.start == null || visibleRange.end == null)) {
            return null;
          }

          return visibleRange;
        }; // Computes the range that will represent the element/cells for *rendering*,
        // but which may have voided days/times.
        // not responsible for trimming hidden days.


        DateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {
          return currentRange;
        }; // Compute the duration value that should be added/substracted to the current date
        // when a prev/next operation happens.


        DateProfileGenerator.prototype.buildDateIncrement = function (fallback) {
          var dateIncrementInput = this.options.dateIncrement;
          var customAlignment;

          if (dateIncrementInput) {
            return createDuration(dateIncrementInput);
          } else if (customAlignment = this.options.dateAlignment) {
            return createDuration(1, customAlignment);
          } else if (fallback) {
            return fallback;
          } else {
            return createDuration({
              days: 1
            });
          }
        }; // Arguments after name will be forwarded to a hypothetical function value
        // WARNING: passed-in arguments will be given to generator functions as-is and can cause side-effects.
        // Always clone your objects if you fear mutation.


        DateProfileGenerator.prototype.getRangeOption = function (name) {
          var otherArgs = [];

          for (var _i = 1; _i < arguments.length; _i++) {
            otherArgs[_i - 1] = arguments[_i];
          }

          var val = this.options[name];

          if (typeof val === 'function') {
            val = val.apply(null, otherArgs);
          }

          if (val) {
            val = parseRange(val, this.dateEnv);
          }

          if (val) {
            val = computeVisibleDayRange(val);
          }

          return val;
        };
        /* Hidden Days
        ------------------------------------------------------------------------------------------------------------------*/
        // Initializes internal variables related to calculating hidden days-of-week


        DateProfileGenerator.prototype.initHiddenDays = function () {
          var hiddenDays = this.options.hiddenDays || []; // array of day-of-week indices that are hidden

          var isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)

          var dayCnt = 0;
          var i;

          if (this.options.weekends === false) {
            hiddenDays.push(0, 6); // 0=sunday, 6=saturday
          }

          for (i = 0; i < 7; i++) {
            if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {
              dayCnt++;
            }
          }

          if (!dayCnt) {
            throw new Error('invalid hiddenDays'); // all days were hidden? bad.
          }

          this.isHiddenDayHash = isHiddenDayHash;
        }; // Remove days from the beginning and end of the range that are computed as hidden.
        // If the whole range is trimmed off, returns null


        DateProfileGenerator.prototype.trimHiddenDays = function (range) {
          var start = range.start;
          var end = range.end;

          if (start) {
            start = this.skipHiddenDays(start);
          }

          if (end) {
            end = this.skipHiddenDays(end, -1, true);
          }

          if (start == null || end == null || start < end) {
            return {
              start: start,
              end: end
            };
          }

          return null;
        }; // Is the current day hidden?
        // `day` is a day-of-week index (0-6), or a Date (used for UTC)


        DateProfileGenerator.prototype.isHiddenDay = function (day) {
          if (day instanceof Date) {
            day = day.getUTCDay();
          }

          return this.isHiddenDayHash[day];
        }; // Incrementing the current day until it is no longer a hidden day, returning a copy.
        // DOES NOT CONSIDER validRange!
        // If the initial value of `date` is not a hidden day, don't do anything.
        // Pass `isExclusive` as `true` if you are dealing with an end date.
        // `inc` defaults to `1` (increment one day forward each time)


        DateProfileGenerator.prototype.skipHiddenDays = function (date, inc, isExclusive) {
          if (inc === void 0) {
            inc = 1;
          }

          if (isExclusive === void 0) {
            isExclusive = false;
          }

          while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {
            date = addDays(date, inc);
          }

          return date;
        };

        return DateProfileGenerator;
      }(); // TODO: find a way to avoid comparing DateProfiles. it's tedious


      function isDateProfilesEqual(p0, p1) {
        return rangesEqual(p0.activeRange, p1.activeRange) && rangesEqual(p0.validRange, p1.validRange) && durationsEqual(p0.minTime, p1.minTime) && durationsEqual(p0.maxTime, p1.maxTime);
      }

      function reduce(state, action, calendar) {
        var viewType = reduceViewType(state.viewType, action);
        var dateProfile = reduceDateProfile(state.dateProfile, action, state.currentDate, viewType, calendar);
        var eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendar);

        var nextState = _assign({}, state, {
          viewType: viewType,
          dateProfile: dateProfile,
          currentDate: reduceCurrentDate(state.currentDate, action, dateProfile),
          eventSources: eventSources,
          eventStore: reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendar),
          dateSelection: reduceDateSelection(state.dateSelection, action, calendar),
          eventSelection: reduceSelectedEvent(state.eventSelection, action),
          eventDrag: reduceEventDrag(state.eventDrag, action, eventSources, calendar),
          eventResize: reduceEventResize(state.eventResize, action, eventSources, calendar),
          eventSourceLoadingLevel: computeLoadingLevel(eventSources),
          loadingLevel: computeLoadingLevel(eventSources)
        });

        for (var _i = 0, _a = calendar.pluginSystem.hooks.reducers; _i < _a.length; _i++) {
          var reducerFunc = _a[_i];
          nextState = reducerFunc(nextState, action, calendar);
        } // console.log(action.type, nextState)


        return nextState;
      }

      function reduceViewType(currentViewType, action) {
        switch (action.type) {
          case 'SET_VIEW_TYPE':
            return action.viewType;

          default:
            return currentViewType;
        }
      }

      function reduceDateProfile(currentDateProfile, action, currentDate, viewType, calendar) {
        var newDateProfile;

        switch (action.type) {
          case 'PREV':
            newDateProfile = calendar.dateProfileGenerators[viewType].buildPrev(currentDateProfile, currentDate);
            break;

          case 'NEXT':
            newDateProfile = calendar.dateProfileGenerators[viewType].buildNext(currentDateProfile, currentDate);
            break;

          case 'SET_DATE':
            if (!currentDateProfile.activeRange || !rangeContainsMarker(currentDateProfile.currentRange, action.dateMarker)) {
              newDateProfile = calendar.dateProfileGenerators[viewType].build(action.dateMarker, undefined, true // forceToValid
              );
            }

            break;

          case 'SET_VIEW_TYPE':
            var generator = calendar.dateProfileGenerators[viewType];

            if (!generator) {
              throw new Error(viewType ? 'The FullCalendar view "' + viewType + '" does not exist. Make sure your plugins are loaded correctly.' : 'No available FullCalendar view plugins.');
            }

            newDateProfile = generator.build(action.dateMarker || currentDate, undefined, true // forceToValid
            );
            break;
        }

        if (newDateProfile && newDateProfile.isValid && !(currentDateProfile && isDateProfilesEqual(currentDateProfile, newDateProfile))) {
          return newDateProfile;
        } else {
          return currentDateProfile;
        }
      }

      function reduceCurrentDate(currentDate, action, dateProfile) {
        switch (action.type) {
          case 'PREV':
          case 'NEXT':
            if (!rangeContainsMarker(dateProfile.currentRange, currentDate)) {
              return dateProfile.currentRange.start;
            } else {
              return currentDate;
            }

          case 'SET_DATE':
          case 'SET_VIEW_TYPE':
            var newDate = action.dateMarker || currentDate;

            if (dateProfile.activeRange && !rangeContainsMarker(dateProfile.activeRange, newDate)) {
              return dateProfile.currentRange.start;
            } else {
              return newDate;
            }

          default:
            return currentDate;
        }
      }

      function reduceDateSelection(currentSelection, action, calendar) {
        switch (action.type) {
          case 'SELECT_DATES':
            return action.selection;

          case 'UNSELECT_DATES':
            return null;

          default:
            return currentSelection;
        }
      }

      function reduceSelectedEvent(currentInstanceId, action) {
        switch (action.type) {
          case 'SELECT_EVENT':
            return action.eventInstanceId;

          case 'UNSELECT_EVENT':
            return '';

          default:
            return currentInstanceId;
        }
      }

      function reduceEventDrag(currentDrag, action, sources, calendar) {
        switch (action.type) {
          case 'SET_EVENT_DRAG':
            var newDrag = action.state;
            return {
              affectedEvents: newDrag.affectedEvents,
              mutatedEvents: newDrag.mutatedEvents,
              isEvent: newDrag.isEvent,
              origSeg: newDrag.origSeg
            };

          case 'UNSET_EVENT_DRAG':
            return null;

          default:
            return currentDrag;
        }
      }

      function reduceEventResize(currentResize, action, sources, calendar) {
        switch (action.type) {
          case 'SET_EVENT_RESIZE':
            var newResize = action.state;
            return {
              affectedEvents: newResize.affectedEvents,
              mutatedEvents: newResize.mutatedEvents,
              isEvent: newResize.isEvent,
              origSeg: newResize.origSeg
            };

          case 'UNSET_EVENT_RESIZE':
            return null;

          default:
            return currentResize;
        }
      }

      function computeLoadingLevel(eventSources) {
        var cnt = 0;

        for (var sourceId in eventSources) {
          if (eventSources[sourceId].isFetching) {
            cnt++;
          }
        }

        return cnt;
      }

      var STANDARD_PROPS = {
        start: null,
        end: null,
        allDay: Boolean
      };

      function parseDateSpan(raw, dateEnv, defaultDuration) {
        var span = parseOpenDateSpan(raw, dateEnv);
        var range = span.range;

        if (!range.start) {
          return null;
        }

        if (!range.end) {
          if (defaultDuration == null) {
            return null;
          } else {
            range.end = dateEnv.add(range.start, defaultDuration);
          }
        }

        return span;
      }
      /*
      TODO: somehow combine with parseRange?
      Will return null if the start/end props were present but parsed invalidly.
      */


      function parseOpenDateSpan(raw, dateEnv) {
        var leftovers = {};
        var standardProps = refineProps(raw, STANDARD_PROPS, {}, leftovers);
        var startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;
        var endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;
        var allDay = standardProps.allDay;

        if (allDay == null) {
          allDay = startMeta && startMeta.isTimeUnspecified && (!endMeta || endMeta.isTimeUnspecified);
        } // use this leftover object as the selection object


        leftovers.range = {
          start: startMeta ? startMeta.marker : null,
          end: endMeta ? endMeta.marker : null
        };
        leftovers.allDay = allDay;
        return leftovers;
      }

      function isDateSpansEqual(span0, span1) {
        return rangesEqual(span0.range, span1.range) && span0.allDay === span1.allDay && isSpanPropsEqual(span0, span1);
      } // the NON-DATE-RELATED props


      function isSpanPropsEqual(span0, span1) {
        for (var propName in span1) {
          if (propName !== 'range' && propName !== 'allDay') {
            if (span0[propName] !== span1[propName]) {
              return false;
            }
          }
        } // are there any props that span0 has that span1 DOESN'T have?
        // both have range/allDay, so no need to special-case.


        for (var propName in span0) {
          if (!(propName in span1)) {
            return false;
          }
        }

        return true;
      }

      function buildDateSpanApi(span, dateEnv) {
        return {
          start: dateEnv.toDate(span.range.start),
          end: dateEnv.toDate(span.range.end),
          startStr: dateEnv.formatIso(span.range.start, {
            omitTime: span.allDay
          }),
          endStr: dateEnv.formatIso(span.range.end, {
            omitTime: span.allDay
          }),
          allDay: span.allDay
        };
      }

      function buildDatePointApi(span, dateEnv) {
        return {
          date: dateEnv.toDate(span.range.start),
          dateStr: dateEnv.formatIso(span.range.start, {
            omitTime: span.allDay
          }),
          allDay: span.allDay
        };
      }

      function fabricateEventRange(dateSpan, eventUiBases, calendar) {
        var def = parseEventDef({
          editable: false
        }, '', // sourceId
        dateSpan.allDay, true, // hasEnd
        calendar);
        return {
          def: def,
          ui: compileEventUi(def, eventUiBases),
          instance: createEventInstance(def.defId, dateSpan.range),
          range: dateSpan.range,
          isStart: true,
          isEnd: true
        };
      }

      function compileViewDefs(defaultConfigs, overrideConfigs) {
        var hash = {};
        var viewType;

        for (viewType in defaultConfigs) {
          ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
        }

        for (viewType in overrideConfigs) {
          ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
        }

        return hash;
      }

      function ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
        if (hash[viewType]) {
          return hash[viewType];
        }

        var viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);

        if (viewDef) {
          hash[viewType] = viewDef;
        }

        return viewDef;
      }

      function buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
        var defaultConfig = defaultConfigs[viewType];
        var overrideConfig = overrideConfigs[viewType];

        var queryProp = function queryProp(name) {
          return defaultConfig && defaultConfig[name] !== null ? defaultConfig[name] : overrideConfig && overrideConfig[name] !== null ? overrideConfig[name] : null;
        };

        var theClass = queryProp('class');
        var superType = queryProp('superType');

        if (!superType && theClass) {
          superType = findViewNameBySubclass(theClass, overrideConfigs) || findViewNameBySubclass(theClass, defaultConfigs);
        }

        var superDef = superType ? ensureViewDef(superType, hash, defaultConfigs, overrideConfigs) : null;

        if (!theClass && superDef) {
          theClass = superDef.class;
        }

        if (!theClass) {
          return null; // don't throw a warning, might be settings for a single-unit view
        }

        return {
          type: viewType,
          class: theClass,
          defaults: _assign({}, superDef ? superDef.defaults : {}, defaultConfig ? defaultConfig.options : {}),
          overrides: _assign({}, superDef ? superDef.overrides : {}, overrideConfig ? overrideConfig.options : {})
        };
      }

      function findViewNameBySubclass(viewSubclass, configs) {
        var superProto = Object.getPrototypeOf(viewSubclass.prototype);

        for (var viewType in configs) {
          var parsed = configs[viewType]; // need DIRECT subclass, so instanceof won't do it

          if (parsed.class && parsed.class.prototype === superProto) {
            return viewType;
          }
        }

        return '';
      }

      function parseViewConfigs(inputs) {
        return mapHash(inputs, parseViewConfig);
      }

      var VIEW_DEF_PROPS = {
        type: String,
        class: null
      };

      function parseViewConfig(input) {
        if (typeof input === 'function') {
          input = {
            class: input
          };
        }

        var options = {};
        var props = refineProps(input, VIEW_DEF_PROPS, {}, options);
        return {
          superType: props.type,
          class: props.class,
          options: options
        };
      }

      function buildViewSpecs(defaultInputs, optionsManager) {
        var defaultConfigs = parseViewConfigs(defaultInputs);
        var overrideConfigs = parseViewConfigs(optionsManager.overrides.views);
        var viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);
        return mapHash(viewDefs, function (viewDef) {
          return buildViewSpec(viewDef, overrideConfigs, optionsManager);
        });
      }

      function buildViewSpec(viewDef, overrideConfigs, optionsManager) {
        var durationInput = viewDef.overrides.duration || viewDef.defaults.duration || optionsManager.dynamicOverrides.duration || optionsManager.overrides.duration;
        var duration = null;
        var durationUnit = '';
        var singleUnit = '';
        var singleUnitOverrides = {};

        if (durationInput) {
          duration = createDuration(durationInput);

          if (duration) {
            // valid?
            var denom = greatestDurationDenominator(duration, !getWeeksFromInput(durationInput));
            durationUnit = denom.unit;

            if (denom.value === 1) {
              singleUnit = durationUnit;
              singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].options : {};
            }
          }
        }

        var queryButtonText = function queryButtonText(options) {
          var buttonTextMap = options.buttonText || {};
          var buttonTextKey = viewDef.defaults.buttonTextKey;

          if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {
            return buttonTextMap[buttonTextKey];
          }

          if (buttonTextMap[viewDef.type] != null) {
            return buttonTextMap[viewDef.type];
          }

          if (buttonTextMap[singleUnit] != null) {
            return buttonTextMap[singleUnit];
          }
        };

        return {
          type: viewDef.type,
          class: viewDef.class,
          duration: duration,
          durationUnit: durationUnit,
          singleUnit: singleUnit,
          options: _assign({}, globalDefaults, viewDef.defaults, optionsManager.dirDefaults, optionsManager.localeDefaults, optionsManager.overrides, singleUnitOverrides, viewDef.overrides, optionsManager.dynamicOverrides),
          buttonTextOverride: queryButtonText(optionsManager.dynamicOverrides) || queryButtonText(optionsManager.overrides) || // constructor-specified buttonText lookup hash takes precedence
          viewDef.overrides.buttonText,
          buttonTextDefault: queryButtonText(optionsManager.localeDefaults) || queryButtonText(optionsManager.dirDefaults) || viewDef.defaults.buttonText || queryButtonText(globalDefaults) || viewDef.type // fall back to given view name

        };
      }

      var Toolbar =
      /** @class */
      function (_super) {
        __extends(Toolbar, _super);

        function Toolbar(context, extraClassName) {
          var _this = _super.call(this, context) || this;

          _this._renderLayout = memoizeRendering(_this.renderLayout, _this.unrenderLayout);
          _this._updateTitle = memoizeRendering(_this.updateTitle, null, [_this._renderLayout]);
          _this._updateActiveButton = memoizeRendering(_this.updateActiveButton, null, [_this._renderLayout]);
          _this._updateToday = memoizeRendering(_this.updateToday, null, [_this._renderLayout]);
          _this._updatePrev = memoizeRendering(_this.updatePrev, null, [_this._renderLayout]);
          _this._updateNext = memoizeRendering(_this.updateNext, null, [_this._renderLayout]);
          _this.el = createElement('div', {
            className: 'fc-toolbar ' + extraClassName
          });
          return _this;
        }

        Toolbar.prototype.destroy = function () {
          _super.prototype.destroy.call(this);

          this._renderLayout.unrender(); // should unrender everything else


          removeElement(this.el);
        };

        Toolbar.prototype.render = function (props) {
          this._renderLayout(props.layout);

          this._updateTitle(props.title);

          this._updateActiveButton(props.activeButton);

          this._updateToday(props.isTodayEnabled);

          this._updatePrev(props.isPrevEnabled);

          this._updateNext(props.isNextEnabled);
        };

        Toolbar.prototype.renderLayout = function (layout) {
          var el = this.el;
          this.viewsWithButtons = [];
          appendToElement(el, this.renderSection('left', layout.left));
          appendToElement(el, this.renderSection('center', layout.center));
          appendToElement(el, this.renderSection('right', layout.right));
        };

        Toolbar.prototype.unrenderLayout = function () {
          this.el.innerHTML = '';
        };

        Toolbar.prototype.renderSection = function (position, buttonStr) {
          var _this = this;

          var _a = this,
              theme = _a.theme,
              calendar = _a.calendar;

          var optionsManager = calendar.optionsManager;
          var viewSpecs = calendar.viewSpecs;
          var sectionEl = createElement('div', {
            className: 'fc-' + position
          });
          var calendarCustomButtons = optionsManager.computed.customButtons || {};
          var calendarButtonTextOverrides = optionsManager.overrides.buttonText || {};
          var calendarButtonText = optionsManager.computed.buttonText || {};

          if (buttonStr) {
            buttonStr.split(' ').forEach(function (buttonGroupStr, i) {
              var groupChildren = [];
              var isOnlyButtons = true;
              var groupEl;
              buttonGroupStr.split(',').forEach(function (buttonName, j) {
                var customButtonProps;
                var viewSpec;
                var buttonClick;
                var buttonIcon; // only one of these will be set

                var buttonText; // "

                var buttonInnerHtml;
                var buttonClasses;
                var buttonEl;
                var buttonAriaAttr;

                if (buttonName === 'title') {
                  groupChildren.push(htmlToElement('<h2>&nbsp;</h2>')); // we always want it to take up height

                  isOnlyButtons = false;
                } else {
                  if (customButtonProps = calendarCustomButtons[buttonName]) {
                    buttonClick = function buttonClick(ev) {
                      if (customButtonProps.click) {
                        customButtonProps.click.call(buttonEl, ev);
                      }
                    };

                    (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) || (buttonIcon = theme.getIconClass(buttonName)) || (buttonText = customButtonProps.text);
                  } else if (viewSpec = viewSpecs[buttonName]) {
                    _this.viewsWithButtons.push(buttonName);

                    buttonClick = function buttonClick() {
                      calendar.changeView(buttonName);
                    };

                    (buttonText = viewSpec.buttonTextOverride) || (buttonIcon = theme.getIconClass(buttonName)) || (buttonText = viewSpec.buttonTextDefault);
                  } else if (calendar[buttonName]) {
                    // a calendar method
                    buttonClick = function buttonClick() {
                      calendar[buttonName]();
                    };

                    (buttonText = calendarButtonTextOverrides[buttonName]) || (buttonIcon = theme.getIconClass(buttonName)) || (buttonText = calendarButtonText[buttonName]); //            ^ everything else is considered default
                  }

                  if (buttonClick) {
                    buttonClasses = ['fc-' + buttonName + '-button', theme.getClass('button')];

                    if (buttonText) {
                      buttonInnerHtml = htmlEscape(buttonText);
                      buttonAriaAttr = '';
                    } else if (buttonIcon) {
                      buttonInnerHtml = "<span class='" + buttonIcon + "'></span>";
                      buttonAriaAttr = ' aria-label="' + buttonName + '"';
                    }

                    buttonEl = htmlToElement( // type="button" so that it doesn't submit a form
                    '<button type="button" class="' + buttonClasses.join(' ') + '"' + buttonAriaAttr + '>' + buttonInnerHtml + '</button>');
                    buttonEl.addEventListener('click', buttonClick);
                    groupChildren.push(buttonEl);
                  }
                }
              });

              if (groupChildren.length > 1) {
                groupEl = document.createElement('div');
                var buttonGroupClassName = theme.getClass('buttonGroup');

                if (isOnlyButtons && buttonGroupClassName) {
                  groupEl.classList.add(buttonGroupClassName);
                }

                appendToElement(groupEl, groupChildren);
                sectionEl.appendChild(groupEl);
              } else {
                appendToElement(sectionEl, groupChildren); // 1 or 0 children
              }
            });
          }

          return sectionEl;
        };

        Toolbar.prototype.updateToday = function (isTodayEnabled) {
          this.toggleButtonEnabled('today', isTodayEnabled);
        };

        Toolbar.prototype.updatePrev = function (isPrevEnabled) {
          this.toggleButtonEnabled('prev', isPrevEnabled);
        };

        Toolbar.prototype.updateNext = function (isNextEnabled) {
          this.toggleButtonEnabled('next', isNextEnabled);
        };

        Toolbar.prototype.updateTitle = function (text) {
          findElements(this.el, 'h2').forEach(function (titleEl) {
            titleEl.innerText = text;
          });
        };

        Toolbar.prototype.updateActiveButton = function (buttonName) {
          var className = this.theme.getClass('buttonActive');
          findElements(this.el, 'button').forEach(function (buttonEl) {
            if (buttonName && buttonEl.classList.contains('fc-' + buttonName + '-button')) {
              buttonEl.classList.add(className);
            } else {
              buttonEl.classList.remove(className);
            }
          });
        };

        Toolbar.prototype.toggleButtonEnabled = function (buttonName, bool) {
          findElements(this.el, '.fc-' + buttonName + '-button').forEach(function (buttonEl) {
            buttonEl.disabled = !bool;
          });
        };

        return Toolbar;
      }(Component);

      var CalendarComponent =
      /** @class */
      function (_super) {
        __extends(CalendarComponent, _super);

        function CalendarComponent(context, el) {
          var _this = _super.call(this, context) || this;

          _this._renderToolbars = memoizeRendering(_this.renderToolbars);
          _this.buildViewPropTransformers = memoize(buildViewPropTransformers);
          _this.el = el;
          prependToElement(el, _this.contentEl = createElement('div', {
            className: 'fc-view-container'
          }));
          var calendar = _this.calendar;

          for (var _i = 0, _a = calendar.pluginSystem.hooks.viewContainerModifiers; _i < _a.length; _i++) {
            var modifyViewContainer = _a[_i];
            modifyViewContainer(_this.contentEl, calendar);
          }

          _this.toggleElClassNames(true);

          _this.computeTitle = memoize(computeTitle);
          _this.parseBusinessHours = memoize(function (input) {
            return parseBusinessHours(input, _this.calendar);
          });
          return _this;
        }

        CalendarComponent.prototype.destroy = function () {
          if (this.header) {
            this.header.destroy();
          }

          if (this.footer) {
            this.footer.destroy();
          }

          if (this.view) {
            this.view.destroy();
          }

          removeElement(this.contentEl);
          this.toggleElClassNames(false);

          _super.prototype.destroy.call(this);
        };

        CalendarComponent.prototype.toggleElClassNames = function (bool) {
          var classList = this.el.classList;
          var dirClassName = 'fc-' + this.opt('dir');
          var themeClassName = this.theme.getClass('widget');

          if (bool) {
            classList.add('fc');
            classList.add(dirClassName);
            classList.add(themeClassName);
          } else {
            classList.remove('fc');
            classList.remove(dirClassName);
            classList.remove(themeClassName);
          }
        };

        CalendarComponent.prototype.render = function (props) {
          this.freezeHeight();
          var title = this.computeTitle(props.dateProfile, props.viewSpec.options);

          this._renderToolbars(props.viewSpec, props.dateProfile, props.currentDate, props.dateProfileGenerator, title);

          this.renderView(props, title);
          this.updateSize();
          this.thawHeight();
        };

        CalendarComponent.prototype.renderToolbars = function (viewSpec, dateProfile, currentDate, dateProfileGenerator, title) {
          var headerLayout = this.opt('header');
          var footerLayout = this.opt('footer');
          var now = this.calendar.getNow();
          var todayInfo = dateProfileGenerator.build(now);
          var prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate);
          var nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate);
          var toolbarProps = {
            title: title,
            activeButton: viewSpec.type,
            isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),
            isPrevEnabled: prevInfo.isValid,
            isNextEnabled: nextInfo.isValid
          };

          if (headerLayout) {
            if (!this.header) {
              this.header = new Toolbar(this.context, 'fc-header-toolbar');
              prependToElement(this.el, this.header.el);
            }

            this.header.receiveProps(_assign({
              layout: headerLayout
            }, toolbarProps));
          } else if (this.header) {
            this.header.destroy();
            this.header = null;
          }

          if (footerLayout) {
            if (!this.footer) {
              this.footer = new Toolbar(this.context, 'fc-footer-toolbar');
              appendToElement(this.el, this.footer.el);
            }

            this.footer.receiveProps(_assign({
              layout: footerLayout
            }, toolbarProps));
          } else if (this.footer) {
            this.footer.destroy();
            this.footer = null;
          }
        };

        CalendarComponent.prototype.renderView = function (props, title) {
          var view = this.view;
          var viewSpec = props.viewSpec,
              dateProfileGenerator = props.dateProfileGenerator;

          if (!view || view.viewSpec !== viewSpec) {
            if (view) {
              view.destroy();
            }

            view = this.view = new viewSpec['class']({
              calendar: this.calendar,
              view: null,
              dateEnv: this.dateEnv,
              theme: this.theme,
              options: viewSpec.options
            }, viewSpec, dateProfileGenerator, this.contentEl);
          } else {
            view.addScroll(view.queryScroll());
          }

          view.title = title; // for the API

          var viewProps = {
            dateProfile: props.dateProfile,
            businessHours: this.parseBusinessHours(viewSpec.options.businessHours),
            eventStore: props.eventStore,
            eventUiBases: props.eventUiBases,
            dateSelection: props.dateSelection,
            eventSelection: props.eventSelection,
            eventDrag: props.eventDrag,
            eventResize: props.eventResize
          };
          var transformers = this.buildViewPropTransformers(this.calendar.pluginSystem.hooks.viewPropsTransformers);

          for (var _i = 0, transformers_1 = transformers; _i < transformers_1.length; _i++) {
            var transformer = transformers_1[_i];

            _assign(viewProps, transformer.transform(viewProps, viewSpec, props, view));
          }

          view.receiveProps(viewProps);
        }; // Sizing
        // -----------------------------------------------------------------------------------------------------------------


        CalendarComponent.prototype.updateSize = function (isResize) {
          if (isResize === void 0) {
            isResize = false;
          }

          var view = this.view;

          if (isResize) {
            view.addScroll(view.queryScroll());
          }

          if (isResize || this.isHeightAuto == null) {
            this.computeHeightVars();
          }

          view.updateSize(isResize, this.viewHeight, this.isHeightAuto);
          view.updateNowIndicator(); // we need to guarantee this will run after updateSize

          view.popScroll(isResize);
        };

        CalendarComponent.prototype.computeHeightVars = function () {
          var calendar = this.calendar; // yuck. need to handle dynamic options

          var heightInput = calendar.opt('height');
          var contentHeightInput = calendar.opt('contentHeight');
          this.isHeightAuto = heightInput === 'auto' || contentHeightInput === 'auto';

          if (typeof contentHeightInput === 'number') {
            // exists and not 'auto'
            this.viewHeight = contentHeightInput;
          } else if (typeof contentHeightInput === 'function') {
            // exists and is a function
            this.viewHeight = contentHeightInput();
          } else if (typeof heightInput === 'number') {
            // exists and not 'auto'
            this.viewHeight = heightInput - this.queryToolbarsHeight();
          } else if (typeof heightInput === 'function') {
            // exists and is a function
            this.viewHeight = heightInput() - this.queryToolbarsHeight();
          } else if (heightInput === 'parent') {
            // set to height of parent element
            this.viewHeight = this.el.parentNode.offsetHeight - this.queryToolbarsHeight();
          } else {
            this.viewHeight = Math.round(this.contentEl.offsetWidth / Math.max(calendar.opt('aspectRatio'), .5));
          }
        };

        CalendarComponent.prototype.queryToolbarsHeight = function () {
          var height = 0;

          if (this.header) {
            height += computeHeightAndMargins(this.header.el);
          }

          if (this.footer) {
            height += computeHeightAndMargins(this.footer.el);
          }

          return height;
        }; // Height "Freezing"
        // -----------------------------------------------------------------------------------------------------------------


        CalendarComponent.prototype.freezeHeight = function () {
          applyStyle(this.el, {
            height: this.el.offsetHeight,
            overflow: 'hidden'
          });
        };

        CalendarComponent.prototype.thawHeight = function () {
          applyStyle(this.el, {
            height: '',
            overflow: ''
          });
        };

        return CalendarComponent;
      }(Component); // Title and Date Formatting
      // -----------------------------------------------------------------------------------------------------------------
      // Computes what the title at the top of the calendar should be for this view


      function computeTitle(dateProfile, viewOptions) {
        var range; // for views that span a large unit of time, show the proper interval, ignoring stray days before and after

        if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {
          range = dateProfile.currentRange;
        } else {
          // for day units or smaller, use the actual day range
          range = dateProfile.activeRange;
        }

        return this.dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || computeTitleFormat(dateProfile), viewOptions.titleRangeSeparator), {
          isEndExclusive: dateProfile.isRangeAllDay
        });
      } // Generates the format string that should be used to generate the title for the current date range.
      // Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.


      function computeTitleFormat(dateProfile) {
        var currentRangeUnit = dateProfile.currentRangeUnit;

        if (currentRangeUnit === 'year') {
          return {
            year: 'numeric'
          };
        } else if (currentRangeUnit === 'month') {
          return {
            year: 'numeric',
            month: 'long'
          }; // like "September 2014"
        } else {
          var days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);

          if (days !== null && days > 1) {
            // multi-day range. shorter, like "Sep 9 - 10 2014"
            return {
              year: 'numeric',
              month: 'short',
              day: 'numeric'
            };
          } else {
            // one day. longer, like "September 9 2014"
            return {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            };
          }
        }
      } // Plugin
      // -----------------------------------------------------------------------------------------------------------------


      function buildViewPropTransformers(theClasses) {
        return theClasses.map(function (theClass) {
          return new theClass();
        });
      }

      var Interaction =
      /** @class */
      function () {
        function Interaction(settings) {
          this.component = settings.component;
        }

        Interaction.prototype.destroy = function () {};

        return Interaction;
      }();

      function parseInteractionSettings(component, input) {
        return {
          component: component,
          el: input.el,
          useEventCenter: input.useEventCenter != null ? input.useEventCenter : true
        };
      }

      function interactionSettingsToStore(settings) {
        var _a;

        return _a = {}, _a[settings.component.uid] = settings, _a;
      } // global state


      var interactionSettingsStore = {};
      /*
      Detects when the user clicks on an event within a DateComponent
      */

      var EventClicking =
      /** @class */
      function (_super) {
        __extends(EventClicking, _super);

        function EventClicking(settings) {
          var _this = _super.call(this, settings) || this;

          _this.handleSegClick = function (ev, segEl) {
            var component = _this.component;
            var seg = getElSeg(segEl);

            if (seg && // might be the <div> surrounding the more link
            component.isValidSegDownEl(ev.target)) {
              // our way to simulate a link click for elements that can't be <a> tags
              // grab before trigger fired in case trigger trashes DOM thru rerendering
              var hasUrlContainer = elementClosest(ev.target, '.fc-has-url');
              var url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';
              component.publiclyTrigger('eventClick', [{
                el: segEl,
                event: new EventApi(component.calendar, seg.eventRange.def, seg.eventRange.instance),
                jsEvent: ev,
                view: component.view
              }]);

              if (url && !ev.defaultPrevented) {
                window.location.href = url;
              }
            }
          };

          var component = settings.component;
          _this.destroy = listenBySelector(component.el, 'click', component.fgSegSelector + ',' + component.bgSegSelector, _this.handleSegClick);
          return _this;
        }

        return EventClicking;
      }(Interaction);
      /*
      Triggers events and adds/removes core classNames when the user's pointer
      enters/leaves event-elements of a component.
      */


      var EventHovering =
      /** @class */
      function (_super) {
        __extends(EventHovering, _super);

        function EventHovering(settings) {
          var _this = _super.call(this, settings) || this; // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it


          _this.handleEventElRemove = function (el) {
            if (el === _this.currentSegEl) {
              _this.handleSegLeave(null, _this.currentSegEl);
            }
          };

          _this.handleSegEnter = function (ev, segEl) {
            if (getElSeg(segEl)) {
              // TODO: better way to make sure not hovering over more+ link or its wrapper
              segEl.classList.add('fc-allow-mouse-resize');
              _this.currentSegEl = segEl;

              _this.triggerEvent('eventMouseEnter', ev, segEl);
            }
          };

          _this.handleSegLeave = function (ev, segEl) {
            if (_this.currentSegEl) {
              segEl.classList.remove('fc-allow-mouse-resize');
              _this.currentSegEl = null;

              _this.triggerEvent('eventMouseLeave', ev, segEl);
            }
          };

          var component = settings.component;
          _this.removeHoverListeners = listenToHoverBySelector(component.el, component.fgSegSelector + ',' + component.bgSegSelector, _this.handleSegEnter, _this.handleSegLeave);
          component.calendar.on('eventElRemove', _this.handleEventElRemove);
          return _this;
        }

        EventHovering.prototype.destroy = function () {
          this.removeHoverListeners();
          this.component.calendar.off('eventElRemove', this.handleEventElRemove);
        };

        EventHovering.prototype.triggerEvent = function (publicEvName, ev, segEl) {
          var component = this.component;
          var seg = getElSeg(segEl);

          if (!ev || component.isValidSegDownEl(ev.target)) {
            component.publiclyTrigger(publicEvName, [{
              el: segEl,
              event: new EventApi(this.component.calendar, seg.eventRange.def, seg.eventRange.instance),
              jsEvent: ev,
              view: component.view
            }]);
          }
        };

        return EventHovering;
      }(Interaction);

      var StandardTheme =
      /** @class */
      function (_super) {
        __extends(StandardTheme, _super);

        function StandardTheme() {
          return _super !== null && _super.apply(this, arguments) || this;
        }

        return StandardTheme;
      }(Theme);

      StandardTheme.prototype.classes = {
        widget: 'fc-unthemed',
        widgetHeader: 'fc-widget-header',
        widgetContent: 'fc-widget-content',
        buttonGroup: 'fc-button-group',
        button: 'fc-button fc-button-primary',
        buttonActive: 'fc-button-active',
        popoverHeader: 'fc-widget-header',
        popoverContent: 'fc-widget-content',
        // day grid
        headerRow: 'fc-widget-header',
        dayRow: 'fc-widget-content',
        // list view
        listView: 'fc-widget-content'
      };
      StandardTheme.prototype.baseIconClass = 'fc-icon';
      StandardTheme.prototype.iconClasses = {
        close: 'fc-icon-x',
        prev: 'fc-icon-chevron-left',
        next: 'fc-icon-chevron-right',
        prevYear: 'fc-icon-chevrons-left',
        nextYear: 'fc-icon-chevrons-right'
      };
      StandardTheme.prototype.iconOverrideOption = 'buttonIcons';
      StandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';
      StandardTheme.prototype.iconOverridePrefix = 'fc-icon-';

      var Calendar =
      /** @class */
      function () {
        function Calendar(el, overrides) {
          var _this = this;

          this.parseRawLocales = memoize(parseRawLocales);
          this.buildLocale = memoize(buildLocale);
          this.buildDateEnv = memoize(buildDateEnv);
          this.buildTheme = memoize(buildTheme);
          this.buildEventUiSingleBase = memoize(this._buildEventUiSingleBase);
          this.buildSelectionConfig = memoize(this._buildSelectionConfig);
          this.buildEventUiBySource = memoizeOutput(buildEventUiBySource, isObjectsSimilar);
          this.buildEventUiBases = memoize(buildEventUiBases);
          this.interactionsStore = {};
          this.actionQueue = [];
          this.isReducing = false; // isDisplaying: boolean = false // installed in DOM? accepting renders?

          this.needsRerender = false; // needs a render?

          this.needsFullRerender = false;
          this.isRendering = false; // currently in the executeRender function?

          this.renderingPauseDepth = 0;
          this.buildDelayedRerender = memoize(buildDelayedRerender);
          this.afterSizingTriggers = {};
          this.isViewUpdated = false;
          this.isDatesUpdated = false;
          this.isEventsUpdated = false;
          this.el = el;
          this.optionsManager = new OptionsManager(overrides || {});
          this.pluginSystem = new PluginSystem(); // only do once. don't do in handleOptions. because can't remove plugins

          this.addPluginInputs(this.optionsManager.computed.plugins || []);
          this.handleOptions(this.optionsManager.computed);
          this.publiclyTrigger('_init'); // for tests

          this.hydrate();
          this.calendarInteractions = this.pluginSystem.hooks.calendarInteractions.map(function (calendarInteractionClass) {
            return new calendarInteractionClass(_this);
          });
        }

        Calendar.prototype.addPluginInputs = function (pluginInputs) {
          var pluginDefs = refinePluginDefs(pluginInputs);

          for (var _i = 0, pluginDefs_1 = pluginDefs; _i < pluginDefs_1.length; _i++) {
            var pluginDef = pluginDefs_1[_i];
            this.pluginSystem.add(pluginDef);
          }
        };

        Object.defineProperty(Calendar.prototype, "view", {
          // public API
          get: function get() {
            return this.component ? this.component.view : null;
          },
          enumerable: true,
          configurable: true
        }); // Public API for rendering
        // -----------------------------------------------------------------------------------------------------------------

        Calendar.prototype.render = function () {
          if (!this.component) {
            this.renderableEventStore = createEmptyEventStore();
            this.bindHandlers();
            this.executeRender();
          } else {
            this.requestRerender(true);
          }
        };

        Calendar.prototype.destroy = function () {
          if (this.component) {
            this.unbindHandlers();
            this.component.destroy(); // don't null-out. in case API needs access

            this.component = null; // umm ???

            for (var _i = 0, _a = this.calendarInteractions; _i < _a.length; _i++) {
              var interaction = _a[_i];
              interaction.destroy();
            }

            this.publiclyTrigger('_destroyed');
          }
        }; // Handlers
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.bindHandlers = function () {
          var _this = this; // event delegation for nav links


          this.removeNavLinkListener = listenBySelector(this.el, 'click', 'a[data-goto]', function (ev, anchorEl) {
            var gotoOptions = anchorEl.getAttribute('data-goto');
            gotoOptions = gotoOptions ? JSON.parse(gotoOptions) : {};
            var dateEnv = _this.dateEnv;
            var dateMarker = dateEnv.createMarker(gotoOptions.date);
            var viewType = gotoOptions.type; // property like "navLinkDayClick". might be a string or a function

            var customAction = _this.viewOpt('navLink' + capitaliseFirstLetter(viewType) + 'Click');

            if (typeof customAction === 'function') {
              customAction(dateEnv.toDate(dateMarker), ev);
            } else {
              if (typeof customAction === 'string') {
                viewType = customAction;
              }

              _this.zoomTo(dateMarker, viewType);
            }
          });

          if (this.opt('handleWindowResize')) {
            window.addEventListener('resize', this.windowResizeProxy = debounce( // prevents rapid calls
            this.windowResize.bind(this), this.opt('windowResizeDelay')));
          }
        };

        Calendar.prototype.unbindHandlers = function () {
          this.removeNavLinkListener();

          if (this.windowResizeProxy) {
            window.removeEventListener('resize', this.windowResizeProxy);
            this.windowResizeProxy = null;
          }
        }; // Dispatcher
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.hydrate = function () {
          var _this = this;

          this.state = this.buildInitialState();
          var rawSources = this.opt('eventSources') || [];
          var singleRawSource = this.opt('events');
          var sources = []; // parsed

          if (singleRawSource) {
            rawSources.unshift(singleRawSource);
          }

          for (var _i = 0, rawSources_1 = rawSources; _i < rawSources_1.length; _i++) {
            var rawSource = rawSources_1[_i];
            var source = parseEventSource(rawSource, this);

            if (source) {
              sources.push(source);
            }
          }

          this.batchRendering(function () {
            _this.dispatch({
              type: 'INIT'
            }); // pass in sources here?


            _this.dispatch({
              type: 'ADD_EVENT_SOURCES',
              sources: sources
            });

            _this.dispatch({
              type: 'SET_VIEW_TYPE',
              viewType: _this.opt('defaultView') || _this.pluginSystem.hooks.defaultView
            });
          });
        };

        Calendar.prototype.buildInitialState = function () {
          return {
            viewType: null,
            loadingLevel: 0,
            eventSourceLoadingLevel: 0,
            currentDate: this.getInitialDate(),
            dateProfile: null,
            eventSources: {},
            eventStore: createEmptyEventStore(),
            dateSelection: null,
            eventSelection: '',
            eventDrag: null,
            eventResize: null
          };
        };

        Calendar.prototype.dispatch = function (action) {
          this.actionQueue.push(action);

          if (!this.isReducing) {
            this.isReducing = true;
            var oldState = this.state;

            while (this.actionQueue.length) {
              this.state = this.reduce(this.state, this.actionQueue.shift(), this);
            }

            var newState = this.state;
            this.isReducing = false;

            if (!oldState.loadingLevel && newState.loadingLevel) {
              this.publiclyTrigger('loading', [true]);
            } else if (oldState.loadingLevel && !newState.loadingLevel) {
              this.publiclyTrigger('loading', [false]);
            }

            var view = this.component && this.component.view;

            if (oldState.eventStore !== newState.eventStore || this.needsFullRerender) {
              if (oldState.eventStore) {
                this.isEventsUpdated = true;
              }
            }

            if (oldState.dateProfile !== newState.dateProfile || this.needsFullRerender) {
              if (oldState.dateProfile && view) {
                // why would view be null!?
                this.publiclyTrigger('datesDestroy', [{
                  view: view,
                  el: view.el
                }]);
              }

              this.isDatesUpdated = true;
            }

            if (oldState.viewType !== newState.viewType || this.needsFullRerender) {
              if (oldState.viewType && view) {
                // why would view be null!?
                this.publiclyTrigger('viewSkeletonDestroy', [{
                  view: view,
                  el: view.el
                }]);
              }

              this.isViewUpdated = true;
            }

            this.requestRerender();
          }
        };

        Calendar.prototype.reduce = function (state, action, calendar) {
          return reduce(state, action, calendar);
        }; // Render Queue
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.requestRerender = function (needsFull) {
          if (needsFull === void 0) {
            needsFull = false;
          }

          this.needsRerender = true;
          this.needsFullRerender = this.needsFullRerender || needsFull;
          this.delayedRerender(); // will call a debounced-version of tryRerender
        };

        Calendar.prototype.tryRerender = function () {
          if (this.component && // must be accepting renders
          this.needsRerender && // indicates that a rerender was requested
          !this.renderingPauseDepth && // not paused
          !this.isRendering // not currently in the render loop
          ) {
              this.executeRender();
            }
        };

        Calendar.prototype.batchRendering = function (func) {
          this.renderingPauseDepth++;
          func();
          this.renderingPauseDepth--;

          if (this.needsRerender) {
            this.requestRerender();
          }
        }; // Rendering
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.executeRender = function () {
          var needsFullRerender = this.needsFullRerender; // save before clearing
          // clear these BEFORE the render so that new values will accumulate during render

          this.needsRerender = false;
          this.needsFullRerender = false;
          this.isRendering = true;
          this.renderComponent(needsFullRerender);
          this.isRendering = false; // received a rerender request while rendering

          if (this.needsRerender) {
            this.delayedRerender();
          }
        };
        /*
        don't call this directly. use executeRender instead
        */


        Calendar.prototype.renderComponent = function (needsFull) {
          var _a = this,
              state = _a.state,
              component = _a.component;

          var viewType = state.viewType;
          var viewSpec = this.viewSpecs[viewType];
          var savedScroll = needsFull && component ? component.view.queryScroll() : null;

          if (!viewSpec) {
            throw new Error("View type \"" + viewType + "\" is not valid");
          } // if event sources are still loading and progressive rendering hasn't been enabled,
          // keep rendering the last fully loaded set of events


          var renderableEventStore = this.renderableEventStore = state.eventSourceLoadingLevel && !this.opt('progressiveEventRendering') ? this.renderableEventStore : state.eventStore;
          var eventUiSingleBase = this.buildEventUiSingleBase(viewSpec.options);
          var eventUiBySource = this.buildEventUiBySource(state.eventSources);
          var eventUiBases = this.eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);

          if (needsFull || !component) {
            if (component) {
              component.freezeHeight(); // next component will unfreeze it

              component.destroy();
            }

            component = this.component = new CalendarComponent({
              calendar: this,
              view: null,
              dateEnv: this.dateEnv,
              theme: this.theme,
              options: this.optionsManager.computed
            }, this.el);
          }

          component.receiveProps(_assign({}, state, {
            viewSpec: viewSpec,
            dateProfile: state.dateProfile,
            dateProfileGenerator: this.dateProfileGenerators[viewType],
            eventStore: renderableEventStore,
            eventUiBases: eventUiBases,
            dateSelection: state.dateSelection,
            eventSelection: state.eventSelection,
            eventDrag: state.eventDrag,
            eventResize: state.eventResize
          }));

          if (savedScroll) {
            component.view.applyScroll(savedScroll, false);
          }

          if (this.isViewUpdated) {
            this.isViewUpdated = false;
            this.publiclyTrigger('viewSkeletonRender', [{
              view: component.view,
              el: component.view.el
            }]);
          }

          if (this.isDatesUpdated) {
            this.isDatesUpdated = false;
            this.publiclyTrigger('datesRender', [{
              view: component.view,
              el: component.view.el
            }]);
          }

          if (this.isEventsUpdated) {
            this.isEventsUpdated = false;
          }

          this.releaseAfterSizingTriggers();
        }; // Options
        // -----------------------------------------------------------------------------------------------------------------

        /*
        Not meant for public API
        */


        Calendar.prototype.resetOptions = function (options) {
          var _this = this;

          var changeHandlers = this.pluginSystem.hooks.optionChangeHandlers;
          var oldOptions = this.optionsManager.overrides;
          var oldNormalOptions = {};
          var normalOptions = {};
          var specialOptions = {};

          for (var name_1 in oldOptions) {
            if (!changeHandlers[name_1]) {
              oldNormalOptions[name_1] = oldOptions[name_1];
            }
          }

          for (var name_2 in options) {
            if (changeHandlers[name_2]) {
              specialOptions[name_2] = options[name_2];
            } else {
              normalOptions[name_2] = options[name_2];
            }
          }

          this.batchRendering(function () {
            if (anyKeysRemoved(oldNormalOptions, normalOptions)) {
              _this.processOptions(options, 'reset');
            } else {
              _this.processOptions(computeChangedProps(oldNormalOptions, normalOptions));
            } // handle special options last


            for (var name_3 in specialOptions) {
              changeHandlers[name_3](specialOptions[name_3], _this);
            }
          });
        };
        /*
        Not meant for public API. Won't give the same precedence that setOption does
        */


        Calendar.prototype.setOptions = function (options) {
          var _this = this;

          var changeHandlers = this.pluginSystem.hooks.optionChangeHandlers;
          var normalOptions = {};
          var specialOptions = {};

          for (var name_4 in options) {
            if (changeHandlers[name_4]) {
              specialOptions[name_4] = options[name_4];
            } else {
              normalOptions[name_4] = options[name_4];
            }
          }

          this.batchRendering(function () {
            _this.processOptions(normalOptions); // handle special options last


            for (var name_5 in specialOptions) {
              changeHandlers[name_5](specialOptions[name_5], _this);
            }
          });
        };

        Calendar.prototype.processOptions = function (options, mode) {
          var _this = this;

          var oldDateEnv = this.dateEnv; // do this before handleOptions

          var isTimeZoneDirty = false;
          var isSizeDirty = false;
          var anyDifficultOptions = false;

          for (var name_6 in options) {
            if (/^(height|contentHeight|aspectRatio)$/.test(name_6)) {
              isSizeDirty = true;
            } else if (/^(defaultDate|defaultView)$/.test(name_6)) ;else {
              anyDifficultOptions = true;

              if (name_6 === 'timeZone') {
                isTimeZoneDirty = true;
              }
            }
          }

          if (mode === 'reset') {
            anyDifficultOptions = true;
            this.optionsManager.reset(options);
          } else if (mode === 'dynamic') {
            this.optionsManager.addDynamic(options); // takes higher precedence
          } else {
            this.optionsManager.add(options);
          }

          if (anyDifficultOptions) {
            this.handleOptions(this.optionsManager.computed); // only for "difficult" options

            this.needsFullRerender = true;
            this.batchRendering(function () {
              if (isTimeZoneDirty) {
                _this.dispatch({
                  type: 'CHANGE_TIMEZONE',
                  oldDateEnv: oldDateEnv
                });
              }
              /* HACK
              has the same effect as calling this.requestRerender(true)
              but recomputes the state's dateProfile
              */


              _this.dispatch({
                type: 'SET_VIEW_TYPE',
                viewType: _this.state.viewType
              });
            });
          }

          if (isSizeDirty) {
            this.updateSize();
          }
        };

        Calendar.prototype.setOption = function (name, val) {
          var _a;

          this.processOptions((_a = {}, _a[name] = val, _a), 'dynamic');
        };

        Calendar.prototype.getOption = function (name) {
          return this.optionsManager.computed[name];
        };

        Calendar.prototype.opt = function (name) {
          return this.optionsManager.computed[name];
        };

        Calendar.prototype.viewOpt = function (name) {
          return this.viewOpts()[name];
        };

        Calendar.prototype.viewOpts = function () {
          return this.viewSpecs[this.state.viewType].options;
        };
        /*
        rebuilds things based off of a complete set of refined options
        */


        Calendar.prototype.handleOptions = function (options) {
          var _this = this;

          var pluginHooks = this.pluginSystem.hooks;
          this.defaultAllDayEventDuration = createDuration(options.defaultAllDayEventDuration);
          this.defaultTimedEventDuration = createDuration(options.defaultTimedEventDuration);
          this.delayedRerender = this.buildDelayedRerender(options.rerenderDelay);
          this.theme = this.buildTheme(options);
          var available = this.parseRawLocales(options.locales);
          this.availableRawLocales = available.map;
          var locale = this.buildLocale(options.locale || available.defaultCode, available.map);
          this.dateEnv = this.buildDateEnv(locale, options.timeZone, pluginHooks.namedTimeZonedImpl, options.firstDay, options.weekNumberCalculation, options.weekLabel, pluginHooks.cmdFormatter);
          this.selectionConfig = this.buildSelectionConfig(options); // needs dateEnv. do after :(
          // ineffecient to do every time?

          this.viewSpecs = buildViewSpecs(pluginHooks.views, this.optionsManager); // ineffecient to do every time?

          this.dateProfileGenerators = mapHash(this.viewSpecs, function (viewSpec) {
            return new viewSpec.class.prototype.dateProfileGeneratorClass(viewSpec, _this);
          });
        };

        Calendar.prototype.getAvailableLocaleCodes = function () {
          return Object.keys(this.availableRawLocales);
        };

        Calendar.prototype._buildSelectionConfig = function (rawOpts) {
          return processScopedUiProps('select', rawOpts, this);
        };

        Calendar.prototype._buildEventUiSingleBase = function (rawOpts) {
          if (rawOpts.editable) {
            // so 'editable' affected events
            rawOpts = _assign({}, rawOpts, {
              eventEditable: true
            });
          }

          return processScopedUiProps('event', rawOpts, this);
        }; // Trigger
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.hasPublicHandlers = function (name) {
          return this.hasHandlers(name) || this.opt(name); // handler specified in options
        };

        Calendar.prototype.publiclyTrigger = function (name, args) {
          var optHandler = this.opt(name);
          this.triggerWith(name, this, args);

          if (optHandler) {
            return optHandler.apply(this, args);
          }
        };

        Calendar.prototype.publiclyTriggerAfterSizing = function (name, args) {
          var afterSizingTriggers = this.afterSizingTriggers;
          (afterSizingTriggers[name] || (afterSizingTriggers[name] = [])).push(args);
        };

        Calendar.prototype.releaseAfterSizingTriggers = function () {
          var afterSizingTriggers = this.afterSizingTriggers;

          for (var name_7 in afterSizingTriggers) {
            for (var _i = 0, _a = afterSizingTriggers[name_7]; _i < _a.length; _i++) {
              var args = _a[_i];
              this.publiclyTrigger(name_7, args);
            }
          }

          this.afterSizingTriggers = {};
        }; // View
        // -----------------------------------------------------------------------------------------------------------------
        // Returns a boolean about whether the view is okay to instantiate at some point


        Calendar.prototype.isValidViewType = function (viewType) {
          return Boolean(this.viewSpecs[viewType]);
        };

        Calendar.prototype.changeView = function (viewType, dateOrRange) {
          var dateMarker = null;

          if (dateOrRange) {
            if (dateOrRange.start && dateOrRange.end) {
              // a range
              this.optionsManager.addDynamic({
                visibleRange: dateOrRange
              }); // will not rerender

              this.handleOptions(this.optionsManager.computed); // ...but yuck
            } else {
              // a date
              dateMarker = this.dateEnv.createMarker(dateOrRange); // just like gotoDate
            }
          }

          this.unselect();
          this.dispatch({
            type: 'SET_VIEW_TYPE',
            viewType: viewType,
            dateMarker: dateMarker
          });
        }; // Forces navigation to a view for the given date.
        // `viewType` can be a specific view name or a generic one like "week" or "day".
        // needs to change


        Calendar.prototype.zoomTo = function (dateMarker, viewType) {
          var spec;
          viewType = viewType || 'day'; // day is default zoom

          spec = this.viewSpecs[viewType] || this.getUnitViewSpec(viewType);
          this.unselect();

          if (spec) {
            this.dispatch({
              type: 'SET_VIEW_TYPE',
              viewType: spec.type,
              dateMarker: dateMarker
            });
          } else {
            this.dispatch({
              type: 'SET_DATE',
              dateMarker: dateMarker
            });
          }
        }; // Given a duration singular unit, like "week" or "day", finds a matching view spec.
        // Preference is given to views that have corresponding buttons.


        Calendar.prototype.getUnitViewSpec = function (unit) {
          var viewTypes;
          var i;
          var spec; // put views that have buttons first. there will be duplicates, but oh well

          viewTypes = this.component.header.viewsWithButtons; // TODO: include footer as well?

          for (var viewType in this.viewSpecs) {
            viewTypes.push(viewType);
          }

          for (i = 0; i < viewTypes.length; i++) {
            spec = this.viewSpecs[viewTypes[i]];

            if (spec) {
              if (spec.singleUnit === unit) {
                return spec;
              }
            }
          }
        }; // Current Date
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.getInitialDate = function () {
          var defaultDateInput = this.opt('defaultDate'); // compute the initial ambig-timezone date

          if (defaultDateInput != null) {
            return this.dateEnv.createMarker(defaultDateInput);
          } else {
            return this.getNow(); // getNow already returns unzoned
          }
        };

        Calendar.prototype.prev = function () {
          this.unselect();
          this.dispatch({
            type: 'PREV'
          });
        };

        Calendar.prototype.next = function () {
          this.unselect();
          this.dispatch({
            type: 'NEXT'
          });
        };

        Calendar.prototype.prevYear = function () {
          this.unselect();
          this.dispatch({
            type: 'SET_DATE',
            dateMarker: this.dateEnv.addYears(this.state.currentDate, -1)
          });
        };

        Calendar.prototype.nextYear = function () {
          this.unselect();
          this.dispatch({
            type: 'SET_DATE',
            dateMarker: this.dateEnv.addYears(this.state.currentDate, 1)
          });
        };

        Calendar.prototype.today = function () {
          this.unselect();
          this.dispatch({
            type: 'SET_DATE',
            dateMarker: this.getNow()
          });
        };

        Calendar.prototype.gotoDate = function (zonedDateInput) {
          this.unselect();
          this.dispatch({
            type: 'SET_DATE',
            dateMarker: this.dateEnv.createMarker(zonedDateInput)
          });
        };

        Calendar.prototype.incrementDate = function (deltaInput) {
          var delta = createDuration(deltaInput);

          if (delta) {
            // else, warn about invalid input?
            this.unselect();
            this.dispatch({
              type: 'SET_DATE',
              dateMarker: this.dateEnv.add(this.state.currentDate, delta)
            });
          }
        }; // for external API


        Calendar.prototype.getDate = function () {
          return this.dateEnv.toDate(this.state.currentDate);
        }; // Date Formatting Utils
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.formatDate = function (d, formatter) {
          var dateEnv = this.dateEnv;
          return dateEnv.format(dateEnv.createMarker(d), createFormatter(formatter));
        }; // `settings` is for formatter AND isEndExclusive


        Calendar.prototype.formatRange = function (d0, d1, settings) {
          var dateEnv = this.dateEnv;
          return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings, this.opt('defaultRangeSeparator')), settings);
        };

        Calendar.prototype.formatIso = function (d, omitTime) {
          var dateEnv = this.dateEnv;
          return dateEnv.formatIso(dateEnv.createMarker(d), {
            omitTime: omitTime
          });
        }; // Sizing
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.windowResize = function (ev) {
          if (!this.isHandlingWindowResize && this.component && // why?
          ev.target === window // not a jqui resize event
          ) {
              this.isHandlingWindowResize = true;
              this.updateSize();
              this.publiclyTrigger('windowResize', [this.view]);
              this.isHandlingWindowResize = false;
            }
        };

        Calendar.prototype.updateSize = function () {
          if (this.component) {
            // when?
            this.component.updateSize(true);
          }
        }; // Component Registration
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.registerInteractiveComponent = function (component, settingsInput) {
          var settings = parseInteractionSettings(component, settingsInput);
          var DEFAULT_INTERACTIONS = [EventClicking, EventHovering];
          var interactionClasses = DEFAULT_INTERACTIONS.concat(this.pluginSystem.hooks.componentInteractions);
          var interactions = interactionClasses.map(function (interactionClass) {
            return new interactionClass(settings);
          });
          this.interactionsStore[component.uid] = interactions;
          interactionSettingsStore[component.uid] = settings;
        };

        Calendar.prototype.unregisterInteractiveComponent = function (component) {
          for (var _i = 0, _a = this.interactionsStore[component.uid]; _i < _a.length; _i++) {
            var listener = _a[_i];
            listener.destroy();
          }

          delete this.interactionsStore[component.uid];
          delete interactionSettingsStore[component.uid];
        }; // Date Selection / Event Selection / DayClick
        // -----------------------------------------------------------------------------------------------------------------
        // this public method receives start/end dates in any format, with any timezone
        // NOTE: args were changed from v3


        Calendar.prototype.select = function (dateOrObj, endDate) {
          var selectionInput;

          if (endDate == null) {
            if (dateOrObj.start != null) {
              selectionInput = dateOrObj;
            } else {
              selectionInput = {
                start: dateOrObj,
                end: null
              };
            }
          } else {
            selectionInput = {
              start: dateOrObj,
              end: endDate
            };
          }

          var selection = parseDateSpan(selectionInput, this.dateEnv, createDuration({
            days: 1
          }) // TODO: cache this?
          );

          if (selection) {
            // throw parse error otherwise?
            this.dispatch({
              type: 'SELECT_DATES',
              selection: selection
            });
            this.triggerDateSelect(selection);
          }
        }; // public method


        Calendar.prototype.unselect = function (pev) {
          if (this.state.dateSelection) {
            this.dispatch({
              type: 'UNSELECT_DATES'
            });
            this.triggerDateUnselect(pev);
          }
        };

        Calendar.prototype.triggerDateSelect = function (selection, pev) {
          var arg = this.buildDateSpanApi(selection);
          arg.jsEvent = pev ? pev.origEvent : null;
          arg.view = this.view;
          this.publiclyTrigger('select', [arg]);
        };

        Calendar.prototype.triggerDateUnselect = function (pev) {
          this.publiclyTrigger('unselect', [{
            jsEvent: pev ? pev.origEvent : null,
            view: this.view
          }]);
        }; // TODO: receive pev?


        Calendar.prototype.triggerDateClick = function (dateSpan, dayEl, view, ev) {
          var arg = this.buildDatePointApi(dateSpan);
          arg.dayEl = dayEl;
          arg.jsEvent = ev;
          arg.view = view;
          this.publiclyTrigger('dateClick', [arg]);
        };

        Calendar.prototype.buildDatePointApi = function (dateSpan) {
          var props = {};

          for (var _i = 0, _a = this.pluginSystem.hooks.datePointTransforms; _i < _a.length; _i++) {
            var transform = _a[_i];

            _assign(props, transform(dateSpan, this));
          }

          _assign(props, buildDatePointApi(dateSpan, this.dateEnv));

          return props;
        };

        Calendar.prototype.buildDateSpanApi = function (dateSpan) {
          var props = {};

          for (var _i = 0, _a = this.pluginSystem.hooks.dateSpanTransforms; _i < _a.length; _i++) {
            var transform = _a[_i];

            _assign(props, transform(dateSpan, this));
          }

          _assign(props, buildDateSpanApi(dateSpan, this.dateEnv));

          return props;
        }; // Date Utils
        // -----------------------------------------------------------------------------------------------------------------
        // Returns a DateMarker for the current date, as defined by the client's computer or from the `now` option


        Calendar.prototype.getNow = function () {
          var now = this.opt('now');

          if (typeof now === 'function') {
            now = now();
          }

          if (now == null) {
            return this.dateEnv.createNowMarker();
          }

          return this.dateEnv.createMarker(now);
        }; // Event-Date Utilities
        // -----------------------------------------------------------------------------------------------------------------
        // Given an event's allDay status and start date, return what its fallback end date should be.
        // TODO: rename to computeDefaultEventEnd


        Calendar.prototype.getDefaultEventEnd = function (allDay, marker) {
          var end = marker;

          if (allDay) {
            end = startOfDay(end);
            end = this.dateEnv.add(end, this.defaultAllDayEventDuration);
          } else {
            end = this.dateEnv.add(end, this.defaultTimedEventDuration);
          }

          return end;
        }; // Public Events API
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.addEvent = function (eventInput, sourceInput) {
          if (eventInput instanceof EventApi) {
            var def = eventInput._def;
            var instance = eventInput._instance; // not already present? don't want to add an old snapshot

            if (!this.state.eventStore.defs[def.defId]) {
              this.dispatch({
                type: 'ADD_EVENTS',
                eventStore: eventTupleToStore({
                  def: def,
                  instance: instance
                }) // TODO: better util for two args?

              });
            }

            return eventInput;
          }

          var sourceId;

          if (sourceInput instanceof EventSourceApi) {
            sourceId = sourceInput.internalEventSource.sourceId;
          } else if (sourceInput != null) {
            var sourceApi = this.getEventSourceById(sourceInput); // TODO: use an internal function

            if (!sourceApi) {
              console.warn('Could not find an event source with ID "' + sourceInput + '"'); // TODO: test

              return null;
            } else {
              sourceId = sourceApi.internalEventSource.sourceId;
            }
          }

          var tuple = parseEvent(eventInput, sourceId, this);

          if (tuple) {
            this.dispatch({
              type: 'ADD_EVENTS',
              eventStore: eventTupleToStore(tuple)
            });
            return new EventApi(this, tuple.def, tuple.def.recurringDef ? null : tuple.instance);
          }

          return null;
        }; // TODO: optimize


        Calendar.prototype.getEventById = function (id) {
          var _a = this.state.eventStore,
              defs = _a.defs,
              instances = _a.instances;
          id = String(id);

          for (var defId in defs) {
            var def = defs[defId];

            if (def.publicId === id) {
              if (def.recurringDef) {
                return new EventApi(this, def, null);
              } else {
                for (var instanceId in instances) {
                  var instance = instances[instanceId];

                  if (instance.defId === def.defId) {
                    return new EventApi(this, def, instance);
                  }
                }
              }
            }
          }

          return null;
        };

        Calendar.prototype.getEvents = function () {
          var _a = this.state.eventStore,
              defs = _a.defs,
              instances = _a.instances;
          var eventApis = [];

          for (var id in instances) {
            var instance = instances[id];
            var def = defs[instance.defId];
            eventApis.push(new EventApi(this, def, instance));
          }

          return eventApis;
        };

        Calendar.prototype.removeAllEvents = function () {
          this.dispatch({
            type: 'REMOVE_ALL_EVENTS'
          });
        };

        Calendar.prototype.rerenderEvents = function () {
          this.dispatch({
            type: 'RESET_EVENTS'
          });
        }; // Public Event Sources API
        // -----------------------------------------------------------------------------------------------------------------


        Calendar.prototype.getEventSources = function () {
          var sourceHash = this.state.eventSources;
          var sourceApis = [];

          for (var internalId in sourceHash) {
            sourceApis.push(new EventSourceApi(this, sourceHash[internalId]));
          }

          return sourceApis;
        };

        Calendar.prototype.getEventSourceById = function (id) {
          var sourceHash = this.state.eventSources;
          id = String(id);

          for (var sourceId in sourceHash) {
            if (sourceHash[sourceId].publicId === id) {
              return new EventSourceApi(this, sourceHash[sourceId]);
            }
          }

          return null;
        };

        Calendar.prototype.addEventSource = function (sourceInput) {
          if (sourceInput instanceof EventSourceApi) {
            // not already present? don't want to add an old snapshot
            if (!this.state.eventSources[sourceInput.internalEventSource.sourceId]) {
              this.dispatch({
                type: 'ADD_EVENT_SOURCES',
                sources: [sourceInput.internalEventSource]
              });
            }

            return sourceInput;
          }

          var eventSource = parseEventSource(sourceInput, this);

          if (eventSource) {
            // TODO: error otherwise?
            this.dispatch({
              type: 'ADD_EVENT_SOURCES',
              sources: [eventSource]
            });
            return new EventSourceApi(this, eventSource);
          }

          return null;
        };

        Calendar.prototype.removeAllEventSources = function () {
          this.dispatch({
            type: 'REMOVE_ALL_EVENT_SOURCES'
          });
        };

        Calendar.prototype.refetchEvents = function () {
          this.dispatch({
            type: 'FETCH_EVENT_SOURCES'
          });
        };

        return Calendar;
      }();

      EmitterMixin.mixInto(Calendar); // for memoizers
      // -----------------------------------------------------------------------------------------------------------------

      function buildDateEnv(locale, timeZone, namedTimeZoneImpl, firstDay, weekNumberCalculation, weekLabel, cmdFormatter) {
        return new DateEnv({
          calendarSystem: 'gregory',
          timeZone: timeZone,
          namedTimeZoneImpl: namedTimeZoneImpl,
          locale: locale,
          weekNumberCalculation: weekNumberCalculation,
          firstDay: firstDay,
          weekLabel: weekLabel,
          cmdFormatter: cmdFormatter
        });
      }

      function buildTheme(calendarOptions) {
        var themeClass = this.pluginSystem.hooks.themeClasses[calendarOptions.themeSystem] || StandardTheme;
        return new themeClass(calendarOptions);
      }

      function buildDelayedRerender(wait) {
        var func = this.tryRerender.bind(this);

        if (wait != null) {
          func = debounce(func, wait);
        }

        return func;
      }

      function buildEventUiBySource(eventSources) {
        return mapHash(eventSources, function (eventSource) {
          return eventSource.ui;
        });
      }

      function buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {
        var eventUiBases = {
          '': eventUiSingleBase
        };

        for (var defId in eventDefs) {
          var def = eventDefs[defId];

          if (def.sourceId && eventUiBySource[def.sourceId]) {
            eventUiBases[defId] = eventUiBySource[def.sourceId];
          }
        }

        return eventUiBases;
      }

      var View =
      /** @class */
      function (_super) {
        __extends(View, _super);

        function View(context, viewSpec, dateProfileGenerator, parentEl) {
          var _this = _super.call(this, context, createElement('div', {
            className: 'fc-view fc-' + viewSpec.type + '-view'
          }), true // isView (HACK)
          ) || this;

          _this.renderDatesMem = memoizeRendering(_this.renderDatesWrap, _this.unrenderDatesWrap);
          _this.renderBusinessHoursMem = memoizeRendering(_this.renderBusinessHours, _this.unrenderBusinessHours, [_this.renderDatesMem]);
          _this.renderDateSelectionMem = memoizeRendering(_this.renderDateSelectionWrap, _this.unrenderDateSelectionWrap, [_this.renderDatesMem]);
          _this.renderEventsMem = memoizeRendering(_this.renderEvents, _this.unrenderEvents, [_this.renderDatesMem]);
          _this.renderEventSelectionMem = memoizeRendering(_this.renderEventSelectionWrap, _this.unrenderEventSelectionWrap, [_this.renderEventsMem]);
          _this.renderEventDragMem = memoizeRendering(_this.renderEventDragWrap, _this.unrenderEventDragWrap, [_this.renderDatesMem]);
          _this.renderEventResizeMem = memoizeRendering(_this.renderEventResizeWrap, _this.unrenderEventResizeWrap, [_this.renderDatesMem]);
          _this.viewSpec = viewSpec;
          _this.dateProfileGenerator = dateProfileGenerator;
          _this.type = viewSpec.type;
          _this.eventOrderSpecs = parseFieldSpecs(_this.opt('eventOrder'));
          _this.nextDayThreshold = createDuration(_this.opt('nextDayThreshold'));
          parentEl.appendChild(_this.el);

          _this.initialize();

          return _this;
        }

        View.prototype.initialize = function () {};

        Object.defineProperty(View.prototype, "activeStart", {
          // Date Setting/Unsetting
          // -----------------------------------------------------------------------------------------------------------------
          get: function get() {
            return this.dateEnv.toDate(this.props.dateProfile.activeRange.start);
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(View.prototype, "activeEnd", {
          get: function get() {
            return this.dateEnv.toDate(this.props.dateProfile.activeRange.end);
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(View.prototype, "currentStart", {
          get: function get() {
            return this.dateEnv.toDate(this.props.dateProfile.currentRange.start);
          },
          enumerable: true,
          configurable: true
        });
        Object.defineProperty(View.prototype, "currentEnd", {
          get: function get() {
            return this.dateEnv.toDate(this.props.dateProfile.currentRange.end);
          },
          enumerable: true,
          configurable: true
        }); // General Rendering
        // -----------------------------------------------------------------------------------------------------------------

        View.prototype.render = function (props) {
          this.renderDatesMem(props.dateProfile);
          this.renderBusinessHoursMem(props.businessHours);
          this.renderDateSelectionMem(props.dateSelection);
          this.renderEventsMem(props.eventStore);
          this.renderEventSelectionMem(props.eventSelection);
          this.renderEventDragMem(props.eventDrag);
          this.renderEventResizeMem(props.eventResize);
        };

        View.prototype.destroy = function () {
          _super.prototype.destroy.call(this);

          this.renderDatesMem.unrender(); // should unrender everything else
        }; // Sizing
        // -----------------------------------------------------------------------------------------------------------------


        View.prototype.updateSize = function (isResize, viewHeight, isAuto) {
          var calendar = this.calendar;

          if (isResize || calendar.isViewUpdated || calendar.isDatesUpdated || calendar.isEventsUpdated) {
            // sort of the catch-all sizing
            // anything that might cause dimension changes
            this.updateBaseSize(isResize, viewHeight, isAuto);
          }
        };

        View.prototype.updateBaseSize = function (isResize, viewHeight, isAuto) {}; // Date Rendering
        // -----------------------------------------------------------------------------------------------------------------


        View.prototype.renderDatesWrap = function (dateProfile) {
          this.renderDates(dateProfile);
          this.addScroll({
            isDateInit: true
          });
          this.startNowIndicator(dateProfile); // shouldn't render yet because updateSize will be called soon
        };

        View.prototype.unrenderDatesWrap = function () {
          this.stopNowIndicator();
          this.unrenderDates();
        };

        View.prototype.renderDates = function (dateProfile) {};

        View.prototype.unrenderDates = function () {}; // Business Hours
        // -----------------------------------------------------------------------------------------------------------------


        View.prototype.renderBusinessHours = function (businessHours) {};

        View.prototype.unrenderBusinessHours = function () {}; // Date Selection
        // -----------------------------------------------------------------------------------------------------------------


        View.prototype.renderDateSelectionWrap = function (selection) {
          if (selection) {
            this.renderDateSelection(selection);
          }
        };

        View.prototype.unrenderDateSelectionWrap = function (selection) {
          if (selection) {
            this.unrenderDateSelection(selection);
          }
        };

        View.prototype.renderDateSelection = function (selection) {};

        View.prototype.unrenderDateSelection = function (selection) {}; // Event Rendering
        // -----------------------------------------------------------------------------------------------------------------


        View.prototype.renderEvents = function (eventStore) {};

        View.prototype.unrenderEvents = function () {}; // util for subclasses


        View.prototype.sliceEvents = function (eventStore, allDay) {
          var props = this.props;
          return sliceEventStore(eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? this.nextDayThreshold : null).fg;
        }; // Event Selection
        // -----------------------------------------------------------------------------------------------------------------


        View.prototype.renderEventSelectionWrap = function (instanceId) {
          if (instanceId) {
            this.renderEventSelection(instanceId);
          }
        };

        View.prototype.unrenderEventSelectionWrap = function (instanceId) {
          if (instanceId) {
            this.unrenderEventSelection(instanceId);
          }
        };

        View.prototype.renderEventSelection = function (instanceId) {};

        View.prototype.unrenderEventSelection = function (instanceId) {}; // Event Drag
        // -----------------------------------------------------------------------------------------------------------------


        View.prototype.renderEventDragWrap = function (state) {
          if (state) {
            this.renderEventDrag(state);
          }
        };

        View.prototype.unrenderEventDragWrap = function (state) {
          if (state) {
            this.unrenderEventDrag(state);
          }
        };

        View.prototype.renderEventDrag = function (state) {};

        View.prototype.unrenderEventDrag = function (state) {}; // Event Resize
        // -----------------------------------------------------------------------------------------------------------------


        View.prototype.renderEventResizeWrap = function (state) {
          if (state) {
            this.renderEventResize(state);
          }
        };

        View.prototype.unrenderEventResizeWrap = function (state) {
          if (state) {
            this.unrenderEventResize(state);
          }
        };

        View.prototype.renderEventResize = function (state) {};

        View.prototype.unrenderEventResize = function (state) {};
        /* Now Indicator
        ------------------------------------------------------------------------------------------------------------------*/
        // Immediately render the current time indicator and begins re-rendering it at an interval,
        // which is defined by this.getNowIndicatorUnit().
        // TODO: somehow do this for the current whole day's background too


        View.prototype.startNowIndicator = function (dateProfile) {
          var _this = this;

          var dateEnv = this.dateEnv;
          var unit;
          var update;
          var delay; // ms wait value

          if (this.opt('nowIndicator')) {
            unit = this.getNowIndicatorUnit(dateProfile);

            if (unit) {
              update = this.updateNowIndicator.bind(this);
              this.initialNowDate = this.calendar.getNow();
              this.initialNowQueriedMs = new Date().valueOf(); // wait until the beginning of the next interval

              delay = dateEnv.add(dateEnv.startOf(this.initialNowDate, unit), createDuration(1, unit)).valueOf() - this.initialNowDate.valueOf(); // TODO: maybe always use setTimeout, waiting until start of next unit

              this.nowIndicatorTimeoutID = setTimeout(function () {
                _this.nowIndicatorTimeoutID = null;
                update();

                if (unit === 'second') {
                  delay = 1000; // every second
                } else {
                  delay = 1000 * 60; // otherwise, every minute
                }

                _this.nowIndicatorIntervalID = setInterval(update, delay); // update every interval
              }, delay);
            } // rendering will be initiated in updateSize

          }
        }; // rerenders the now indicator, computing the new current time from the amount of time that has passed
        // since the initial getNow call.


        View.prototype.updateNowIndicator = function () {
          if (this.props.dateProfile && // a way to determine if dates were rendered yet
          this.initialNowDate // activated before?
          ) {
              this.unrenderNowIndicator(); // won't unrender if unnecessary

              this.renderNowIndicator(addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs));
              this.isNowIndicatorRendered = true;
            }
        }; // Immediately unrenders the view's current time indicator and stops any re-rendering timers.
        // Won't cause side effects if indicator isn't rendered.


        View.prototype.stopNowIndicator = function () {
          if (this.isNowIndicatorRendered) {
            if (this.nowIndicatorTimeoutID) {
              clearTimeout(this.nowIndicatorTimeoutID);
              this.nowIndicatorTimeoutID = null;
            }

            if (this.nowIndicatorIntervalID) {
              clearInterval(this.nowIndicatorIntervalID);
              this.nowIndicatorIntervalID = null;
            }

            this.unrenderNowIndicator();
            this.isNowIndicatorRendered = false;
          }
        };

        View.prototype.getNowIndicatorUnit = function (dateProfile) {// subclasses should implement
        }; // Renders a current time indicator at the given datetime


        View.prototype.renderNowIndicator = function (date) {// SUBCLASSES MUST PASS TO CHILDREN!
        }; // Undoes the rendering actions from renderNowIndicator


        View.prototype.unrenderNowIndicator = function () {// SUBCLASSES MUST PASS TO CHILDREN!
        };
        /* Scroller
        ------------------------------------------------------------------------------------------------------------------*/


        View.prototype.addScroll = function (scroll) {
          var queuedScroll = this.queuedScroll || (this.queuedScroll = {});

          _assign(queuedScroll, scroll);
        };

        View.prototype.popScroll = function (isResize) {
          this.applyQueuedScroll(isResize);
          this.queuedScroll = null;
        };

        View.prototype.applyQueuedScroll = function (isResize) {
          this.applyScroll(this.queuedScroll || {}, isResize);
        };

        View.prototype.queryScroll = function () {
          var scroll = {};

          if (this.props.dateProfile) {
            // dates rendered yet?
            _assign(scroll, this.queryDateScroll());
          }

          return scroll;
        };

        View.prototype.applyScroll = function (scroll, isResize) {
          if (scroll.isDateInit) {
            delete scroll.isDateInit;

            if (this.props.dateProfile) {
              // dates rendered yet?
              _assign(scroll, this.computeInitialDateScroll());
            }
          }

          if (this.props.dateProfile) {
            // dates rendered yet?
            this.applyDateScroll(scroll);
          }
        };

        View.prototype.computeInitialDateScroll = function () {
          return {}; // subclasses must implement
        };

        View.prototype.queryDateScroll = function () {
          return {}; // subclasses must implement
        };

        View.prototype.applyDateScroll = function (scroll) {// subclasses must implement
        };

        return View;
      }(DateComponent);

      EmitterMixin.mixInto(View);
      View.prototype.usesMinMaxTime = false;
      View.prototype.dateProfileGeneratorClass = DateProfileGenerator;

      var FgEventRenderer =
      /** @class */
      function () {
        function FgEventRenderer(context) {
          this.segs = [];
          this.isSizeDirty = false;
          this.context = context;
        }

        FgEventRenderer.prototype.renderSegs = function (segs, mirrorInfo) {
          this.rangeUpdated(); // called too frequently :(
          // render an `.el` on each seg
          // returns a subset of the segs. segs that were actually rendered

          segs = this.renderSegEls(segs, mirrorInfo);
          this.segs = segs;
          this.attachSegs(segs, mirrorInfo);
          this.isSizeDirty = true;
          this.context.view.triggerRenderedSegs(this.segs, Boolean(mirrorInfo));
        };

        FgEventRenderer.prototype.unrender = function (_segs, mirrorInfo) {
          this.context.view.triggerWillRemoveSegs(this.segs, Boolean(mirrorInfo));
          this.detachSegs(this.segs);
          this.segs = [];
        }; // Updates values that rely on options and also relate to range


        FgEventRenderer.prototype.rangeUpdated = function () {
          var options = this.context.options;
          var displayEventTime;
          var displayEventEnd;
          this.eventTimeFormat = createFormatter(options.eventTimeFormat || this.computeEventTimeFormat(), options.defaultRangeSeparator);
          displayEventTime = options.displayEventTime;

          if (displayEventTime == null) {
            displayEventTime = this.computeDisplayEventTime(); // might be based off of range
          }

          displayEventEnd = options.displayEventEnd;

          if (displayEventEnd == null) {
            displayEventEnd = this.computeDisplayEventEnd(); // might be based off of range
          }

          this.displayEventTime = displayEventTime;
          this.displayEventEnd = displayEventEnd;
        }; // Renders and assigns an `el` property for each foreground event segment.
        // Only returns segments that successfully rendered.


        FgEventRenderer.prototype.renderSegEls = function (segs, mirrorInfo) {
          var html = '';
          var i;

          if (segs.length) {
            // don't build an empty html string
            // build a large concatenation of event segment HTML
            for (i = 0; i < segs.length; i++) {
              html += this.renderSegHtml(segs[i], mirrorInfo);
            } // Grab individual elements from the combined HTML string. Use each as the default rendering.
            // Then, compute the 'el' for each segment. An el might be null if the eventRender callback returned false.


            htmlToElements(html).forEach(function (el, i) {
              var seg = segs[i];

              if (el) {
                seg.el = el;
              }
            });
            segs = filterSegsViaEls(this.context.view, segs, Boolean(mirrorInfo));
          }

          return segs;
        }; // Generic utility for generating the HTML classNames for an event segment's element


        FgEventRenderer.prototype.getSegClasses = function (seg, isDraggable, isResizable, mirrorInfo) {
          var classes = ['fc-event', seg.isStart ? 'fc-start' : 'fc-not-start', seg.isEnd ? 'fc-end' : 'fc-not-end'].concat(seg.eventRange.ui.classNames);

          if (isDraggable) {
            classes.push('fc-draggable');
          }

          if (isResizable) {
            classes.push('fc-resizable');
          }

          if (mirrorInfo) {
            classes.push('fc-mirror');

            if (mirrorInfo.isDragging) {
              classes.push('fc-dragging');
            }

            if (mirrorInfo.isResizing) {
              classes.push('fc-resizing');
            }
          }

          return classes;
        }; // Compute the text that should be displayed on an event's element.
        // `range` can be the Event object itself, or something range-like, with at least a `start`.
        // If event times are disabled, or the event has no time, will return a blank string.
        // If not specified, formatter will default to the eventTimeFormat setting,
        // and displayEnd will default to the displayEventEnd setting.


        FgEventRenderer.prototype.getTimeText = function (eventRange, formatter, displayEnd) {
          var def = eventRange.def,
              instance = eventRange.instance;
          return this._getTimeText(instance.range.start, def.hasEnd ? instance.range.end : null, def.allDay, formatter, displayEnd, instance.forcedStartTzo, instance.forcedEndTzo);
        };

        FgEventRenderer.prototype._getTimeText = function (start, end, allDay, formatter, displayEnd, forcedStartTzo, forcedEndTzo) {
          var dateEnv = this.context.dateEnv;

          if (formatter == null) {
            formatter = this.eventTimeFormat;
          }

          if (displayEnd == null) {
            displayEnd = this.displayEventEnd;
          }

          if (this.displayEventTime && !allDay) {
            if (displayEnd && end) {
              return dateEnv.formatRange(start, end, formatter, {
                forcedStartTzo: forcedStartTzo,
                forcedEndTzo: forcedEndTzo
              });
            } else {
              return dateEnv.format(start, formatter, {
                forcedTzo: forcedStartTzo
              });
            }
          }

          return '';
        };

        FgEventRenderer.prototype.computeEventTimeFormat = function () {
          return {
            hour: 'numeric',
            minute: '2-digit',
            omitZeroMinute: true
          };
        };

        FgEventRenderer.prototype.computeDisplayEventTime = function () {
          return true;
        };

        FgEventRenderer.prototype.computeDisplayEventEnd = function () {
          return true;
        }; // Utility for generating event skin-related CSS properties


        FgEventRenderer.prototype.getSkinCss = function (ui) {
          return {
            'background-color': ui.backgroundColor,
            'border-color': ui.borderColor,
            color: ui.textColor
          };
        };

        FgEventRenderer.prototype.sortEventSegs = function (segs) {
          var specs = this.context.view.eventOrderSpecs;
          var objs = segs.map(buildSegCompareObj);
          objs.sort(function (obj0, obj1) {
            return compareByFieldSpecs(obj0, obj1, specs);
          });
          return objs.map(function (c) {
            return c._seg;
          });
        };

        FgEventRenderer.prototype.computeSizes = function (force) {
          if (force || this.isSizeDirty) {
            this.computeSegSizes(this.segs);
          }
        };

        FgEventRenderer.prototype.assignSizes = function (force) {
          if (force || this.isSizeDirty) {
            this.assignSegSizes(this.segs);
            this.isSizeDirty = false;
          }
        };

        FgEventRenderer.prototype.computeSegSizes = function (segs) {};

        FgEventRenderer.prototype.assignSegSizes = function (segs) {}; // Manipulation on rendered segs


        FgEventRenderer.prototype.hideByHash = function (hash) {
          if (hash) {
            for (var _i = 0, _a = this.segs; _i < _a.length; _i++) {
              var seg = _a[_i];

              if (hash[seg.eventRange.instance.instanceId]) {
                seg.el.style.visibility = 'hidden';
              }
            }
          }
        };

        FgEventRenderer.prototype.showByHash = function (hash) {
          if (hash) {
            for (var _i = 0, _a = this.segs; _i < _a.length; _i++) {
              var seg = _a[_i];

              if (hash[seg.eventRange.instance.instanceId]) {
                seg.el.style.visibility = '';
              }
            }
          }
        };

        FgEventRenderer.prototype.selectByInstanceId = function (instanceId) {
          if (instanceId) {
            for (var _i = 0, _a = this.segs; _i < _a.length; _i++) {
              var seg = _a[_i];
              var eventInstance = seg.eventRange.instance;

              if (eventInstance && eventInstance.instanceId === instanceId && seg.el // necessary?
              ) {
                  seg.el.classList.add('fc-selected');
                }
            }
          }
        };

        FgEventRenderer.prototype.unselectByInstanceId = function (instanceId) {
          if (instanceId) {
            for (var _i = 0, _a = this.segs; _i < _a.length; _i++) {
              var seg = _a[_i];

              if (seg.el) {
                // necessary?
                seg.el.classList.remove('fc-selected');
              }
            }
          }
        };

        return FgEventRenderer;
      }(); // returns a object with all primitive props that can be compared


      function buildSegCompareObj(seg) {
        var eventDef = seg.eventRange.def;
        var range = seg.eventRange.instance.range;
        var start = range.start ? range.start.valueOf() : 0; // TODO: better support for open-range events

        var end = range.end ? range.end.valueOf() : 0; // "

        return _assign({}, eventDef.extendedProps, eventDef, {
          id: eventDef.publicId,
          start: start,
          end: end,
          duration: end - start,
          allDay: Number(eventDef.allDay),
          _seg: seg // for later retrieval

        });
      }

      var FillRenderer =
      /** @class */
      function () {
        function FillRenderer(context) {
          this.fillSegTag = 'div';
          this.dirtySizeFlags = {};
          this.context = context;
          this.containerElsByType = {};
          this.segsByType = {};
        }

        FillRenderer.prototype.getSegsByType = function (type) {
          return this.segsByType[type] || [];
        };

        FillRenderer.prototype.renderSegs = function (type, segs) {
          var _a;

          var renderedSegs = this.renderSegEls(type, segs); // assignes `.el` to each seg. returns successfully rendered segs

          var containerEls = this.attachSegs(type, renderedSegs);

          if (containerEls) {
            (_a = this.containerElsByType[type] || (this.containerElsByType[type] = [])).push.apply(_a, containerEls);
          }

          this.segsByType[type] = renderedSegs;

          if (type === 'bgEvent') {
            this.context.view.triggerRenderedSegs(renderedSegs, false); // isMirror=false
          }

          this.dirtySizeFlags[type] = true;
        }; // Unrenders a specific type of fill that is currently rendered on the grid


        FillRenderer.prototype.unrender = function (type) {
          var segs = this.segsByType[type];

          if (segs) {
            if (type === 'bgEvent') {
              this.context.view.triggerWillRemoveSegs(segs, false); // isMirror=false
            }

            this.detachSegs(type, segs);
          }
        }; // Renders and assigns an `el` property for each fill segment. Generic enough to work with different types.
        // Only returns segments that successfully rendered.


        FillRenderer.prototype.renderSegEls = function (type, segs) {
          var _this = this;

          var html = '';
          var i;

          if (segs.length) {
            // build a large concatenation of segment HTML
            for (i = 0; i < segs.length; i++) {
              html += this.renderSegHtml(type, segs[i]);
            } // Grab individual elements from the combined HTML string. Use each as the default rendering.
            // Then, compute the 'el' for each segment.


            htmlToElements(html).forEach(function (el, i) {
              var seg = segs[i];

              if (el) {
                seg.el = el;
              }
            });

            if (type === 'bgEvent') {
              segs = filterSegsViaEls(this.context.view, segs, false // isMirror. background events can never be mirror elements
              );
            } // correct element type? (would be bad if a non-TD were inserted into a table for example)


            segs = segs.filter(function (seg) {
              return elementMatches(seg.el, _this.fillSegTag);
            });
          }

          return segs;
        }; // Builds the HTML needed for one fill segment. Generic enough to work with different types.


        FillRenderer.prototype.renderSegHtml = function (type, seg) {
          var css = null;
          var classNames = [];

          if (type !== 'highlight' && type !== 'businessHours') {
            css = {
              'background-color': seg.eventRange.ui.backgroundColor
            };
          }

          if (type !== 'highlight') {
            classNames = classNames.concat(seg.eventRange.ui.classNames);
          }

          if (type === 'businessHours') {
            classNames.push('fc-bgevent');
          } else {
            classNames.push('fc-' + type.toLowerCase());
          }

          return '<' + this.fillSegTag + (classNames.length ? ' class="' + classNames.join(' ') + '"' : '') + (css ? ' style="' + cssToStr(css) + '"' : '') + '></' + this.fillSegTag + '>';
        };

        FillRenderer.prototype.detachSegs = function (type, segs) {
          var containerEls = this.containerElsByType[type];

          if (containerEls) {
            containerEls.forEach(removeElement);
            delete this.containerElsByType[type];
          }
        };

        FillRenderer.prototype.computeSizes = function (force) {
          for (var type in this.segsByType) {
            if (force || this.dirtySizeFlags[type]) {
              this.computeSegSizes(this.segsByType[type]);
            }
          }
        };

        FillRenderer.prototype.assignSizes = function (force) {
          for (var type in this.segsByType) {
            if (force || this.dirtySizeFlags[type]) {
              this.assignSegSizes(this.segsByType[type]);
            }
          }

          this.dirtySizeFlags = {};
        };

        FillRenderer.prototype.computeSegSizes = function (segs) {};

        FillRenderer.prototype.assignSegSizes = function (segs) {};

        return FillRenderer;
      }();

      var NamedTimeZoneImpl =
      /** @class */
      function () {
        function NamedTimeZoneImpl(timeZoneName) {
          this.timeZoneName = timeZoneName;
        }

        return NamedTimeZoneImpl;
      }();
      /*
      An abstraction for a dragging interaction originating on an event.
      Does higher-level things than PointerDragger, such as possibly:
      - a "mirror" that moves with the pointer
      - a minimum number of pixels or other criteria for a true drag to begin
       subclasses must emit:
      - pointerdown
      - dragstart
      - dragmove
      - pointerup
      - dragend
      */


      var ElementDragging =
      /** @class */
      function () {
        function ElementDragging(el) {
          this.emitter = new EmitterMixin();
        }

        ElementDragging.prototype.destroy = function () {};

        ElementDragging.prototype.setMirrorIsVisible = function (bool) {// optional if subclass doesn't want to support a mirror
        };

        ElementDragging.prototype.setMirrorNeedsRevert = function (bool) {// optional if subclass doesn't want to support a mirror
        };

        ElementDragging.prototype.setAutoScrollEnabled = function (bool) {// optional
        };

        return ElementDragging;
      }();

      function formatDate(dateInput, settings) {
        if (settings === void 0) {
          settings = {};
        }

        var dateEnv = buildDateEnv$1(settings);
        var formatter = createFormatter(settings);
        var dateMeta = dateEnv.createMarkerMeta(dateInput);

        if (!dateMeta) {
          // TODO: warning?
          return '';
        }

        return dateEnv.format(dateMeta.marker, formatter, {
          forcedTzo: dateMeta.forcedTzo
        });
      }

      function formatRange(startInput, endInput, settings // mixture of env and formatter settings
      ) {
        var dateEnv = buildDateEnv$1(typeof settings === 'object' && settings ? settings : {}); // pass in if non-null object

        var formatter = createFormatter(settings, globalDefaults.defaultRangeSeparator);
        var startMeta = dateEnv.createMarkerMeta(startInput);
        var endMeta = dateEnv.createMarkerMeta(endInput);

        if (!startMeta || !endMeta) {
          // TODO: warning?
          return '';
        }

        return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {
          forcedStartTzo: startMeta.forcedTzo,
          forcedEndTzo: endMeta.forcedTzo,
          isEndExclusive: settings.isEndExclusive
        });
      } // TODO: more DRY and optimized


      function buildDateEnv$1(settings) {
        var locale = buildLocale(settings.locale || 'en', parseRawLocales([]).map); // TODO: don't hardcode 'en' everywhere
        // ensure required settings

        settings = _assign({
          timeZone: globalDefaults.timeZone,
          calendarSystem: 'gregory'
        }, settings, {
          locale: locale
        });
        return new DateEnv(settings);
      }

      var DRAG_META_PROPS = {
        startTime: createDuration,
        duration: createDuration,
        create: Boolean,
        sourceId: String
      };
      var DRAG_META_DEFAULTS = {
        create: true
      };

      function parseDragMeta(raw) {
        var leftoverProps = {};
        var refined = refineProps(raw, DRAG_META_PROPS, DRAG_META_DEFAULTS, leftoverProps);
        refined.leftoverProps = leftoverProps;
        return refined;
      } // Computes a default column header formatting string if `colFormat` is not explicitly defined


      function computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {
        // if more than one week row, or if there are a lot of columns with not much space,
        // put just the day numbers will be in each cell
        if (!datesRepDistinctDays || dayCnt > 10) {
          return {
            weekday: 'short'
          }; // "Sat"
        } else if (dayCnt > 1) {
          return {
            weekday: 'short',
            month: 'numeric',
            day: 'numeric',
            omitCommas: true
          }; // "Sat 11/12"
        } else {
          return {
            weekday: 'long'
          }; // "Saturday"
        }
      }

      function renderDateCell(dateMarker, dateProfile, datesRepDistinctDays, colCnt, colHeadFormat, context, colspan, otherAttrs) {
        var view = context.view,
            dateEnv = context.dateEnv,
            theme = context.theme,
            options = context.options;
        var isDateValid = rangeContainsMarker(dateProfile.activeRange, dateMarker); // TODO: called too frequently. cache somehow.

        var classNames = ['fc-day-header', theme.getClass('widgetHeader')];
        var innerHtml;

        if (typeof options.columnHeaderHtml === 'function') {
          innerHtml = options.columnHeaderHtml(dateEnv.toDate(dateMarker));
        } else if (typeof options.columnHeaderText === 'function') {
          innerHtml = htmlEscape(options.columnHeaderText(dateEnv.toDate(dateMarker)));
        } else {
          innerHtml = htmlEscape(dateEnv.format(dateMarker, colHeadFormat));
        } // if only one row of days, the classNames on the header can represent the specific days beneath


        if (datesRepDistinctDays) {
          classNames = classNames.concat( // includes the day-of-week class
          // noThemeHighlight=true (don't highlight the header)
          getDayClasses(dateMarker, dateProfile, context, true));
        } else {
          classNames.push('fc-' + DAY_IDS[dateMarker.getUTCDay()]); // only add the day-of-week class
        }

        return '' + '<th class="' + classNames.join(' ') + '"' + (isDateValid && datesRepDistinctDays ? ' data-date="' + dateEnv.formatIso(dateMarker, {
          omitTime: true
        }) + '"' : '') + (colspan > 1 ? ' colspan="' + colspan + '"' : '') + (otherAttrs ? ' ' + otherAttrs : '') + '>' + (isDateValid ? // don't make a link if the heading could represent multiple days, or if there's only one day (forceOff)
        buildGotoAnchorHtml(view, {
          date: dateMarker,
          forceOff: !datesRepDistinctDays || colCnt === 1
        }, innerHtml) : // if not valid, display text, but no link
        innerHtml) + '</th>';
      }

      var DayHeader =
      /** @class */
      function (_super) {
        __extends(DayHeader, _super);

        function DayHeader(context, parentEl) {
          var _this = _super.call(this, context) || this;

          parentEl.innerHTML = ''; // because might be nbsp

          parentEl.appendChild(_this.el = htmlToElement('<div class="fc-row ' + _this.theme.getClass('headerRow') + '">' + '<table class="' + _this.theme.getClass('tableGrid') + '">' + '<thead></thead>' + '</table>' + '</div>'));
          _this.thead = _this.el.querySelector('thead');
          return _this;
        }

        DayHeader.prototype.destroy = function () {
          removeElement(this.el);
        };

        DayHeader.prototype.render = function (props) {
          var dates = props.dates,
              datesRepDistinctDays = props.datesRepDistinctDays;
          var parts = [];

          if (props.renderIntroHtml) {
            parts.push(props.renderIntroHtml());
          }

          var colHeadFormat = createFormatter(this.opt('columnHeaderFormat') || computeFallbackHeaderFormat(datesRepDistinctDays, dates.length));

          for (var _i = 0, dates_1 = dates; _i < dates_1.length; _i++) {
            var date = dates_1[_i];
            parts.push(renderDateCell(date, props.dateProfile, datesRepDistinctDays, dates.length, colHeadFormat, this.context));
          }

          if (this.isRtl) {
            parts.reverse();
          }

          this.thead.innerHTML = '<tr>' + parts.join('') + '</tr>';
        };

        return DayHeader;
      }(Component);

      var DaySeries =
      /** @class */
      function () {
        function DaySeries(range, dateProfileGenerator) {
          var date = range.start;
          var end = range.end;
          var indices = [];
          var dates = [];
          var dayIndex = -1;

          while (date < end) {
            // loop each day from start to end
            if (dateProfileGenerator.isHiddenDay(date)) {
              indices.push(dayIndex + 0.5); // mark that it's between indices
            } else {
              dayIndex++;
              indices.push(dayIndex);
              dates.push(date);
            }

            date = addDays(date, 1);
          }

          this.dates = dates;
          this.indices = indices;
          this.cnt = dates.length;
        }

        DaySeries.prototype.sliceRange = function (range) {
          var firstIndex = this.getDateDayIndex(range.start); // inclusive first index

          var lastIndex = this.getDateDayIndex(addDays(range.end, -1)); // inclusive last index

          var clippedFirstIndex = Math.max(0, firstIndex);
          var clippedLastIndex = Math.min(this.cnt - 1, lastIndex); // deal with in-between indices

          clippedFirstIndex = Math.ceil(clippedFirstIndex); // in-between starts round to next cell

          clippedLastIndex = Math.floor(clippedLastIndex); // in-between ends round to prev cell

          if (clippedFirstIndex <= clippedLastIndex) {
            return {
              firstIndex: clippedFirstIndex,
              lastIndex: clippedLastIndex,
              isStart: firstIndex === clippedFirstIndex,
              isEnd: lastIndex === clippedLastIndex
            };
          } else {
            return null;
          }
        }; // Given a date, returns its chronolocial cell-index from the first cell of the grid.
        // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.
        // If before the first offset, returns a negative number.
        // If after the last offset, returns an offset past the last cell offset.
        // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.


        DaySeries.prototype.getDateDayIndex = function (date) {
          var indices = this.indices;
          var dayOffset = Math.floor(diffDays(this.dates[0], date));

          if (dayOffset < 0) {
            return indices[0] - 1;
          } else if (dayOffset >= indices.length) {
            return indices[indices.length - 1] + 1;
          } else {
            return indices[dayOffset];
          }
        };

        return DaySeries;
      }();

      var DayTable =
      /** @class */
      function () {
        function DayTable(daySeries, breakOnWeeks) {
          var dates = daySeries.dates;
          var daysPerRow;
          var firstDay;
          var rowCnt;

          if (breakOnWeeks) {
            // count columns until the day-of-week repeats
            firstDay = dates[0].getUTCDay();

            for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow++) {
              if (dates[daysPerRow].getUTCDay() === firstDay) {
                break;
              }
            }

            rowCnt = Math.ceil(dates.length / daysPerRow);
          } else {
            rowCnt = 1;
            daysPerRow = dates.length;
          }

          this.rowCnt = rowCnt;
          this.colCnt = daysPerRow;
          this.daySeries = daySeries;
          this.cells = this.buildCells();
          this.headerDates = this.buildHeaderDates();
        }

        DayTable.prototype.buildCells = function () {
          var rows = [];

          for (var row = 0; row < this.rowCnt; row++) {
            var cells = [];

            for (var col = 0; col < this.colCnt; col++) {
              cells.push(this.buildCell(row, col));
            }

            rows.push(cells);
          }

          return rows;
        };

        DayTable.prototype.buildCell = function (row, col) {
          return {
            date: this.daySeries.dates[row * this.colCnt + col]
          };
        };

        DayTable.prototype.buildHeaderDates = function () {
          var dates = [];

          for (var col = 0; col < this.colCnt; col++) {
            dates.push(this.cells[0][col].date);
          }

          return dates;
        };

        DayTable.prototype.sliceRange = function (range) {
          var colCnt = this.colCnt;
          var seriesSeg = this.daySeries.sliceRange(range);
          var segs = [];

          if (seriesSeg) {
            var firstIndex = seriesSeg.firstIndex,
                lastIndex = seriesSeg.lastIndex;
            var index = firstIndex;

            while (index <= lastIndex) {
              var row = Math.floor(index / colCnt);
              var nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1);
              segs.push({
                row: row,
                firstCol: index % colCnt,
                lastCol: (nextIndex - 1) % colCnt,
                isStart: seriesSeg.isStart && index === firstIndex,
                isEnd: seriesSeg.isEnd && nextIndex - 1 === lastIndex
              });
              index = nextIndex;
            }
          }

          return segs;
        };

        return DayTable;
      }();

      var Slicer =
      /** @class */
      function () {
        function Slicer() {
          this.sliceBusinessHours = memoize(this._sliceBusinessHours);
          this.sliceDateSelection = memoize(this._sliceDateSpan);
          this.sliceEventStore = memoize(this._sliceEventStore);
          this.sliceEventDrag = memoize(this._sliceInteraction);
          this.sliceEventResize = memoize(this._sliceInteraction);
        }

        Slicer.prototype.sliceProps = function (props, dateProfile, nextDayThreshold, component) {
          var extraArgs = [];

          for (var _i = 4; _i < arguments.length; _i++) {
            extraArgs[_i - 4] = arguments[_i];
          }

          var eventUiBases = props.eventUiBases;
          var eventSegs = this.sliceEventStore.apply(this, [props.eventStore, eventUiBases, dateProfile, nextDayThreshold, component].concat(extraArgs));
          return {
            dateSelectionSegs: this.sliceDateSelection.apply(this, [props.dateSelection, eventUiBases, component].concat(extraArgs)),
            businessHourSegs: this.sliceBusinessHours.apply(this, [props.businessHours, dateProfile, nextDayThreshold, component].concat(extraArgs)),
            fgEventSegs: eventSegs.fg,
            bgEventSegs: eventSegs.bg,
            eventDrag: this.sliceEventDrag.apply(this, [props.eventDrag, eventUiBases, dateProfile, nextDayThreshold, component].concat(extraArgs)),
            eventResize: this.sliceEventResize.apply(this, [props.eventResize, eventUiBases, dateProfile, nextDayThreshold, component].concat(extraArgs)),
            eventSelection: props.eventSelection
          }; // TODO: give interactionSegs?
        };

        Slicer.prototype.sliceNowDate = function ( // does not memoize
        date, component) {
          var extraArgs = [];

          for (var _i = 2; _i < arguments.length; _i++) {
            extraArgs[_i - 2] = arguments[_i];
          }

          return this._sliceDateSpan.apply(this, [{
            range: {
              start: date,
              end: addMs(date, 1)
            },
            allDay: false
          }, {}, component].concat(extraArgs));
        };

        Slicer.prototype._sliceBusinessHours = function (businessHours, dateProfile, nextDayThreshold, component) {
          var extraArgs = [];

          for (var _i = 4; _i < arguments.length; _i++) {
            extraArgs[_i - 4] = arguments[_i];
          }

          if (!businessHours) {
            return [];
          }

          return this._sliceEventStore.apply(this, [expandRecurring(businessHours, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), component.calendar), {}, dateProfile, nextDayThreshold, component].concat(extraArgs)).bg;
        };

        Slicer.prototype._sliceEventStore = function (eventStore, eventUiBases, dateProfile, nextDayThreshold, component) {
          var extraArgs = [];

          for (var _i = 5; _i < arguments.length; _i++) {
            extraArgs[_i - 5] = arguments[_i];
          }

          if (eventStore) {
            var rangeRes = sliceEventStore(eventStore, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);
            return {
              bg: this.sliceEventRanges(rangeRes.bg, component, extraArgs),
              fg: this.sliceEventRanges(rangeRes.fg, component, extraArgs)
            };
          } else {
            return {
              bg: [],
              fg: []
            };
          }
        };

        Slicer.prototype._sliceInteraction = function (interaction, eventUiBases, dateProfile, nextDayThreshold, component) {
          var extraArgs = [];

          for (var _i = 5; _i < arguments.length; _i++) {
            extraArgs[_i - 5] = arguments[_i];
          }

          if (!interaction) {
            return null;
          }

          var rangeRes = sliceEventStore(interaction.mutatedEvents, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);
          return {
            segs: this.sliceEventRanges(rangeRes.fg, component, extraArgs),
            affectedInstances: interaction.affectedEvents.instances,
            isEvent: interaction.isEvent,
            sourceSeg: interaction.origSeg
          };
        };

        Slicer.prototype._sliceDateSpan = function (dateSpan, eventUiBases, component) {
          var extraArgs = [];

          for (var _i = 3; _i < arguments.length; _i++) {
            extraArgs[_i - 3] = arguments[_i];
          }

          if (!dateSpan) {
            return [];
          }

          var eventRange = fabricateEventRange(dateSpan, eventUiBases, component.calendar);
          var segs = this.sliceRange.apply(this, [dateSpan.range].concat(extraArgs));

          for (var _a = 0, segs_1 = segs; _a < segs_1.length; _a++) {
            var seg = segs_1[_a];
            seg.component = component;
            seg.eventRange = eventRange;
          }

          return segs;
        };
        /*
        "complete" seg means it has component and eventRange
        */


        Slicer.prototype.sliceEventRanges = function (eventRanges, component, // TODO: kill
        extraArgs) {
          var segs = [];

          for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {
            var eventRange = eventRanges_1[_i];
            segs.push.apply(segs, this.sliceEventRange(eventRange, component, extraArgs));
          }

          return segs;
        };
        /*
        "complete" seg means it has component and eventRange
        */


        Slicer.prototype.sliceEventRange = function (eventRange, component, // TODO: kill
        extraArgs) {
          var segs = this.sliceRange.apply(this, [eventRange.range].concat(extraArgs));

          for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
            var seg = segs_2[_i];
            seg.component = component;
            seg.eventRange = eventRange;
            seg.isStart = eventRange.isStart && seg.isStart;
            seg.isEnd = eventRange.isEnd && seg.isEnd;
          }

          return segs;
        };

        return Slicer;
      }();
      /*
      for incorporating minTime/maxTime if appropriate
      TODO: should be part of DateProfile!
      TimelineDateProfile already does this btw
      */


      function computeActiveRange(dateProfile, isComponentAllDay) {
        var range = dateProfile.activeRange;

        if (isComponentAllDay) {
          return range;
        }

        return {
          start: addMs(range.start, dateProfile.minTime.milliseconds),
          end: addMs(range.end, dateProfile.maxTime.milliseconds - 864e5) // 864e5 = ms in a day

        };
      } // exports
      // --------------------------------------------------------------------------------------------------


      var version = '4.0.2';
      exports.Calendar = Calendar;
      exports.Component = Component;
      exports.DateComponent = DateComponent;
      exports.DateEnv = DateEnv;
      exports.DateProfileGenerator = DateProfileGenerator;
      exports.DayHeader = DayHeader;
      exports.DaySeries = DaySeries;
      exports.DayTable = DayTable;
      exports.ElementDragging = ElementDragging;
      exports.ElementScrollController = ElementScrollController;
      exports.EmitterMixin = EmitterMixin;
      exports.EventApi = EventApi;
      exports.FgEventRenderer = FgEventRenderer;
      exports.FillRenderer = FillRenderer;
      exports.Interaction = Interaction;
      exports.Mixin = Mixin;
      exports.NamedTimeZoneImpl = NamedTimeZoneImpl;
      exports.PositionCache = PositionCache;
      exports.ScrollComponent = ScrollComponent;
      exports.ScrollController = ScrollController;
      exports.Slicer = Slicer;
      exports.Splitter = Splitter;
      exports.Theme = Theme;
      exports.View = View;
      exports.WindowScrollController = WindowScrollController;
      exports.addDays = addDays;
      exports.addDurations = addDurations;
      exports.addMs = addMs;
      exports.addWeeks = addWeeks;
      exports.allowContextMenu = allowContextMenu;
      exports.allowSelection = allowSelection;
      exports.appendToElement = appendToElement;
      exports.applyAll = applyAll;
      exports.applyMutationToEventStore = applyMutationToEventStore;
      exports.applyStyle = applyStyle;
      exports.applyStyleProp = applyStyleProp;
      exports.asRoughMinutes = asRoughMinutes;
      exports.asRoughMs = asRoughMs;
      exports.asRoughSeconds = asRoughSeconds;
      exports.buildGotoAnchorHtml = buildGotoAnchorHtml;
      exports.buildSegCompareObj = buildSegCompareObj;
      exports.capitaliseFirstLetter = capitaliseFirstLetter;
      exports.combineEventUis = combineEventUis;
      exports.compareByFieldSpec = compareByFieldSpec;
      exports.compareByFieldSpecs = compareByFieldSpecs;
      exports.compareNumbers = compareNumbers;
      exports.compensateScroll = compensateScroll;
      exports.computeClippingRect = computeClippingRect;
      exports.computeEdges = computeEdges;
      exports.computeFallbackHeaderFormat = computeFallbackHeaderFormat;
      exports.computeHeightAndMargins = computeHeightAndMargins;
      exports.computeInnerRect = computeInnerRect;
      exports.computeRect = computeRect;
      exports.computeVisibleDayRange = computeVisibleDayRange;
      exports.config = config;
      exports.constrainPoint = constrainPoint;
      exports.createDuration = createDuration;
      exports.createElement = createElement;
      exports.createEmptyEventStore = createEmptyEventStore;
      exports.createEventInstance = createEventInstance;
      exports.createFormatter = createFormatter;
      exports.createPlugin = createPlugin;
      exports.cssToStr = cssToStr;
      exports.debounce = debounce;
      exports.diffDates = diffDates;
      exports.diffDayAndTime = diffDayAndTime;
      exports.diffDays = diffDays;
      exports.diffPoints = diffPoints;
      exports.diffWeeks = diffWeeks;
      exports.diffWholeDays = diffWholeDays;
      exports.diffWholeWeeks = diffWholeWeeks;
      exports.disableCursor = disableCursor;
      exports.distributeHeight = distributeHeight;
      exports.elementClosest = elementClosest;
      exports.elementMatches = elementMatches;
      exports.enableCursor = enableCursor;
      exports.eventTupleToStore = eventTupleToStore;
      exports.filterEventStoreDefs = filterEventStoreDefs;
      exports.filterHash = filterHash;
      exports.findChildren = findChildren;
      exports.findElements = findElements;
      exports.flexibleCompare = flexibleCompare;
      exports.forceClassName = forceClassName;
      exports.formatDate = formatDate;
      exports.formatIsoTimeString = formatIsoTimeString;
      exports.formatRange = formatRange;
      exports.freezeRaw = freezeRaw;
      exports.getAllDayHtml = getAllDayHtml;
      exports.getClippingParents = getClippingParents;
      exports.getDayClasses = getDayClasses;
      exports.getElSeg = getElSeg;
      exports.getRectCenter = getRectCenter;
      exports.getRelevantEvents = getRelevantEvents;
      exports.globalDefaults = globalDefaults;
      exports.greatestDurationDenominator = greatestDurationDenominator;
      exports.hasBgRendering = hasBgRendering;
      exports.htmlEscape = htmlEscape;
      exports.htmlToElement = htmlToElement;
      exports.insertAfterElement = insertAfterElement;
      exports.interactionSettingsStore = interactionSettingsStore;
      exports.interactionSettingsToStore = interactionSettingsToStore;
      exports.intersectRanges = intersectRanges;
      exports.intersectRects = intersectRects;
      exports.isArraysEqual = isArraysEqual;
      exports.isDateSpansEqual = isDateSpansEqual;
      exports.isInt = isInt;
      exports.isInteractionValid = isInteractionValid;
      exports.isMultiDayRange = isMultiDayRange;
      exports.isObjectsSimilar = isObjectsSimilar;
      exports.isPropsValid = isPropsValid;
      exports.isSingleDay = isSingleDay;
      exports.isValidDate = isValidDate;
      exports.isValuesSimilar = isValuesSimilar;
      exports.listenBySelector = listenBySelector;
      exports.mapHash = mapHash;
      exports.matchCellWidths = matchCellWidths;
      exports.memoize = memoize;
      exports.memoizeOutput = memoizeOutput;
      exports.memoizeRendering = memoizeRendering;
      exports.mergeEventStores = mergeEventStores;
      exports.multiplyDuration = multiplyDuration;
      exports.padStart = padStart;
      exports.parseBusinessHours = parseBusinessHours;
      exports.parseDragMeta = parseDragMeta;
      exports.parseEventDef = parseEventDef;
      exports.parseFieldSpecs = parseFieldSpecs;
      exports.parseMarker = parse;
      exports.pointInsideRect = pointInsideRect;
      exports.prependToElement = prependToElement;
      exports.preventContextMenu = preventContextMenu;
      exports.preventDefault = preventDefault;
      exports.preventSelection = preventSelection;
      exports.processScopedUiProps = processScopedUiProps;
      exports.rangeContainsMarker = rangeContainsMarker;
      exports.rangeContainsRange = rangeContainsRange;
      exports.rangesEqual = rangesEqual;
      exports.rangesIntersect = rangesIntersect;
      exports.refineProps = refineProps;
      exports.removeElement = removeElement;
      exports.removeExact = removeExact;
      exports.renderDateCell = renderDateCell;
      exports.requestJson = requestJson;
      exports.sliceEventStore = sliceEventStore;
      exports.startOfDay = startOfDay;
      exports.subtractInnerElHeight = subtractInnerElHeight;
      exports.translateRect = translateRect;
      exports.uncompensateScroll = uncompensateScroll;
      exports.undistributeHeight = undistributeHeight;
      exports.unpromisify = unpromisify;
      exports.version = version;
      exports.whenTransitionDone = whenTransitionDone;
      exports.wholeDivideDurations = wholeDivideDurations;
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
    });
    /***/

  },

  /***/
  "./node_modules/primeng/accordion/primeng-accordion.ngfactory.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/primeng/accordion/primeng-accordion.ngfactory.js ***!
    \***********************************************************************/

  /*! exports provided: AccordionModuleNgFactory, RenderType_AccordionTab, View_AccordionTab_0, View_AccordionTab_Host_0, AccordionTabNgFactory, RenderType_Accordion, View_Accordion_0, View_Accordion_Host_0, AccordionNgFactory */

  /***/
  function node_modulesPrimengAccordionPrimengAccordionNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccordionModuleNgFactory", function () {
      return AccordionModuleNgFactory;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_AccordionTab", function () {
      return RenderType_AccordionTab;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_AccordionTab_0", function () {
      return View_AccordionTab_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_AccordionTab_Host_0", function () {
      return View_AccordionTab_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccordionTabNgFactory", function () {
      return AccordionTabNgFactory;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_Accordion", function () {
      return RenderType_Accordion;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_Accordion_0", function () {
      return View_Accordion_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_Accordion_Host_0", function () {
      return View_Accordion_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccordionNgFactory", function () {
      return AccordionNgFactory;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var primeng_accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! primeng/accordion */
    "./node_modules/primeng/fesm2015/primeng-accordion.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var AccordionModuleNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcmf"](primeng_accordion__WEBPACK_IMPORTED_MODULE_1__["AccordionModule"], [], function (_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmod"]([_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵCodegenComponentFactoryResolver"], [[8, []], [3, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleRef"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgLocalization"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgLocaleLocalization"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_api__WEBPACK_IMPORTED_MODULE_3__["SharedModule"], primeng_api__WEBPACK_IMPORTED_MODULE_3__["SharedModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_accordion__WEBPACK_IMPORTED_MODULE_1__["AccordionModule"], primeng_accordion__WEBPACK_IMPORTED_MODULE_1__["AccordionModule"], [])]);
    });

    var styles_AccordionTab = [];

    var RenderType_AccordionTab = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({
      encapsulation: 2,
      styles: styles_AccordionTab,
      data: {
        "animation": [{
          type: 7,
          name: "tabContent",
          definitions: [{
            type: 0,
            name: "hidden",
            styles: {
              type: 6,
              styles: {
                height: "0"
              },
              offset: null
            },
            options: undefined
          }, {
            type: 0,
            name: "void",
            styles: {
              type: 6,
              styles: {
                height: "{{height}}"
              },
              offset: null
            },
            options: {
              params: {
                height: "0"
              }
            }
          }, {
            type: 0,
            name: "visible",
            styles: {
              type: 6,
              styles: {
                height: "*"
              },
              offset: null
            },
            options: undefined
          }, {
            type: 1,
            expr: "visible <=> hidden",
            animation: {
              type: 4,
              styles: null,
              timings: "{{transitionParams}}"
            },
            options: null
          }, {
            type: 1,
            expr: "void => hidden",
            animation: {
              type: 4,
              styles: null,
              timings: "{{transitionParams}}"
            },
            options: null
          }, {
            type: 1,
            expr: "void => visible",
            animation: {
              type: 4,
              styles: null,
              timings: "{{transitionParams}}"
            },
            options: null
          }],
          options: {}
        }]
      }
    });

    function View_AccordionTab_1(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "span", [["class", "ui-accordion-header-text"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](1, null, [" ", " "]))], null, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.header;

        _ck(_v, 1, 0, currVal_0);
      });
    }

    function View_AccordionTab_2(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵncd"](null, 0), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](0, null, null, 0))], null, null);
    }

    function View_AccordionTab_4(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 0, null, null, null, null, null, null, null))], null, null);
    }

    function View_AccordionTab_3(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AccordionTab_4)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]], {
        ngTemplateOutlet: [0, "ngTemplateOutlet"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](0, null, null, 0))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.contentTemplate;

        _ck(_v, 2, 0, currVal_0);
      }, null);
    }

    function View_AccordionTab_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 9, "div", [["class", "ui-accordion-header ui-state-default ui-corner-all"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        klass: [0, "klass"],
        ngClass: [1, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](2, {
        "ui-state-active": 0,
        "ui-state-disabled": 1
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 6, "a", [["role", "tab"]], [[1, "tabindex", 0], [1, "id", 0], [1, "aria-controls", 0], [1, "aria-expanded", 0]], [[null, "click"], [null, "keydown"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.toggle($event) !== false;
          ad = pd_0 && ad;
        }

        if ("keydown" === en) {
          var pd_1 = _co.onKeydown($event) !== false;
          ad = pd_1 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](4, 0, null, null, 1, "span", [["class", "ui-accordion-toggle-icon"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](5, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        klass: [0, "klass"],
        ngClass: [1, "ngClass"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AccordionTab_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AccordionTab_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](9, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](10, 0, null, null, 10, "div", [["class", "ui-accordion-content-wrapper"], ["role", "region"]], [[1, "id", 0], [24, "@tabContent", 0], [1, "aria-hidden", 0], [1, "aria-labelledby", 0]], [[null, "@tabContent.done"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("@tabContent.done" === en) {
          var pd_0 = _co.onToggleDone($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](11, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        klass: [0, "klass"],
        ngClass: [1, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](12, {
        "ui-accordion-content-wrapper-overflown": 0
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](13, {
        transitionParams: 0,
        height: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](14, {
        value: 0,
        params: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](15, {
        transitionParams: 0,
        height: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](16, {
        value: 0,
        params: 1
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](17, 0, null, null, 3, "div", [["class", "ui-accordion-content ui-widget-content"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵncd"](null, 1), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AccordionTab_3)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](20, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = "ui-accordion-header ui-state-default ui-corner-all";

        var currVal_1 = _ck(_v, 2, 0, _co.selected, _co.disabled);

        _ck(_v, 1, 0, currVal_0, currVal_1);

        var currVal_6 = "ui-accordion-toggle-icon";
        var currVal_7 = _co.selected ? _co.accordion.collapseIcon : _co.accordion.expandIcon;

        _ck(_v, 5, 0, currVal_6, currVal_7);

        var currVal_8 = !_co.hasHeaderFacet;

        _ck(_v, 7, 0, currVal_8);

        var currVal_9 = _co.hasHeaderFacet;

        _ck(_v, 9, 0, currVal_9);

        var currVal_14 = "ui-accordion-content-wrapper";

        var currVal_15 = _ck(_v, 12, 0, !_co.selected || _co.animating);

        _ck(_v, 11, 0, currVal_14, currVal_15);

        var currVal_16 = _co.contentTemplate && (_co.cache ? _co.loaded : _co.selected);

        _ck(_v, 20, 0, currVal_16);
      }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_2 = _co.disabled ? 0 - 1 : 0;
        var currVal_3 = _co.id;
        var currVal_4 = _co.id + "-content";
        var currVal_5 = _co.selected;

        _ck(_v, 3, 0, currVal_2, currVal_3, currVal_4, currVal_5);

        var currVal_10 = _co.id + "-content";
        var currVal_11 = _co.selected ? _ck(_v, 14, 0, "visible", _ck(_v, 13, 0, _co.animating ? _co.transitionOptions : "0ms", "*")) : _ck(_v, 16, 0, "hidden", _ck(_v, 15, 0, _co.transitionOptions, "0"));
        var currVal_12 = !_co.selected;
        var currVal_13 = _co.id;

        _ck(_v, 10, 0, currVal_10, currVal_11, currVal_12, currVal_13);
      });
    }

    function View_AccordionTab_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 3, "p-accordionTab", [], null, null, null, View_AccordionTab_0, RenderType_AccordionTab)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 1228800, null, 2, primeng_accordion__WEBPACK_IMPORTED_MODULE_1__["AccordionTab"], [primeng_accordion__WEBPACK_IMPORTED_MODULE_1__["Accordion"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]], null, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](603979776, 1, {
        headerFacet: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](603979776, 2, {
        templates: 1
      })], null, null);
    }

    var AccordionTabNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("p-accordionTab", primeng_accordion__WEBPACK_IMPORTED_MODULE_1__["AccordionTab"], View_AccordionTab_Host_0, {
      header: "header",
      disabled: "disabled",
      cache: "cache",
      transitionOptions: "transitionOptions",
      selected: "selected"
    }, {
      selectedChange: "selectedChange"
    }, ["p-header", "*"]);

    var styles_Accordion = [];

    var RenderType_Accordion = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({
      encapsulation: 2,
      styles: styles_Accordion,
      data: {}
    });

    function View_Accordion_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 3, "div", [["role", "tablist"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        klass: [0, "klass"],
        ngClass: [1, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgStyle"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        ngStyle: [0, "ngStyle"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵncd"](null, 0)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.styleClass;
        var currVal_1 = "ui-accordion ui-widget ui-helper-reset";

        _ck(_v, 1, 0, currVal_0, currVal_1);

        var currVal_2 = _co.style;

        _ck(_v, 2, 0, currVal_2);
      }, null);
    }

    function View_Accordion_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, "p-accordion", [], null, null, null, View_Accordion_0, RenderType_Accordion)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 1228800, null, 1, primeng_accordion__WEBPACK_IMPORTED_MODULE_1__["Accordion"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]], null, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](603979776, 1, {
        tabList: 1
      })], null, null);
    }

    var AccordionNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("p-accordion", primeng_accordion__WEBPACK_IMPORTED_MODULE_1__["Accordion"], View_Accordion_Host_0, {
      multiple: "multiple",
      style: "style",
      styleClass: "styleClass",
      expandIcon: "expandIcon",
      collapseIcon: "collapseIcon",
      activeIndex: "activeIndex"
    }, {
      onClose: "onClose",
      onOpen: "onOpen",
      activeIndexChange: "activeIndexChange"
    }, ["*"]);
    /***/

  },

  /***/
  "./node_modules/primeng/dynamicdialog/primeng-dynamicdialog.ngfactory.js":
  /*!*******************************************************************************!*\
    !*** ./node_modules/primeng/dynamicdialog/primeng-dynamicdialog.ngfactory.js ***!
    \*******************************************************************************/

  /*! exports provided: DynamicDialogModuleNgFactory, RenderType_DynamicDialogComponent, View_DynamicDialogComponent_0, View_DynamicDialogComponent_Host_0, DynamicDialogComponentNgFactory */

  /***/
  function node_modulesPrimengDynamicdialogPrimengDynamicdialogNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DynamicDialogModuleNgFactory", function () {
      return DynamicDialogModuleNgFactory;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_DynamicDialogComponent", function () {
      return RenderType_DynamicDialogComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_DynamicDialogComponent_0", function () {
      return View_DynamicDialogComponent_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_DynamicDialogComponent_Host_0", function () {
      return View_DynamicDialogComponent_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DynamicDialogComponentNgFactory", function () {
      return DynamicDialogComponentNgFactory;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! primeng/dynamicdialog */
    "./node_modules/primeng/fesm2015/primeng-dynamicdialog.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var DynamicDialogModuleNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcmf"](primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__["DynamicDialogModule"], [], function (_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmod"]([_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵCodegenComponentFactoryResolver"], [[8, [DynamicDialogComponentNgFactory]], [3, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleRef"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgLocalization"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgLocaleLocalization"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__["DynamicDialogModule"], primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__["DynamicDialogModule"], [])]);
    });

    var styles_DynamicDialogComponent = [];

    var RenderType_DynamicDialogComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({
      encapsulation: 2,
      styles: styles_DynamicDialogComponent,
      data: {
        "animation": [{
          type: 7,
          name: "animation",
          definitions: [{
            type: 1,
            expr: "void => visible",
            animation: [{
              type: 10,
              animation: {
                type: 8,
                animation: [{
                  type: 6,
                  styles: {
                    transform: "{{transform}}",
                    opacity: 0
                  },
                  offset: null
                }, {
                  type: 4,
                  styles: {
                    type: 6,
                    styles: {
                      transform: "none",
                      opacity: 1
                    },
                    offset: null
                  },
                  timings: "{{transition}}"
                }],
                options: null
              },
              options: null
            }],
            options: null
          }, {
            type: 1,
            expr: "visible => void",
            animation: [{
              type: 10,
              animation: {
                type: 8,
                animation: [{
                  type: 4,
                  styles: {
                    type: 6,
                    styles: {
                      transform: "{{transform}}",
                      opacity: 0
                    },
                    offset: null
                  },
                  timings: "{{transition}}"
                }],
                options: null
              },
              options: null
            }],
            options: null
          }],
          options: {}
        }]
      }
    });

    function View_DynamicDialogComponent_3(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, "a", [["role", "button"], ["tabindex", "0"]], null, [[null, "click"], [null, "keydown.enter"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.close() !== false;
          ad = pd_0 && ad;
        }

        if ("keydown.enter" === en) {
          var pd_1 = _co.close() !== false;
          ad = pd_1 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, null, null, 0, "span", [["class", "pi pi-times"]], null, null, null, null, null))], function (_ck, _v) {
        var currVal_0 = "ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all";

        _ck(_v, 1, 0, currVal_0);
      }, null);
    }

    function View_DynamicDialogComponent_2(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 5, "div", [["class", "ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "span", [["class", "ui-dialog-title"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](2, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 2, "div", [["class", "ui-dialog-titlebar-icons"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_DynamicDialogComponent_3)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](5, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_1 = _co.config.closable !== false;

        _ck(_v, 5, 0, currVal_1);
      }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.config.header;

        _ck(_v, 2, 0, currVal_0);
      });
    }

    function View_DynamicDialogComponent_4(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](0, null, null, 0))], null, null);
    }

    function View_DynamicDialogComponent_5(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "div", [["class", "ui-dialog-footer ui-widget-content"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](1, null, [" ", " "]))], null, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.config.footer;

        _ck(_v, 1, 0, currVal_0);
      });
    }

    function View_DynamicDialogComponent_1(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 13, "div", [["role", "dialog"]], [[24, "@animation", 0], [4, "width", null], [4, "height", null]], [[null, "@animation.start"], [null, "@animation.done"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("@animation.start" === en) {
          var pd_0 = _co.onAnimationStart($event) !== false;
          ad = pd_0 && ad;
        }

        if ("@animation.done" === en) {
          var pd_1 = _co.onAnimationEnd($event) !== false;
          ad = pd_1 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        klass: [0, "klass"],
        ngClass: [1, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](2, {
        "ui-dialog ui-dynamicdialog ui-widget ui-widget-content ui-corner-all ui-shadow": 0,
        "ui-dialog-rtl": 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](3, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgStyle"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        ngStyle: [0, "ngStyle"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](4, {
        transform: 0,
        transition: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](5, {
        value: 0,
        params: 1
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_DynamicDialogComponent_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 3, "div", [["class", "ui-dialog-content ui-widget-content"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](9, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgStyle"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        ngStyle: [0, "ngStyle"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_DynamicDialogComponent_4)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](11, 16384, [[1, 4]], 0, primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__["ɵa"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_DynamicDialogComponent_5)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](13, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_3 = _co.config.styleClass;

        var currVal_4 = _ck(_v, 2, 0, true, _co.config.rtl);

        _ck(_v, 1, 0, currVal_3, currVal_4);

        var currVal_5 = _co.config.style;

        _ck(_v, 3, 0, currVal_5);

        var currVal_6 = _co.config.showHeader === false ? false : true;

        _ck(_v, 7, 0, currVal_6);

        var currVal_7 = _co.config.contentStyle;

        _ck(_v, 9, 0, currVal_7);

        var currVal_8 = _co.config.footer;

        _ck(_v, 13, 0, currVal_8);
      }, function (_ck, _v) {
        var _co = _v.component;

        var currVal_0 = _ck(_v, 5, 0, "visible", _ck(_v, 4, 0, _co.transformOptions, _co.config.transitionOptions || "150ms cubic-bezier(0, 0, 0.2, 1)"));

        var currVal_1 = _co.config.width;
        var currVal_2 = _co.config.height;

        _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2);
      });
    }

    function View_DynamicDialogComponent_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](671088640, 1, {
        insertionPoint: 0
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](671088640, 2, {
        maskViewChild: 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, [[2, 0], ["mask", 1]], null, 2, "div", [["class", "ui-widget-overlay ui-dialog-mask ui-dialog-visible ui-dialog-mask-scrollblocker"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_DynamicDialogComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](4, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.visible;

        _ck(_v, 4, 0, currVal_0);
      }, null);
    }

    function View_DynamicDialogComponent_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "p-dynamicDialog", [], null, null, null, View_DynamicDialogComponent_0, RenderType_DynamicDialogComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 4374528, null, 0, primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__["DynamicDialogComponent"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__["DynamicDialogConfig"], primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__["DynamicDialogRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]], null, null)], null, null);
    }

    var DynamicDialogComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("p-dynamicDialog", primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_1__["DynamicDialogComponent"], View_DynamicDialogComponent_Host_0, {}, {}, []);
    /***/

  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-accordion.js":
  /*!************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-accordion.js ***!
    \************************************************************/

  /*! exports provided: Accordion, AccordionModule, AccordionTab */

  /***/
  function node_modulesPrimengFesm2015PrimengAccordionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Accordion", function () {
      return Accordion;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccordionModule", function () {
      return AccordionModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccordionTab", function () {
      return AccordionTab;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var __param = undefined && undefined.__param || function (paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    };

    var idx = 0;

    var AccordionTab =
    /*#__PURE__*/
    function () {
      function AccordionTab(accordion, changeDetector) {
        _classCallCheck(this, AccordionTab);

        this.changeDetector = changeDetector;
        this.cache = true;
        this.selectedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';
        this.id = "ui-accordiontab-".concat(idx++);
        this.accordion = accordion;
      }

      _createClass(AccordionTab, [{
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this25 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'content':
                _this25.contentTemplate = item.template;
                break;

              default:
                _this25.contentTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "toggle",
        value: function toggle(event) {
          if (this.disabled || this.animating) {
            return false;
          }

          this.animating = true;
          var index = this.findTabIndex();

          if (this.selected) {
            this.selected = false;
            this.accordion.onClose.emit({
              originalEvent: event,
              index: index
            });
          } else {
            if (!this.accordion.multiple) {
              for (var i = 0; i < this.accordion.tabs.length; i++) {
                this.accordion.tabs[i].selected = false;
                this.accordion.tabs[i].selectedChange.emit(false);
              }
            }

            this.selected = true;
            this.loaded = true;
            this.accordion.onOpen.emit({
              originalEvent: event,
              index: index
            });
          }

          this.selectedChange.emit(this.selected);
          this.accordion.updateActiveIndex();
          event.preventDefault();
        }
      }, {
        key: "findTabIndex",
        value: function findTabIndex() {
          var index = -1;

          for (var i = 0; i < this.accordion.tabs.length; i++) {
            if (this.accordion.tabs[i] == this) {
              index = i;
              break;
            }
          }

          return index;
        }
      }, {
        key: "onToggleDone",
        value: function onToggleDone(event) {
          this.animating = false;
        }
      }, {
        key: "onKeydown",
        value: function onKeydown(event) {
          if (event.which === 32 || event.which === 13) {
            this.toggle(event);
            event.preventDefault();
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.accordion.tabs.splice(this.findTabIndex(), 1);
        }
      }, {
        key: "selected",
        get: function get() {
          return this._selected;
        },
        set: function set(val) {
          this._selected = val;

          if (!this.loaded) {
            this.changeDetector.detectChanges();
          }
        }
      }, {
        key: "animating",
        get: function get() {
          return this._animating;
        },
        set: function set(val) {
          this._animating = val;

          if (!this.changeDetector.destroyed) {
            this.changeDetector.detectChanges();
          }
        }
      }, {
        key: "hasHeaderFacet",
        get: function get() {
          return this.headerFacet && this.headerFacet.length > 0;
        }
      }]);

      return AccordionTab;
    }();

    AccordionTab.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
          args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
            return Accordion;
          })]
        }]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AccordionTab.prototype, "header", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AccordionTab.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AccordionTab.prototype, "cache", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AccordionTab.prototype, "selectedChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AccordionTab.prototype, "transitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_3__["Header"])], AccordionTab.prototype, "headerFacet", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_3__["PrimeTemplate"])], AccordionTab.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AccordionTab.prototype, "selected", null);

    AccordionTab = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-accordionTab',
      template: "\n        <div class=\"ui-accordion-header ui-state-default ui-corner-all\" [ngClass]=\"{'ui-state-active': selected,'ui-state-disabled':disabled}\">\n            <a [attr.tabindex]=\"disabled ? -1 : 0\" [attr.id]=\"id\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"selected\" (click)=\"toggle($event)\" \n                (keydown)=\"onKeydown($event)\">\n                <span class=\"ui-accordion-toggle-icon\" [ngClass]=\"selected ? accordion.collapseIcon : accordion.expandIcon\"></span>\n                <span class=\"ui-accordion-header-text\" *ngIf=\"!hasHeaderFacet\">\n                    {{header}}\n                </span>\n                <ng-content select=\"p-header\" *ngIf=\"hasHeaderFacet\"></ng-content>\n            </a>\n        </div>\n        <div [attr.id]=\"id + '-content'\" class=\"ui-accordion-content-wrapper\" [@tabContent]=\"selected ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\" (@tabContent.done)=\"onToggleDone($event)\"\n            [ngClass]=\"{'ui-accordion-content-wrapper-overflown': !selected||animating}\" \n            role=\"region\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id\">\n            <div class=\"ui-accordion-content ui-widget-content\">\n                <ng-content></ng-content>\n                <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </ng-container>\n            </div>\n        </div>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('tabContent', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        height: '0'
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        height: '{{height}}'
      }), {
        params: {
          height: '0'
        }
      }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        height: '*'
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visible <=> hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transitionParams}}')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transitionParams}}')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transitionParams}}'))])],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    }), __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
      return Accordion;
    })))], AccordionTab);

    var Accordion =
    /*#__PURE__*/
    function () {
      function Accordion(el, changeDetector) {
        _classCallCheck(this, Accordion);

        this.el = el;
        this.changeDetector = changeDetector;
        this.onClose = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onOpen = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.expandIcon = 'pi pi-fw pi-chevron-right';
        this.collapseIcon = 'pi pi-fw pi-chevron-down';
        this.activeIndexChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.tabs = [];
      }

      _createClass(Accordion, [{
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this26 = this;

          this.initTabs();
          this.tabListSubscription = this.tabList.changes.subscribe(function (_) {
            _this26.initTabs();

            _this26.changeDetector.markForCheck();
          });
        }
      }, {
        key: "initTabs",
        value: function initTabs() {
          this.tabs = this.tabList.toArray();
          this.updateSelectionState();
        }
      }, {
        key: "getBlockableElement",
        value: function getBlockableElement() {
          return this.el.nativeElement.children[0];
        }
      }, {
        key: "updateSelectionState",
        value: function updateSelectionState() {
          if (this.tabs && this.tabs.length && this._activeIndex != null) {
            for (var i = 0; i < this.tabs.length; i++) {
              var selected = this.multiple ? this._activeIndex.includes(i) : i === this._activeIndex;
              var changed = selected !== this.tabs[i].selected;

              if (changed) {
                this.tabs[i].animating = true;
                this.tabs[i].selected = selected;
                this.tabs[i].selectedChange.emit(selected);
              }
            }
          }
        }
      }, {
        key: "updateActiveIndex",
        value: function updateActiveIndex() {
          var _this27 = this;

          var index = this.multiple ? [] : null;
          this.tabs.forEach(function (tab, i) {
            if (tab.selected) {
              if (_this27.multiple) {
                index.push(i);
              } else {
                index = i;
                return;
              }
            }
          });
          this.preventActiveIndexPropagation = true;
          this.activeIndexChange.emit(index);
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.tabListSubscription) {
            this.tabListSubscription.unsubscribe();
          }
        }
      }, {
        key: "activeIndex",
        get: function get() {
          return this._activeIndex;
        },
        set: function set(val) {
          this._activeIndex = val;

          if (this.preventActiveIndexPropagation) {
            this.preventActiveIndexPropagation = false;
            return;
          }

          this.updateSelectionState();
        }
      }]);

      return Accordion;
    }();

    Accordion.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Accordion.prototype, "multiple", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Accordion.prototype, "onClose", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Accordion.prototype, "onOpen", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Accordion.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Accordion.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Accordion.prototype, "expandIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Accordion.prototype, "collapseIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Accordion.prototype, "activeIndexChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(AccordionTab)], Accordion.prototype, "tabList", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Accordion.prototype, "activeIndex", null);

    Accordion = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-accordion',
      template: "\n        <div [ngClass]=\"'ui-accordion ui-widget ui-helper-reset'\" [ngStyle]=\"style\" [class]=\"styleClass\" role=\"tablist\">\n            <ng-content></ng-content>\n        </div>\n    "
    })], Accordion);

    var AccordionModule = function AccordionModule() {
      _classCallCheck(this, AccordionModule);
    };

    AccordionModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]],
      exports: [Accordion, AccordionTab, primeng_api__WEBPACK_IMPORTED_MODULE_3__["SharedModule"]],
      declarations: [Accordion, AccordionTab]
    })], AccordionModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-accordion.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-autocomplete.js":
  /*!***************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-autocomplete.js ***!
    \***************************************************************/

  /*! exports provided: AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule */

  /***/
  function node_modulesPrimengFesm2015PrimengAutocompleteJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AUTOCOMPLETE_VALUE_ACCESSOR", function () {
      return AUTOCOMPLETE_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AutoComplete", function () {
      return AutoComplete;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AutoCompleteModule", function () {
      return AutoCompleteModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var primeng_inputtext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/inputtext */
    "./node_modules/primeng/fesm2015/primeng-inputtext.js");
    /* harmony import */


    var primeng_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/button */
    "./node_modules/primeng/fesm2015/primeng-button.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var AUTOCOMPLETE_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_8__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
        return AutoComplete;
      }),
      multi: true
    };

    var AutoComplete =
    /*#__PURE__*/
    function () {
      function AutoComplete(el, renderer, cd, differs) {
        _classCallCheck(this, AutoComplete);

        this.el = el;
        this.renderer = renderer;
        this.cd = cd;
        this.differs = differs;
        this.minLength = 1;
        this.delay = 300;
        this.type = 'text';
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.dropdownIcon = "pi pi-caret-down";
        this.unique = true;
        this.completeOnFocus = false;
        this.completeMethod = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onUnselect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onDropdownClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onClear = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onKeyUp = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onHide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.scrollHeight = '200px';
        this.dropdownMode = 'blank';
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
        this.autocomplete = 'off';

        this.onModelChange = function () {};

        this.onModelTouched = function () {};

        this.overlayVisible = false;
        this.focus = false;
        this.inputFieldValue = null;
        this.differ = differs.find([]).create(null);
        this.listId = Object(primeng_utils__WEBPACK_IMPORTED_MODULE_7__["UniqueComponentId"])() + '_list';
      }

      _createClass(AutoComplete, [{
        key: "ngAfterViewChecked",
        value: function ngAfterViewChecked() {
          var _this28 = this;

          //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated
          if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {
            setTimeout(function () {
              if (_this28.overlay) {
                _this28.alignOverlay();
              }
            }, 1);
            this.suggestionsUpdated = false;
          }

          if (this.highlightOptionChanged) {
            setTimeout(function () {
              if (_this28.overlay) {
                var listItem = primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].findSingle(_this28.overlay, 'li.ui-state-highlight');

                if (listItem) {
                  primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].scrollInView(_this28.overlay, listItem);
                }
              }
            }, 1);
            this.highlightOptionChanged = false;
          }
        }
      }, {
        key: "handleSuggestionsChange",
        value: function handleSuggestionsChange() {
          if (this._suggestions != null && this.loading) {
            this.highlightOption = null;

            if (this._suggestions.length) {
              this.noResults = false;
              this.show();
              this.suggestionsUpdated = true;

              if (this.autoHighlight) {
                this.highlightOption = this._suggestions[0];
              }
            } else {
              this.noResults = true;

              if (this.emptyMessage) {
                this.show();
                this.suggestionsUpdated = true;
              } else {
                this.hide();
              }
            }

            this.loading = false;
          }
        }
      }, {
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this29 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'item':
                _this29.itemTemplate = item.template;
                break;

              case 'selectedItem':
                _this29.selectedItemTemplate = item.template;
                break;

              default:
                _this29.itemTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "writeValue",
        value: function writeValue(value) {
          this.value = value;
          this.filled = this.value && this.value != '';
          this.updateInputField();
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(val) {
          this.disabled = val;
        }
      }, {
        key: "onInput",
        value: function onInput(event) {
          var _this30 = this;

          // When an input element with a placeholder is clicked, the onInput event is invoked in IE.
          if (!this.inputKeyDown && primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].isIE()) {
            return;
          }

          if (this.timeout) {
            clearTimeout(this.timeout);
          }

          var value = event.target.value;

          if (!this.multiple && !this.forceSelection) {
            this.onModelChange(value);
          }

          if (value.length === 0 && !this.multiple) {
            this.hide();
            this.onClear.emit(event);
            this.onModelChange(value);
          }

          if (value.length >= this.minLength) {
            this.timeout = setTimeout(function () {
              _this30.search(event, value);
            }, this.delay);
          } else {
            this.suggestions = null;
            this.hide();
          }

          this.updateFilledState();
          this.inputKeyDown = false;
        }
      }, {
        key: "onInputClick",
        value: function onInputClick(event) {
          if (this.documentClickListener) {
            this.inputClick = true;
          }
        }
      }, {
        key: "search",
        value: function search(event, query) {
          //allow empty string but not undefined or null
          if (query === undefined || query === null) {
            return;
          }

          this.loading = true;
          this.completeMethod.emit({
            originalEvent: event,
            query: query
          });
        }
      }, {
        key: "selectItem",
        value: function selectItem(option) {
          var focus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

          if (this.forceSelectionUpdateModelTimeout) {
            clearTimeout(this.forceSelectionUpdateModelTimeout);
            this.forceSelectionUpdateModelTimeout = null;
          }

          if (this.multiple) {
            this.multiInputEL.nativeElement.value = '';
            this.value = this.value || [];

            if (!this.isSelected(option) || !this.unique) {
              this.value = [].concat(_toConsumableArray(this.value), [option]);
              this.onModelChange(this.value);
            }
          } else {
            this.inputEL.nativeElement.value = this.field ? primeng_utils__WEBPACK_IMPORTED_MODULE_7__["ObjectUtils"].resolveFieldData(option, this.field) || '' : option;
            this.value = option;
            this.onModelChange(this.value);
          }

          this.onSelect.emit(option);
          this.updateFilledState();

          if (focus) {
            this.itemClicked = true;
            this.focusInput();
          }
        }
      }, {
        key: "show",
        value: function show() {
          if (this.multiInputEL || this.inputEL) {
            var hasFocus = this.multiple ? document.activeElement == this.multiInputEL.nativeElement : document.activeElement == this.inputEL.nativeElement;

            if (!this.overlayVisible && hasFocus) {
              this.overlayVisible = true;
            }
          }
        }
      }, {
        key: "onOverlayAnimationStart",
        value: function onOverlayAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
              this.overlay = event.element;
              this.appendOverlay();

              if (this.autoZIndex) {
                this.overlay.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].zindex);
              }

              this.alignOverlay();
              this.bindDocumentClickListener();
              this.bindDocumentResizeListener();
              this.onShow.emit(event);
              break;

            case 'void':
              this.onOverlayHide();
              break;
          }
        }
      }, {
        key: "onOverlayAnimationDone",
        value: function onOverlayAnimationDone(event) {
          if (event.toState === 'void') {
            this._suggestions = null;
          }
        }
      }, {
        key: "appendOverlay",
        value: function appendOverlay() {
          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.overlay);else primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].appendChild(this.overlay, this.appendTo);
            this.overlay.style.minWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].getWidth(this.el.nativeElement.children[0]) + 'px';
          }
        }
      }, {
        key: "resolveFieldData",
        value: function resolveFieldData(value) {
          return this.field ? primeng_utils__WEBPACK_IMPORTED_MODULE_7__["ObjectUtils"].resolveFieldData(value, this.field) : value;
        }
      }, {
        key: "restoreOverlayAppend",
        value: function restoreOverlayAppend() {
          if (this.overlay && this.appendTo) {
            this.el.nativeElement.appendChild(this.overlay);
          }
        }
      }, {
        key: "alignOverlay",
        value: function alignOverlay() {
          if (this.appendTo) primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);else primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);
        }
      }, {
        key: "hide",
        value: function hide() {
          this.overlayVisible = false;
        }
      }, {
        key: "handleDropdownClick",
        value: function handleDropdownClick(event) {
          this.focusInput();
          var queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;
          if (this.dropdownMode === 'blank') this.search(event, '');else if (this.dropdownMode === 'current') this.search(event, queryValue);
          this.onDropdownClick.emit({
            originalEvent: event,
            query: queryValue
          });
        }
      }, {
        key: "focusInput",
        value: function focusInput() {
          if (this.multiple) this.multiInputEL.nativeElement.focus();else this.inputEL.nativeElement.focus();
        }
      }, {
        key: "removeItem",
        value: function removeItem(item) {
          var itemIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_6__["DomHandler"].index(item);
          var removedValue = this.value[itemIndex];
          this.value = this.value.filter(function (val, i) {
            return i != itemIndex;
          });
          this.onModelChange(this.value);
          this.updateFilledState();
          this.onUnselect.emit(removedValue);
        }
      }, {
        key: "onKeydown",
        value: function onKeydown(event) {
          if (this.overlayVisible) {
            var highlightItemIndex = this.findOptionIndex(this.highlightOption);

            switch (event.which) {
              //down
              case 40:
                if (highlightItemIndex != -1) {
                  var nextItemIndex = highlightItemIndex + 1;

                  if (nextItemIndex != this.suggestions.length) {
                    this.highlightOption = this.suggestions[nextItemIndex];
                    this.highlightOptionChanged = true;
                  }
                } else {
                  this.highlightOption = this.suggestions[0];
                }

                event.preventDefault();
                break;
              //up

              case 38:
                if (highlightItemIndex > 0) {
                  var prevItemIndex = highlightItemIndex - 1;
                  this.highlightOption = this.suggestions[prevItemIndex];
                  this.highlightOptionChanged = true;
                }

                event.preventDefault();
                break;
              //enter

              case 13:
                if (this.highlightOption) {
                  this.selectItem(this.highlightOption);
                  this.hide();
                }

                event.preventDefault();
                break;
              //escape

              case 27:
                this.hide();
                event.preventDefault();
                break;
              //tab

              case 9:
                if (this.highlightOption) {
                  this.selectItem(this.highlightOption);
                }

                this.hide();
                break;
            }
          } else {
            if (event.which === 40 && this.suggestions) {
              this.search(event, event.target.value);
            }
          }

          if (this.multiple) {
            switch (event.which) {
              //backspace
              case 8:
                if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {
                  this.value = _toConsumableArray(this.value);
                  var removedValue = this.value.pop();
                  this.onModelChange(this.value);
                  this.updateFilledState();
                  this.onUnselect.emit(removedValue);
                }

                break;
            }
          }

          this.inputKeyDown = true;
        }
      }, {
        key: "onKeyup",
        value: function onKeyup(event) {
          this.onKeyUp.emit(event);
        }
      }, {
        key: "onInputFocus",
        value: function onInputFocus(event) {
          if (!this.itemClicked && this.completeOnFocus) {
            var queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;
            this.search(event, queryValue);
          }

          this.focus = true;
          this.onFocus.emit(event);
          this.itemClicked = false;
        }
      }, {
        key: "onInputBlur",
        value: function onInputBlur(event) {
          this.focus = false;
          this.onModelTouched();
          this.onBlur.emit(event);
        }
      }, {
        key: "onInputChange",
        value: function onInputChange(event) {
          var _this31 = this;

          if (this.forceSelection) {
            var valid = false;
            var inputValue = event.target.value.trim();

            if (this.suggestions) {
              var _iterator4 = _createForOfIteratorHelper(this.suggestions),
                  _step4;

              try {
                var _loop = function _loop() {
                  var suggestion = _step4.value;
                  var itemValue = _this31.field ? primeng_utils__WEBPACK_IMPORTED_MODULE_7__["ObjectUtils"].resolveFieldData(suggestion, _this31.field) : suggestion;

                  if (itemValue && inputValue === itemValue.trim()) {
                    valid = true;
                    _this31.forceSelectionUpdateModelTimeout = setTimeout(function () {
                      _this31.selectItem(suggestion, false);
                    }, 250);
                    return "break";
                  }
                };

                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                  var _ret = _loop();

                  if (_ret === "break") break;
                }
              } catch (err) {
                _iterator4.e(err);
              } finally {
                _iterator4.f();
              }
            }

            if (!valid) {
              if (this.multiple) {
                this.multiInputEL.nativeElement.value = '';
              } else {
                this.value = null;
                this.inputEL.nativeElement.value = '';
              }

              this.onClear.emit(event);
              this.onModelChange(this.value);
            }
          }
        }
      }, {
        key: "onInputPaste",
        value: function onInputPaste(event) {
          this.onKeydown(event);
        }
      }, {
        key: "isSelected",
        value: function isSelected(val) {
          var selected = false;

          if (this.value && this.value.length) {
            for (var i = 0; i < this.value.length; i++) {
              if (primeng_utils__WEBPACK_IMPORTED_MODULE_7__["ObjectUtils"].equals(this.value[i], val, this.dataKey)) {
                selected = true;
                break;
              }
            }
          }

          return selected;
        }
      }, {
        key: "findOptionIndex",
        value: function findOptionIndex(option) {
          var index = -1;

          if (this.suggestions) {
            for (var i = 0; i < this.suggestions.length; i++) {
              if (primeng_utils__WEBPACK_IMPORTED_MODULE_7__["ObjectUtils"].equals(option, this.suggestions[i])) {
                index = i;
                break;
              }
            }
          }

          return index;
        }
      }, {
        key: "updateFilledState",
        value: function updateFilledState() {
          if (this.multiple) this.filled = this.value && this.value.length || this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '';else this.filled = this.inputFieldValue && this.inputFieldValue != '' || this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '';
          ;
        }
      }, {
        key: "updateInputField",
        value: function updateInputField() {
          var formattedValue = this.value ? this.field ? primeng_utils__WEBPACK_IMPORTED_MODULE_7__["ObjectUtils"].resolveFieldData(this.value, this.field) || '' : this.value : '';
          this.inputFieldValue = formattedValue;

          if (this.inputEL && this.inputEL.nativeElement) {
            this.inputEL.nativeElement.value = formattedValue;
          }

          this.updateFilledState();
        }
      }, {
        key: "bindDocumentClickListener",
        value: function bindDocumentClickListener() {
          var _this32 = this;

          if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'click', function (event) {
              if (event.which === 3) {
                return;
              }

              if (!_this32.inputClick && !_this32.isDropdownClick(event)) {
                _this32.hide();
              }

              _this32.inputClick = false;

              _this32.cd.markForCheck();
            });
          }
        }
      }, {
        key: "isDropdownClick",
        value: function isDropdownClick(event) {
          if (this.dropdown) {
            var target = event.target;
            return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;
          } else {
            return false;
          }
        }
      }, {
        key: "unbindDocumentClickListener",
        value: function unbindDocumentClickListener() {
          if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
          }
        }
      }, {
        key: "bindDocumentResizeListener",
        value: function bindDocumentResizeListener() {
          this.documentResizeListener = this.onWindowResize.bind(this);
          window.addEventListener('resize', this.documentResizeListener);
        }
      }, {
        key: "unbindDocumentResizeListener",
        value: function unbindDocumentResizeListener() {
          if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
          }
        }
      }, {
        key: "onWindowResize",
        value: function onWindowResize() {
          this.hide();
        }
      }, {
        key: "onOverlayHide",
        value: function onOverlayHide() {
          this.unbindDocumentClickListener();
          this.unbindDocumentResizeListener();
          this.overlay = null;
          this.onHide.emit();
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.forceSelectionUpdateModelTimeout) {
            clearTimeout(this.forceSelectionUpdateModelTimeout);
            this.forceSelectionUpdateModelTimeout = null;
          }

          this.restoreOverlayAppend();
          this.onOverlayHide();
        }
      }, {
        key: "suggestions",
        get: function get() {
          return this._suggestions;
        },
        set: function set(val) {
          this._suggestions = val;
          this.handleSuggestionsChange();
        }
      }]);

      return AutoComplete;
    }();

    AutoComplete.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "minLength", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "delay", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "panelStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "panelStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "inputStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "inputStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "placeholder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "readonly", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "maxlength", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "required", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "size", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "autoHighlight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "forceSelection", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "type", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "autoZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "baseZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "ariaLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "ariaLabelledBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "dropdownIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "unique", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "completeOnFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "completeMethod", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onUnselect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onBlur", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onDropdownClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onClear", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onKeyUp", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], AutoComplete.prototype, "onHide", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "field", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "scrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "dropdown", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "dropdownMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "multiple", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "dataKey", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "emptyMessage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "showTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "hideTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "autofocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "autocomplete", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('in')], AutoComplete.prototype, "inputEL", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('multiIn')], AutoComplete.prototype, "multiInputEL", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('multiContainer')], AutoComplete.prototype, "multiContainerEL", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('ddBtn')], AutoComplete.prototype, "dropdownButton", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_5__["PrimeTemplate"])], AutoComplete.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], AutoComplete.prototype, "suggestions", null);

    AutoComplete = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-autoComplete',
      template: "\n        <span [ngClass]=\"{'ui-autocomplete ui-widget':true,'ui-autocomplete-dd':dropdown,'ui-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            [ngClass]=\"'ui-inputtext ui-widget ui-state-default ui-corner-all ui-autocomplete-input'\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n            ><ul *ngIf=\"multiple\" #multiContainer class=\"ui-autocomplete-multiple-container ui-widget ui-inputtext ui-state-default ui-corner-all\" [ngClass]=\"{'ui-state-disabled':disabled,'ui-state-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"ui-autocomplete-token ui-state-highlight ui-corner-all\">\n                    <span class=\"ui-autocomplete-token-icon pi pi-fw pi-times\" (click)=\"removeItem(token)\" *ngIf=\"!disabled\"></span>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"ui-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                </li>\n                <li class=\"ui-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"ui-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" class=\"ui-autocomplete-dropdown\" [disabled]=\"disabled\"\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" [ngClass]=\"['ui-autocomplete-panel ui-widget ui-widget-content ui-corner-all ui-shadow']\" [style.max-height]=\"scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationDone($event)\" >\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"ui-autocomplete-items ui-autocomplete-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\">\n                    <li role=\"option\"  *ngFor=\"let option of suggestions; let idx = index\" [ngClass]=\"{'ui-autocomplete-list-item ui-corner-all':true,'ui-state-highlight':(highlightOption==option)}\"\n                        (mouseenter)=\"highlightOption=option\" (mouseleave)=\"highlightOption=null\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                        <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                    </li>\n                    <li *ngIf=\"noResults && emptyMessage\" class=\"ui-autocomplete-emptymessage ui-autocomplete-list-item ui-corner-all\">{{emptyMessage}}</li>\n                </ul>\n            </div>\n        </span>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["trigger"])('overlayAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["style"])({
        transform: 'translateY(5%)',
        opacity: 0
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["style"])({
        transform: 'translateY(0)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["transition"])('void => visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["animate"])('{{showTransitionParams}}')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["transition"])('visible => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["animate"])('{{hideTransitionParams}}'))])],
      host: {
        '[class.ui-inputwrapper-filled]': 'filled',
        '[class.ui-inputwrapper-focus]': 'focus && !disabled'
      },
      providers: [AUTOCOMPLETE_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], AutoComplete);

    var AutoCompleteModule = function AutoCompleteModule() {
      _classCallCheck(this, AutoCompleteModule);
    };

    AutoCompleteModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], primeng_inputtext__WEBPACK_IMPORTED_MODULE_3__["InputTextModule"], primeng_button__WEBPACK_IMPORTED_MODULE_4__["ButtonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"]],
      exports: [AutoComplete, primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"]],
      declarations: [AutoComplete]
    })], AutoCompleteModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-autocomplete.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-button.js":
  /*!*********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-button.js ***!
    \*********************************************************/

  /*! exports provided: Button, ButtonDirective, ButtonModule */

  /***/
  function node_modulesPrimengFesm2015PrimengButtonJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Button", function () {
      return Button;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ButtonDirective", function () {
      return ButtonDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ButtonModule", function () {
      return ButtonModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var ButtonDirective =
    /*#__PURE__*/
    function () {
      function ButtonDirective(el) {
        _classCallCheck(this, ButtonDirective);

        this.el = el;
        this.iconPos = 'left';
        this.cornerStyleClass = 'ui-corner-all';
      }

      _createClass(ButtonDirective, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_1__["DomHandler"].addMultipleClasses(this.el.nativeElement, this.getStyleClass());

          if (this.icon) {
            var iconElement = document.createElement("span");
            iconElement.setAttribute("aria-hidden", "true");
            var iconPosClass = this.iconPos == 'right' ? 'ui-button-icon-right' : 'ui-button-icon-left';
            iconElement.className = iconPosClass + ' ui-clickable ' + this.icon;
            this.el.nativeElement.appendChild(iconElement);
          }

          var labelElement = document.createElement("span");

          if (this.icon && !this.label) {
            labelElement.setAttribute('aria-hidden', 'true');
          }

          labelElement.className = 'ui-button-text ui-clickable';
          labelElement.appendChild(document.createTextNode(this.label || 'ui-btn'));
          this.el.nativeElement.appendChild(labelElement);
          this.initialized = true;
        }
      }, {
        key: "getStyleClass",
        value: function getStyleClass() {
          var styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;

          if (this.icon) {
            if (this.label != null && this.label != undefined) {
              if (this.iconPos == 'left') styleClass = styleClass + ' ui-button-text-icon-left';else styleClass = styleClass + ' ui-button-text-icon-right';
            } else {
              styleClass = styleClass + ' ui-button-icon-only';
            }
          } else {
            if (this.label) {
              styleClass = styleClass + ' ui-button-text-only';
            } else {
              styleClass = styleClass + ' ui-button-text-empty';
            }
          }

          return styleClass;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          while (this.el.nativeElement.hasChildNodes()) {
            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);
          }

          this.initialized = false;
        }
      }, {
        key: "label",
        get: function get() {
          return this._label;
        },
        set: function set(val) {
          this._label = val;

          if (this.initialized) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_1__["DomHandler"].findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label;

            if (!this.icon) {
              if (this._label) {
                primeng_dom__WEBPACK_IMPORTED_MODULE_1__["DomHandler"].removeClass(this.el.nativeElement, 'ui-button-text-empty');
                primeng_dom__WEBPACK_IMPORTED_MODULE_1__["DomHandler"].addClass(this.el.nativeElement, 'ui-button-text-only');
              } else {
                primeng_dom__WEBPACK_IMPORTED_MODULE_1__["DomHandler"].addClass(this.el.nativeElement, 'ui-button-text-empty');
                primeng_dom__WEBPACK_IMPORTED_MODULE_1__["DomHandler"].removeClass(this.el.nativeElement, 'ui-button-text-only');
              }
            }
          }
        }
      }, {
        key: "icon",
        get: function get() {
          return this._icon;
        },
        set: function set(val) {
          this._icon = val;

          if (this.initialized) {
            var iconPosClass = this.iconPos == 'right' ? 'ui-button-icon-right' : 'ui-button-icon-left';
            primeng_dom__WEBPACK_IMPORTED_MODULE_1__["DomHandler"].findSingle(this.el.nativeElement, '.ui-clickable').className = iconPosClass + ' ui-clickable ' + this.icon;
          }
        }
      }]);

      return ButtonDirective;
    }();

    ButtonDirective.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ButtonDirective.prototype, "iconPos", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ButtonDirective.prototype, "cornerStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ButtonDirective.prototype, "label", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ButtonDirective.prototype, "icon", null);

    ButtonDirective = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pButton]'
    })], ButtonDirective);

    var Button = function Button() {
      _classCallCheck(this, Button);

      this.iconPos = 'left';
      this.onClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Button.prototype, "type", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Button.prototype, "iconPos", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Button.prototype, "icon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Button.prototype, "label", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Button.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Button.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Button.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Button.prototype, "onClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Button.prototype, "onFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Button.prototype, "onBlur", void 0);

    Button = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-button',
      template: "\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled\"\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\n                        'ui-button-icon-only': (icon && !label),\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\n                        'ui-button-text-only': (!icon && label),\n                        'ui-button-text-empty': (!icon && !label),\n                        'ui-state-disabled': disabled}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\n            <ng-content></ng-content>\n            <span [ngClass]=\"{'ui-clickable': true,\n                        'ui-button-icon-left': (iconPos === 'left'), \n                        'ui-button-icon-right': (iconPos === 'right')}\"\n                        [class]=\"icon\" *ngIf=\"icon\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"ui-button-text ui-clickable\" [attr.aria-hidden]=\"icon && !label\">{{label||'ui-btn'}}</span>\n        </button>\n    ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Button);

    var ButtonModule = function ButtonModule() {
      _classCallCheck(this, ButtonModule);
    };

    ButtonModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]],
      exports: [ButtonDirective, Button],
      declarations: [ButtonDirective, Button]
    })], ButtonModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-button.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-calendar.js":
  /*!***********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-calendar.js ***!
    \***********************************************************/

  /*! exports provided: CALENDAR_VALUE_ACCESSOR, Calendar, CalendarModule */

  /***/
  function node_modulesPrimengFesm2015PrimengCalendarJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CALENDAR_VALUE_ACCESSOR", function () {
      return CALENDAR_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Calendar", function () {
      return Calendar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarModule", function () {
      return CalendarModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/button */
    "./node_modules/primeng/fesm2015/primeng-button.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var CALENDAR_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
        return Calendar;
      }),
      multi: true
    };

    var Calendar =
    /*#__PURE__*/
    function () {
      function Calendar(el, renderer, cd, zone) {
        _classCallCheck(this, Calendar);

        this.el = el;
        this.renderer = renderer;
        this.cd = cd;
        this.zone = zone;
        this.dateFormat = 'mm/dd/yy';
        this.multipleSeparator = ',';
        this.rangeSeparator = '-';
        this.inline = false;
        this.showOtherMonths = true;
        this.icon = 'pi pi-calendar';
        this.shortYearCutoff = '+10';
        this.hourFormat = '24';
        this.stepHour = 1;
        this.stepMinute = 1;
        this.stepSecond = 1;
        this.showSeconds = false;
        this.showOnFocus = true;
        this.showWeek = false;
        this.dataType = 'date';
        this.selectionMode = 'single';
        this.todayButtonStyleClass = 'ui-button-secondary';
        this.clearButtonStyleClass = 'ui-button-secondary';
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.keepInvalid = false;
        this.hideOnDateTimeSelect = true;
        this.numberOfMonths = 1;
        this.view = 'date';
        this.timeSeparator = ":";
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
        this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onClose = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onInput = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onTodayClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onClearClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onMonthChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onYearChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onClickOutside = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this._locale = {
          firstDayOfWeek: 0,
          dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
          dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
          monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
          monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
          today: 'Today',
          clear: 'Clear',
          dateFormat: 'mm/dd/yy',
          weekHeader: 'Wk'
        };

        this.onModelChange = function () {};

        this.onModelTouched = function () {};

        this.inputFieldValue = null;
        this.navigationState = null;

        this.convertTo24Hour = function (hours, pm) {
          if (this.hourFormat == '12') {
            if (hours === 12) {
              return pm ? 12 : 0;
            } else {
              return pm ? hours + 12 : hours;
            }
          }

          return hours;
        };
      }

      _createClass(Calendar, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var date = this.defaultDate || new Date();
          this.currentMonth = date.getMonth();
          this.currentYear = date.getFullYear();

          if (this.view === 'date') {
            this.createWeekDays();
            this.initTime(date);
            this.createMonths(this.currentMonth, this.currentYear);
            this.ticksTo1970 = ((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000;
          } else if (this.view === 'month') {
            this.createMonthPickerValues();
          }
        }
      }, {
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this33 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'date':
                _this33.dateTemplate = item.template;
                break;

              case 'disabledDate':
                _this33.disabledDateTemplate = item.template;
                break;

              default:
                _this33.dateTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "populateYearOptions",
        value: function populateYearOptions(start, end) {
          this.yearOptions = [];

          for (var i = start; i <= end; i++) {
            this.yearOptions.push(i);
          }
        }
      }, {
        key: "createWeekDays",
        value: function createWeekDays() {
          this.weekDays = [];
          var dayIndex = this.locale.firstDayOfWeek;

          for (var i = 0; i < 7; i++) {
            this.weekDays.push(this.locale.dayNamesMin[dayIndex]);
            dayIndex = dayIndex == 6 ? 0 : ++dayIndex;
          }
        }
      }, {
        key: "createMonthPickerValues",
        value: function createMonthPickerValues() {
          this.monthPickerValues = [];

          for (var i = 0; i <= 11; i++) {
            this.monthPickerValues.push(this.locale.monthNamesShort[i]);
          }
        }
      }, {
        key: "createMonths",
        value: function createMonths(month, year) {
          this.months = this.months = [];

          for (var i = 0; i < this.numberOfMonths; i++) {
            var m = month + i;
            var y = year;

            if (m > 11) {
              m = m % 11 - 1;
              y = year + 1;
            }

            this.months.push(this.createMonth(m, y));
          }
        }
      }, {
        key: "getWeekNumber",
        value: function getWeekNumber(date) {
          var checkDate = new Date(date.getTime());
          checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
          var time = checkDate.getTime();
          checkDate.setMonth(0);
          checkDate.setDate(1);
          return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;
        }
      }, {
        key: "createMonth",
        value: function createMonth(month, year) {
          var dates = [];
          var firstDay = this.getFirstDayOfMonthIndex(month, year);
          var daysLength = this.getDaysCountInMonth(month, year);
          var prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);
          var dayNo = 1;
          var today = new Date();
          var weekNumbers = [];
          var monthRows = Math.ceil((daysLength + firstDay) / 7);

          for (var i = 0; i < monthRows; i++) {
            var week = [];

            if (i == 0) {
              for (var j = prevMonthDaysLength - firstDay + 1; j <= prevMonthDaysLength; j++) {
                var prev = this.getPreviousMonthAndYear(month, year);
                week.push({
                  day: j,
                  month: prev.month,
                  year: prev.year,
                  otherMonth: true,
                  today: this.isToday(today, j, prev.month, prev.year),
                  selectable: this.isSelectable(j, prev.month, prev.year, true)
                });
              }

              var remainingDaysLength = 7 - week.length;

              for (var _j = 0; _j < remainingDaysLength; _j++) {
                week.push({
                  day: dayNo,
                  month: month,
                  year: year,
                  today: this.isToday(today, dayNo, month, year),
                  selectable: this.isSelectable(dayNo, month, year, false)
                });
                dayNo++;
              }
            } else {
              for (var _j2 = 0; _j2 < 7; _j2++) {
                if (dayNo > daysLength) {
                  var next = this.getNextMonthAndYear(month, year);
                  week.push({
                    day: dayNo - daysLength,
                    month: next.month,
                    year: next.year,
                    otherMonth: true,
                    today: this.isToday(today, dayNo - daysLength, next.month, next.year),
                    selectable: this.isSelectable(dayNo - daysLength, next.month, next.year, true)
                  });
                } else {
                  week.push({
                    day: dayNo,
                    month: month,
                    year: year,
                    today: this.isToday(today, dayNo, month, year),
                    selectable: this.isSelectable(dayNo, month, year, false)
                  });
                }

                dayNo++;
              }
            }

            if (this.showWeek) {
              weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));
            }

            dates.push(week);
          }

          return {
            month: month,
            year: year,
            dates: dates,
            weekNumbers: weekNumbers
          };
        }
      }, {
        key: "initTime",
        value: function initTime(date) {
          this.pm = date.getHours() > 11;

          if (this.showTime) {
            this.currentMinute = date.getMinutes();
            this.currentSecond = date.getSeconds();
            this.setCurrentHourPM(date.getHours());
          } else if (this.timeOnly) {
            this.currentMinute = 0;
            this.currentHour = 0;
            this.currentSecond = 0;
          }
        }
      }, {
        key: "navBackward",
        value: function navBackward(event) {
          var _this34 = this;

          event.stopPropagation();

          if (this.disabled) {
            event.preventDefault();
            return;
          }

          this.isMonthNavigate = true;

          if (this.view === 'month') {
            this.decrementYear();
            setTimeout(function () {
              _this34.updateFocus();
            }, 1);
          } else {
            if (this.currentMonth === 0) {
              this.currentMonth = 11;
              this.decrementYear();
            } else {
              this.currentMonth--;
            }

            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear
            });
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "navForward",
        value: function navForward(event) {
          var _this35 = this;

          event.stopPropagation();

          if (this.disabled) {
            event.preventDefault();
            return;
          }

          this.isMonthNavigate = true;

          if (this.view === 'month') {
            this.incrementYear();
            setTimeout(function () {
              _this35.updateFocus();
            }, 1);
          } else {
            if (this.currentMonth === 11) {
              this.currentMonth = 0;
              this.incrementYear();
            } else {
              this.currentMonth++;
            }

            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear
            });
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "decrementYear",
        value: function decrementYear() {
          this.currentYear--;

          if (this.yearNavigator && this.currentYear < this.yearOptions[0]) {
            var difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];
            this.populateYearOptions(this.yearOptions[0] - difference, this.yearOptions[this.yearOptions.length - 1] - difference);
          }
        }
      }, {
        key: "incrementYear",
        value: function incrementYear() {
          this.currentYear++;

          if (this.yearNavigator && this.currentYear > this.yearOptions[this.yearOptions.length - 1]) {
            var difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];
            this.populateYearOptions(this.yearOptions[0] + difference, this.yearOptions[this.yearOptions.length - 1] + difference);
          }
        }
      }, {
        key: "onDateSelect",
        value: function onDateSelect(event, dateMeta) {
          var _this36 = this;

          if (this.disabled || !dateMeta.selectable) {
            event.preventDefault();
            return;
          }

          if (this.isMultipleSelection() && this.isSelected(dateMeta)) {
            this.value = this.value.filter(function (date, i) {
              return !_this36.isDateEquals(date, dateMeta);
            });
            this.updateModel(this.value);
          } else {
            if (this.shouldSelectDate(dateMeta)) {
              this.selectDate(dateMeta);
            }
          }

          if (this.isSingleSelection() && this.hideOnDateTimeSelect) {
            setTimeout(function () {
              event.preventDefault();

              _this36.hideOverlay();

              if (_this36.mask) {
                _this36.disableModality();
              }

              _this36.cd.markForCheck();
            }, 150);
          }

          this.updateInputfield();
          event.preventDefault();
        }
      }, {
        key: "shouldSelectDate",
        value: function shouldSelectDate(dateMeta) {
          if (this.isMultipleSelection()) return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;else return true;
        }
      }, {
        key: "onMonthSelect",
        value: function onMonthSelect(event, index) {
          if (!primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-state-disabled')) {
            this.onDateSelect(event, {
              year: this.currentYear,
              month: index,
              day: 1,
              selectable: true
            });
          }
        }
      }, {
        key: "updateInputfield",
        value: function updateInputfield() {
          var formattedValue = '';

          if (this.value) {
            if (this.isSingleSelection()) {
              formattedValue = this.formatDateTime(this.value);
            } else if (this.isMultipleSelection()) {
              for (var i = 0; i < this.value.length; i++) {
                var dateAsString = this.formatDateTime(this.value[i]);
                formattedValue += dateAsString;

                if (i !== this.value.length - 1) {
                  formattedValue += this.multipleSeparator + ' ';
                }
              }
            } else if (this.isRangeSelection()) {
              if (this.value && this.value.length) {
                var startDate = this.value[0];
                var endDate = this.value[1];
                formattedValue = this.formatDateTime(startDate);

                if (endDate) {
                  formattedValue += ' ' + this.rangeSeparator + ' ' + this.formatDateTime(endDate);
                }
              }
            }
          }

          this.inputFieldValue = formattedValue;
          this.updateFilledState();

          if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {
            this.inputfieldViewChild.nativeElement.value = this.inputFieldValue;
          }
        }
      }, {
        key: "formatDateTime",
        value: function formatDateTime(date) {
          var formattedValue = null;

          if (date) {
            if (this.timeOnly) {
              formattedValue = this.formatTime(date);
            } else {
              formattedValue = this.formatDate(date, this.getDateFormat());

              if (this.showTime) {
                formattedValue += ' ' + this.formatTime(date);
              }
            }
          }

          return formattedValue;
        }
      }, {
        key: "setCurrentHourPM",
        value: function setCurrentHourPM(hours) {
          if (this.hourFormat == '12') {
            this.pm = hours > 11;

            if (hours >= 12) {
              this.currentHour = hours == 12 ? 12 : hours - 12;
            } else {
              this.currentHour = hours == 0 ? 12 : hours;
            }
          } else {
            this.currentHour = hours;
          }
        }
      }, {
        key: "selectDate",
        value: function selectDate(dateMeta) {
          var date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);

          if (this.showTime) {
            if (this.hourFormat == '12') {
              if (this.currentHour === 12) date.setHours(this.pm ? 12 : 0);else date.setHours(this.pm ? this.currentHour + 12 : this.currentHour);
            } else {
              date.setHours(this.currentHour);
            }

            date.setMinutes(this.currentMinute);
            date.setSeconds(this.currentSecond);
          }

          if (this.minDate && this.minDate > date) {
            date = this.minDate;
            this.setCurrentHourPM(date.getHours());
            this.currentMinute = date.getMinutes();
            this.currentSecond = date.getSeconds();
          }

          if (this.maxDate && this.maxDate < date) {
            date = this.maxDate;
            this.setCurrentHourPM(date.getHours());
            this.currentMinute = date.getMinutes();
            this.currentSecond = date.getSeconds();
          }

          if (this.isSingleSelection()) {
            this.updateModel(date);
          } else if (this.isMultipleSelection()) {
            this.updateModel(this.value ? [].concat(_toConsumableArray(this.value), [date]) : [date]);
          } else if (this.isRangeSelection()) {
            if (this.value && this.value.length) {
              var startDate = this.value[0];
              var endDate = this.value[1];

              if (!endDate && date.getTime() >= startDate.getTime()) {
                endDate = date;
              } else {
                startDate = date;
                endDate = null;
              }

              this.updateModel([startDate, endDate]);
            } else {
              this.updateModel([date, null]);
            }
          }

          this.onSelect.emit(date);
        }
      }, {
        key: "updateModel",
        value: function updateModel(value) {
          var _this37 = this;

          this.value = value;

          if (this.dataType == 'date') {
            this.onModelChange(this.value);
          } else if (this.dataType == 'string') {
            if (this.isSingleSelection()) {
              this.onModelChange(this.formatDateTime(this.value));
            } else {
              var stringArrValue = null;

              if (this.value) {
                stringArrValue = this.value.map(function (date) {
                  return _this37.formatDateTime(date);
                });
              }

              this.onModelChange(stringArrValue);
            }
          }
        }
      }, {
        key: "getFirstDayOfMonthIndex",
        value: function getFirstDayOfMonthIndex(month, year) {
          var day = new Date();
          day.setDate(1);
          day.setMonth(month);
          day.setFullYear(year);
          var dayIndex = day.getDay() + this.getSundayIndex();
          return dayIndex >= 7 ? dayIndex - 7 : dayIndex;
        }
      }, {
        key: "getDaysCountInMonth",
        value: function getDaysCountInMonth(month, year) {
          return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();
        }
      }, {
        key: "getDaysCountInPrevMonth",
        value: function getDaysCountInPrevMonth(month, year) {
          var prev = this.getPreviousMonthAndYear(month, year);
          return this.getDaysCountInMonth(prev.month, prev.year);
        }
      }, {
        key: "getPreviousMonthAndYear",
        value: function getPreviousMonthAndYear(month, year) {
          var m, y;

          if (month === 0) {
            m = 11;
            y = year - 1;
          } else {
            m = month - 1;
            y = year;
          }

          return {
            'month': m,
            'year': y
          };
        }
      }, {
        key: "getNextMonthAndYear",
        value: function getNextMonthAndYear(month, year) {
          var m, y;

          if (month === 11) {
            m = 0;
            y = year + 1;
          } else {
            m = month + 1;
            y = year;
          }

          return {
            'month': m,
            'year': y
          };
        }
      }, {
        key: "getSundayIndex",
        value: function getSundayIndex() {
          return this.locale.firstDayOfWeek > 0 ? 7 - this.locale.firstDayOfWeek : 0;
        }
      }, {
        key: "isSelected",
        value: function isSelected(dateMeta) {
          if (this.value) {
            if (this.isSingleSelection()) {
              return this.isDateEquals(this.value, dateMeta);
            } else if (this.isMultipleSelection()) {
              var selected = false;

              var _iterator5 = _createForOfIteratorHelper(this.value),
                  _step5;

              try {
                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                  var date = _step5.value;
                  selected = this.isDateEquals(date, dateMeta);

                  if (selected) {
                    break;
                  }
                }
              } catch (err) {
                _iterator5.e(err);
              } finally {
                _iterator5.f();
              }

              return selected;
            } else if (this.isRangeSelection()) {
              if (this.value[1]) return this.isDateEquals(this.value[0], dateMeta) || this.isDateEquals(this.value[1], dateMeta) || this.isDateBetween(this.value[0], this.value[1], dateMeta);else return this.isDateEquals(this.value[0], dateMeta);
            }
          } else {
            return false;
          }
        }
      }, {
        key: "isMonthSelected",
        value: function isMonthSelected(month) {
          var day = this.value ? Array.isArray(this.value) ? this.value[0].getDate() : this.value.getDate() : 1;
          return this.isSelected({
            year: this.currentYear,
            month: month,
            day: day,
            selectable: true
          });
        }
      }, {
        key: "isDateEquals",
        value: function isDateEquals(value, dateMeta) {
          if (value) return value.getDate() === dateMeta.day && value.getMonth() === dateMeta.month && value.getFullYear() === dateMeta.year;else return false;
        }
      }, {
        key: "isDateBetween",
        value: function isDateBetween(start, end, dateMeta) {
          var between = false;

          if (start && end) {
            var date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);
            return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();
          }

          return between;
        }
      }, {
        key: "isSingleSelection",
        value: function isSingleSelection() {
          return this.selectionMode === 'single';
        }
      }, {
        key: "isRangeSelection",
        value: function isRangeSelection() {
          return this.selectionMode === 'range';
        }
      }, {
        key: "isMultipleSelection",
        value: function isMultipleSelection() {
          return this.selectionMode === 'multiple';
        }
      }, {
        key: "isToday",
        value: function isToday(today, day, month, year) {
          return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;
        }
      }, {
        key: "isSelectable",
        value: function isSelectable(day, month, year, otherMonth) {
          var validMin = true;
          var validMax = true;
          var validDate = true;
          var validDay = true;

          if (otherMonth && !this.selectOtherMonths) {
            return false;
          }

          if (this.minDate) {
            if (this.minDate.getFullYear() > year) {
              validMin = false;
            } else if (this.minDate.getFullYear() === year) {
              if (this.minDate.getMonth() > month) {
                validMin = false;
              } else if (this.minDate.getMonth() === month) {
                if (this.minDate.getDate() > day) {
                  validMin = false;
                }
              }
            }
          }

          if (this.maxDate) {
            if (this.maxDate.getFullYear() < year) {
              validMax = false;
            } else if (this.maxDate.getFullYear() === year) {
              if (this.maxDate.getMonth() < month) {
                validMax = false;
              } else if (this.maxDate.getMonth() === month) {
                if (this.maxDate.getDate() < day) {
                  validMax = false;
                }
              }
            }
          }

          if (this.disabledDates) {
            validDate = !this.isDateDisabled(day, month, year);
          }

          if (this.disabledDays) {
            validDay = !this.isDayDisabled(day, month, year);
          }

          return validMin && validMax && validDate && validDay;
        }
      }, {
        key: "isDateDisabled",
        value: function isDateDisabled(day, month, year) {
          if (this.disabledDates) {
            var _iterator6 = _createForOfIteratorHelper(this.disabledDates),
                _step6;

            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                var disabledDate = _step6.value;

                if (disabledDate.getFullYear() === year && disabledDate.getMonth() === month && disabledDate.getDate() === day) {
                  return true;
                }
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }
          }

          return false;
        }
      }, {
        key: "isDayDisabled",
        value: function isDayDisabled(day, month, year) {
          if (this.disabledDays) {
            var weekday = new Date(year, month, day);
            var weekdayNumber = weekday.getDay();
            return this.disabledDays.indexOf(weekdayNumber) !== -1;
          }

          return false;
        }
      }, {
        key: "onInputFocus",
        value: function onInputFocus(event) {
          this.focus = true;

          if (this.showOnFocus) {
            this.showOverlay();
          }

          this.onFocus.emit(event);
        }
      }, {
        key: "onInputClick",
        value: function onInputClick(event) {
          if (this.overlay && this.autoZIndex) {
            this.overlay.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].zindex);
          }

          if (this.showOnFocus && !this.overlayVisible) {
            this.showOverlay();
          }
        }
      }, {
        key: "onInputBlur",
        value: function onInputBlur(event) {
          this.focus = false;
          this.onBlur.emit(event);

          if (!this.keepInvalid) {
            this.updateInputfield();
          }

          this.onModelTouched();
        }
      }, {
        key: "onButtonClick",
        value: function onButtonClick(event, inputfield) {
          if (!this.overlayVisible) {
            inputfield.focus();
            this.showOverlay();
          } else {
            this.hideOverlay();
          }
        }
      }, {
        key: "onPrevButtonClick",
        value: function onPrevButtonClick(event) {
          this.navigationState = {
            backward: true,
            button: true
          };
          this.navBackward(event);
        }
      }, {
        key: "onNextButtonClick",
        value: function onNextButtonClick(event) {
          this.navigationState = {
            backward: false,
            button: true
          };
          this.navForward(event);
        }
      }, {
        key: "onContainerButtonKeydown",
        value: function onContainerButtonKeydown(event) {
          switch (event.which) {
            //tab
            case 9:
              if (!this.inline) {
                this.trapFocus(event);
              }

              break;
            //escape

            case 27:
              this.overlayVisible = false;
              event.preventDefault();
              break;

            default:
              //Noop
              break;
          }
        }
      }, {
        key: "onInputKeydown",
        value: function onInputKeydown(event) {
          this.isKeydown = true;

          if (event.keyCode === 9 && this.contentViewChild) {
            this.trapFocus(event);
          } else if (event.keyCode === 27) {
            if (this.overlayVisible) {
              this.overlayVisible = false;
              event.preventDefault();
            }
          }
        }
      }, {
        key: "onDateCellKeydown",
        value: function onDateCellKeydown(event, date, groupIndex) {
          var cellContent = event.currentTarget;
          var cell = cellContent.parentElement;

          switch (event.which) {
            //down arrow
            case 40:
              {
                cellContent.tabIndex = '-1';
                var cellIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].index(cell);
                var nextRow = cell.parentElement.nextElementSibling;

                if (nextRow) {
                  var focusCell = nextRow.children[cellIndex].children[0];

                  if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(focusCell, 'ui-state-disabled')) {
                    this.navigationState = {
                      backward: false
                    };
                    this.navForward(event);
                  } else {
                    nextRow.children[cellIndex].children[0].tabIndex = '0';
                    nextRow.children[cellIndex].children[0].focus();
                  }
                } else {
                  this.navigationState = {
                    backward: false
                  };
                  this.navForward(event);
                }

                event.preventDefault();
                break;
              }
            //up arrow

            case 38:
              {
                cellContent.tabIndex = '-1';

                var _cellIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].index(cell);

                var prevRow = cell.parentElement.previousElementSibling;

                if (prevRow) {
                  var _focusCell = prevRow.children[_cellIndex].children[0];

                  if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(_focusCell, 'ui-state-disabled')) {
                    this.navigationState = {
                      backward: true
                    };
                    this.navBackward(event);
                  } else {
                    _focusCell.tabIndex = '0';

                    _focusCell.focus();
                  }
                } else {
                  this.navigationState = {
                    backward: true
                  };
                  this.navBackward(event);
                }

                event.preventDefault();
                break;
              }
            //left arrow

            case 37:
              {
                cellContent.tabIndex = '-1';
                var prevCell = cell.previousElementSibling;

                if (prevCell) {
                  var _focusCell2 = prevCell.children[0];

                  if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(_focusCell2, 'ui-state-disabled') || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(_focusCell2.parentElement, 'ui-datepicker-weeknumber')) {
                    this.navigateToMonth(true, groupIndex);
                  } else {
                    _focusCell2.tabIndex = '0';

                    _focusCell2.focus();
                  }
                } else {
                  this.navigateToMonth(true, groupIndex);
                }

                event.preventDefault();
                break;
              }
            //right arrow

            case 39:
              {
                cellContent.tabIndex = '-1';
                var nextCell = cell.nextElementSibling;

                if (nextCell) {
                  var _focusCell3 = nextCell.children[0];

                  if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(_focusCell3, 'ui-state-disabled')) {
                    this.navigateToMonth(false, groupIndex);
                  } else {
                    _focusCell3.tabIndex = '0';

                    _focusCell3.focus();
                  }
                } else {
                  this.navigateToMonth(false, groupIndex);
                }

                event.preventDefault();
                break;
              }
            //enter

            case 13:
              {
                this.onDateSelect(event, date);
                event.preventDefault();
                break;
              }
            //escape

            case 27:
              {
                this.overlayVisible = false;
                event.preventDefault();
                break;
              }
            //tab

            case 9:
              {
                if (!this.inline) {
                  this.trapFocus(event);
                }

                break;
              }

            default:
              //no op
              break;
          }
        }
      }, {
        key: "onMonthCellKeydown",
        value: function onMonthCellKeydown(event, index) {
          var cell = event.currentTarget;

          switch (event.which) {
            //arrows
            case 38:
            case 40:
              {
                cell.tabIndex = '-1';
                var cells = cell.parentElement.children;
                var cellIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].index(cell);
                var nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex - 3];

                if (nextCell) {
                  nextCell.tabIndex = '0';
                  nextCell.focus();
                }

                event.preventDefault();
                break;
              }
            //left arrow

            case 37:
              {
                cell.tabIndex = '-1';
                var prevCell = cell.previousElementSibling;

                if (prevCell) {
                  prevCell.tabIndex = '0';
                  prevCell.focus();
                }

                event.preventDefault();
                break;
              }
            //right arrow

            case 39:
              {
                cell.tabIndex = '-1';
                var _nextCell = cell.nextElementSibling;

                if (_nextCell) {
                  _nextCell.tabIndex = '0';

                  _nextCell.focus();
                }

                event.preventDefault();
                break;
              }
            //enter

            case 13:
              {
                this.onMonthSelect(event, index);
                event.preventDefault();
                break;
              }
            //escape

            case 27:
              {
                this.overlayVisible = false;
                event.preventDefault();
                break;
              }
            //tab

            case 9:
              {
                if (!this.inline) {
                  this.trapFocus(event);
                }

                break;
              }

            default:
              //no op
              break;
          }
        }
      }, {
        key: "navigateToMonth",
        value: function navigateToMonth(prev, groupIndex) {
          if (prev) {
            if (this.numberOfMonths === 1 || groupIndex === 0) {
              this.navigationState = {
                backward: true
              };
              this.navBackward(event);
            } else {
              var prevMonthContainer = this.contentViewChild.nativeElement.children[groupIndex - 1];
              var cells = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(prevMonthContainer, '.ui-datepicker-calendar td a');
              var focusCell = cells[cells.length - 1];
              focusCell.tabIndex = '0';
              focusCell.focus();
            }
          } else {
            if (this.numberOfMonths === 1 || groupIndex === this.numberOfMonths - 1) {
              this.navigationState = {
                backward: false
              };
              this.navForward(event);
            } else {
              var nextMonthContainer = this.contentViewChild.nativeElement.children[groupIndex + 1];

              var _focusCell4 = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(nextMonthContainer, '.ui-datepicker-calendar td a');

              _focusCell4.tabIndex = '0';

              _focusCell4.focus();
            }
          }
        }
      }, {
        key: "updateFocus",
        value: function updateFocus() {
          var cell;

          if (this.navigationState) {
            if (this.navigationState.button) {
              this.initFocusableCell();
              if (this.navigationState.backward) primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-datepicker-prev').focus();else primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-datepicker-next').focus();
            } else {
              if (this.navigationState.backward) {
                var cells = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.contentViewChild.nativeElement, '.ui-datepicker-calendar td a');
                cell = cells[cells.length - 1];
              } else {
                cell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-datepicker-calendar td a');
              }

              if (cell) {
                cell.tabIndex = '0';
                cell.focus();
              }
            }

            this.navigationState = null;
          } else {
            this.initFocusableCell();
          }
        }
      }, {
        key: "initFocusableCell",
        value: function initFocusableCell() {
          var cell;

          if (this.view === 'month') {
            var cells = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.contentViewChild.nativeElement, '.ui-monthpicker .ui-monthpicker-month:not(.ui-state-disabled)');
            var selectedCell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-monthpicker .ui-monthpicker-month.ui-state-highlight');
            cells.forEach(function (cell) {
              return cell.tabIndex = -1;
            });
            cell = selectedCell || cells[0];

            if (cells.length === 0) {
              var disabledCells = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.contentViewChild.nativeElement, '.ui-monthpicker .ui-monthpicker-month.ui-state-disabled[tabindex = "0"]');
              disabledCells.forEach(function (cell) {
                return cell.tabIndex = -1;
              });
            }
          } else {
            cell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, 'a.ui-state-active');

            if (!cell) {
              var todayCell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, 'td.ui-datepicker-today a:not(.ui-state-disabled)');
              if (todayCell) cell = todayCell;else cell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-datepicker-calendar td a');
            }
          }

          if (cell) {
            cell.tabIndex = '0';
          }
        }
      }, {
        key: "trapFocus",
        value: function trapFocus(event) {
          event.preventDefault();
          var focusableElements = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getFocusableElements(this.contentViewChild.nativeElement);

          if (focusableElements && focusableElements.length > 0) {
            if (!document.activeElement) {
              focusableElements[0].focus();
            } else {
              var focusedIndex = focusableElements.indexOf(document.activeElement);

              if (event.shiftKey) {
                if (focusedIndex == -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();
              } else {
                if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();
              }
            }
          }
        }
      }, {
        key: "onMonthDropdownChange",
        value: function onMonthDropdownChange(m) {
          this.currentMonth = parseInt(m);
          this.onMonthChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear
          });
          this.createMonths(this.currentMonth, this.currentYear);
        }
      }, {
        key: "onYearDropdownChange",
        value: function onYearDropdownChange(y) {
          this.currentYear = parseInt(y);
          this.onYearChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear
          });
          this.createMonths(this.currentMonth, this.currentYear);
        }
      }, {
        key: "validateTime",
        value: function validateTime(hour, minute, second, pm) {
          var value = this.value;
          var convertedHour = this.convertTo24Hour(hour, pm);

          if (this.isRangeSelection()) {
            value = this.value[1] || this.value[0];
          }

          if (this.isMultipleSelection()) {
            value = this.value[this.value.length - 1];
          }

          var valueDateString = value ? value.toDateString() : null;

          if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {
            if (this.minDate.getHours() > convertedHour) {
              return false;
            }

            if (this.minDate.getHours() === convertedHour) {
              if (this.minDate.getMinutes() > minute) {
                return false;
              }

              if (this.minDate.getMinutes() === minute) {
                if (this.minDate.getSeconds() > second) {
                  return false;
                }
              }
            }
          }

          if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {
            if (this.maxDate.getHours() < convertedHour) {
              return false;
            }

            if (this.maxDate.getHours() === convertedHour) {
              if (this.maxDate.getMinutes() < minute) {
                return false;
              }

              if (this.maxDate.getMinutes() === minute) {
                if (this.maxDate.getSeconds() < second) {
                  return false;
                }
              }
            }
          }

          return true;
        }
      }, {
        key: "incrementHour",
        value: function incrementHour(event) {
          var prevHour = this.currentHour;
          var newHour = this.currentHour + this.stepHour;
          var newPM = this.pm;
          if (this.hourFormat == '24') newHour = newHour >= 24 ? newHour - 24 : newHour;else if (this.hourFormat == '12') {
            // Before the AM/PM break, now after
            if (prevHour < 12 && newHour > 11) {
              newPM = !this.pm;
            }

            newHour = newHour >= 13 ? newHour - 12 : newHour;
          }

          if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {
            this.currentHour = newHour;
            this.pm = newPM;
          }

          event.preventDefault();
        }
      }, {
        key: "onTimePickerElementMouseDown",
        value: function onTimePickerElementMouseDown(event, type, direction) {
          if (!this.disabled) {
            this.repeat(event, null, type, direction);
            event.preventDefault();
          }
        }
      }, {
        key: "onTimePickerElementMouseUp",
        value: function onTimePickerElementMouseUp(event) {
          if (!this.disabled) {
            this.clearTimePickerTimer();
            this.updateTime();
          }
        }
      }, {
        key: "onTimePickerElementMouseOut",
        value: function onTimePickerElementMouseOut(event) {
          if (!this.disabled) {
            this.clearTimePickerTimer();
            this.updateTime();
          }
        }
      }, {
        key: "repeat",
        value: function repeat(event, interval, type, direction) {
          var _this38 = this;

          var i = interval || 500;
          this.clearTimePickerTimer();
          this.timePickerTimer = setTimeout(function () {
            _this38.repeat(event, 100, type, direction);
          }, i);

          switch (type) {
            case 0:
              if (direction === 1) this.incrementHour(event);else this.decrementHour(event);
              break;

            case 1:
              if (direction === 1) this.incrementMinute(event);else this.decrementMinute(event);
              break;

            case 2:
              if (direction === 1) this.incrementSecond(event);else this.decrementSecond(event);
              break;
          }

          this.updateInputfield();
        }
      }, {
        key: "clearTimePickerTimer",
        value: function clearTimePickerTimer() {
          if (this.timePickerTimer) {
            clearTimeout(this.timePickerTimer);
          }
        }
      }, {
        key: "decrementHour",
        value: function decrementHour(event) {
          var newHour = this.currentHour - this.stepHour;
          var newPM = this.pm;
          if (this.hourFormat == '24') newHour = newHour < 0 ? 24 + newHour : newHour;else if (this.hourFormat == '12') {
            // If we were at noon/midnight, then switch
            if (this.currentHour === 12) {
              newPM = !this.pm;
            }

            newHour = newHour <= 0 ? 12 + newHour : newHour;
          }

          if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {
            this.currentHour = newHour;
            this.pm = newPM;
          }

          event.preventDefault();
        }
      }, {
        key: "incrementMinute",
        value: function incrementMinute(event) {
          var newMinute = this.currentMinute + this.stepMinute;
          newMinute = newMinute > 59 ? newMinute - 60 : newMinute;

          if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {
            this.currentMinute = newMinute;
          }

          event.preventDefault();
        }
      }, {
        key: "decrementMinute",
        value: function decrementMinute(event) {
          var newMinute = this.currentMinute - this.stepMinute;
          newMinute = newMinute < 0 ? 60 + newMinute : newMinute;

          if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {
            this.currentMinute = newMinute;
          }

          event.preventDefault();
        }
      }, {
        key: "incrementSecond",
        value: function incrementSecond(event) {
          var newSecond = this.currentSecond + this.stepSecond;
          newSecond = newSecond > 59 ? newSecond - 60 : newSecond;

          if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {
            this.currentSecond = newSecond;
          }

          event.preventDefault();
        }
      }, {
        key: "decrementSecond",
        value: function decrementSecond(event) {
          var newSecond = this.currentSecond - this.stepSecond;
          newSecond = newSecond < 0 ? 60 + newSecond : newSecond;

          if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {
            this.currentSecond = newSecond;
          }

          event.preventDefault();
        }
      }, {
        key: "updateTime",
        value: function updateTime() {
          var value = this.value;

          if (this.isRangeSelection()) {
            value = this.value[1] || this.value[0];
          }

          if (this.isMultipleSelection()) {
            value = this.value[this.value.length - 1];
          }

          value = value ? new Date(value.getTime()) : new Date();

          if (this.hourFormat == '12') {
            if (this.currentHour === 12) value.setHours(this.pm ? 12 : 0);else value.setHours(this.pm ? this.currentHour + 12 : this.currentHour);
          } else {
            value.setHours(this.currentHour);
          }

          value.setMinutes(this.currentMinute);
          value.setSeconds(this.currentSecond);

          if (this.isRangeSelection()) {
            if (this.value[1]) value = [this.value[0], value];else value = [value, null];
          }

          if (this.isMultipleSelection()) {
            value = [].concat(_toConsumableArray(this.value.slice(0, -1)), [value]);
          }

          this.updateModel(value);
          this.onSelect.emit(value);
          this.updateInputfield();
        }
      }, {
        key: "toggleAMPM",
        value: function toggleAMPM(event) {
          var newPM = !this.pm;

          if (this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, newPM)) {
            this.pm = newPM;
            this.updateTime();
          }

          event.preventDefault();
        }
      }, {
        key: "onUserInput",
        value: function onUserInput(event) {
          // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026
          if (!this.isKeydown) {
            return;
          }

          this.isKeydown = false;
          var val = event.target.value;

          try {
            var value = this.parseValueFromString(val);

            if (this.isValidSelection(value)) {
              this.updateModel(value);
              this.updateUI();
            }
          } catch (err) {
            //invalid date
            this.updateModel(null);
          }

          this.filled = val != null && val.length;
          this.onInput.emit(event);
        }
      }, {
        key: "isValidSelection",
        value: function isValidSelection(value) {
          var _this39 = this;

          var isValid = true;

          if (this.isSingleSelection()) {
            if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {
              isValid = false;
            }
          } else if (value.every(function (v) {
            return _this39.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false);
          })) {
            if (this.isRangeSelection()) {
              isValid = value.length > 1 && value[1] > value[0] ? true : false;
            }
          }

          return isValid;
        }
      }, {
        key: "parseValueFromString",
        value: function parseValueFromString(text) {
          if (!text || text.trim().length === 0) {
            return null;
          }

          var value;

          if (this.isSingleSelection()) {
            value = this.parseDateTime(text);
          } else if (this.isMultipleSelection()) {
            var tokens = text.split(this.multipleSeparator);
            value = [];

            var _iterator7 = _createForOfIteratorHelper(tokens),
                _step7;

            try {
              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                var token = _step7.value;
                value.push(this.parseDateTime(token.trim()));
              }
            } catch (err) {
              _iterator7.e(err);
            } finally {
              _iterator7.f();
            }
          } else if (this.isRangeSelection()) {
            var _tokens = text.split(' ' + this.rangeSeparator + ' ');

            value = [];

            for (var i = 0; i < _tokens.length; i++) {
              value[i] = this.parseDateTime(_tokens[i].trim());
            }
          }

          return value;
        }
      }, {
        key: "parseDateTime",
        value: function parseDateTime(text) {
          var date;
          var parts = text.split(' ');

          if (this.timeOnly) {
            date = new Date();
            this.populateTime(date, parts[0], parts[1]);
          } else {
            var dateFormat = this.getDateFormat();

            if (this.showTime) {
              var ampm = this.hourFormat == '12' ? parts.pop() : null;
              var timeString = parts.pop();
              date = this.parseDate(parts.join(' '), dateFormat);
              this.populateTime(date, timeString, ampm);
            } else {
              date = this.parseDate(text, dateFormat);
            }
          }

          return date;
        }
      }, {
        key: "populateTime",
        value: function populateTime(value, timeString, ampm) {
          if (this.hourFormat == '12' && !ampm) {
            throw 'Invalid Time';
          }

          this.pm = ampm === 'PM' || ampm === 'pm';
          var time = this.parseTime(timeString);
          value.setHours(time.hour);
          value.setMinutes(time.minute);
          value.setSeconds(time.second);
        }
      }, {
        key: "updateUI",
        value: function updateUI() {
          var val = this.value || this.defaultDate || new Date();

          if (Array.isArray(val)) {
            val = val[0];
          }

          this.currentMonth = val.getMonth();
          this.currentYear = val.getFullYear();
          this.createMonths(this.currentMonth, this.currentYear);

          if (this.showTime || this.timeOnly) {
            this.setCurrentHourPM(val.getHours());
            this.currentMinute = val.getMinutes();
            this.currentSecond = val.getSeconds();
          }
        }
      }, {
        key: "showOverlay",
        value: function showOverlay() {
          if (!this.overlayVisible) {
            this.updateUI();
            this.overlayVisible = true;
          }
        }
      }, {
        key: "hideOverlay",
        value: function hideOverlay() {
          this.overlayVisible = false;
          this.clearTimePickerTimer();

          if (this.touchUI) {
            this.disableModality();
          }
        }
      }, {
        key: "toggle",
        value: function toggle() {
          if (!this.inline) {
            if (!this.overlayVisible) {
              this.showOverlay();
              this.inputfieldViewChild.nativeElement.focus();
            } else {
              this.hideOverlay();
            }
          }
        }
      }, {
        key: "onOverlayAnimationStart",
        value: function onOverlayAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
            case 'visibleTouchUI':
              if (!this.inline) {
                this.overlay = event.element;
                this.appendOverlay();

                if (this.autoZIndex) {
                  this.overlay.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].zindex);
                }

                this.alignOverlay();
                this.onShow.emit(event);
              }

              break;

            case 'void':
              this.onOverlayHide();
              this.onClose.emit(event);
              break;
          }
        }
      }, {
        key: "onOverlayAnimationDone",
        value: function onOverlayAnimationDone(event) {
          switch (event.toState) {
            case 'visible':
            case 'visibleTouchUI':
              if (!this.inline) {
                this.bindDocumentClickListener();
                this.bindDocumentResizeListener();
              }

              break;
          }
        }
      }, {
        key: "appendOverlay",
        value: function appendOverlay() {
          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.overlay);else primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].appendChild(this.overlay, this.appendTo);
          }
        }
      }, {
        key: "restoreOverlayAppend",
        value: function restoreOverlayAppend() {
          if (this.overlay && this.appendTo) {
            this.el.nativeElement.appendChild(this.overlay);
          }
        }
      }, {
        key: "alignOverlay",
        value: function alignOverlay() {
          if (this.touchUI) {
            this.enableModality(this.overlay);
          } else {
            if (this.appendTo) primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].absolutePosition(this.overlay, this.inputfieldViewChild.nativeElement);else primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].relativePosition(this.overlay, this.inputfieldViewChild.nativeElement);
          }
        }
      }, {
        key: "enableModality",
        value: function enableModality(element) {
          var _this40 = this;

          if (!this.mask) {
            this.mask = document.createElement('div');
            this.mask.style.zIndex = String(parseInt(element.style.zIndex) - 1);
            var maskStyleClass = 'ui-widget-overlay ui-datepicker-mask ui-datepicker-mask-scrollblocker';
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addMultipleClasses(this.mask, maskStyleClass);
            this.maskClickListener = this.renderer.listen(this.mask, 'click', function (event) {
              _this40.disableModality();
            });
            document.body.appendChild(this.mask);
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(document.body, 'ui-overflow-hidden');
          }
        }
      }, {
        key: "disableModality",
        value: function disableModality() {
          if (this.mask) {
            document.body.removeChild(this.mask);
            var bodyChildren = document.body.children;
            var hasBlockerMasks;

            for (var i = 0; i < bodyChildren.length; i++) {
              var bodyChild = bodyChildren[i];

              if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(bodyChild, 'ui-datepicker-mask-scrollblocker')) {
                hasBlockerMasks = true;
                break;
              }
            }

            if (!hasBlockerMasks) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(document.body, 'ui-overflow-hidden');
            }

            this.unbindMaskClickListener();
            this.mask = null;
          }
        }
      }, {
        key: "unbindMaskClickListener",
        value: function unbindMaskClickListener() {
          if (this.maskClickListener) {
            this.maskClickListener();
            this.maskClickListener = null;
          }
        }
      }, {
        key: "writeValue",
        value: function writeValue(value) {
          this.value = value;

          if (this.value && typeof this.value === 'string') {
            this.value = this.parseValueFromString(this.value);
          }

          this.updateInputfield();
          this.updateUI();
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(val) {
          this.disabled = val;
        }
      }, {
        key: "getDateFormat",
        value: function getDateFormat() {
          return this.dateFormat || this.locale.dateFormat;
        } // Ported from jquery-ui datepicker formatDate

      }, {
        key: "formatDate",
        value: function formatDate(date, format) {
          if (!date) {
            return '';
          }

          var iFormat;

          var lookAhead = function lookAhead(match) {
            var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;

            if (matches) {
              iFormat++;
            }

            return matches;
          },
              formatNumber = function formatNumber(match, value, len) {
            var num = '' + value;

            if (lookAhead(match)) {
              while (num.length < len) {
                num = '0' + num;
              }
            }

            return num;
          },
              formatName = function formatName(match, value, shortNames, longNames) {
            return lookAhead(match) ? longNames[value] : shortNames[value];
          };

          var output = '';
          var literal = false;

          if (date) {
            for (iFormat = 0; iFormat < format.length; iFormat++) {
              if (literal) {
                if (format.charAt(iFormat) === '\'' && !lookAhead('\'')) {
                  literal = false;
                } else {
                  output += format.charAt(iFormat);
                }
              } else {
                switch (format.charAt(iFormat)) {
                  case 'd':
                    output += formatNumber('d', date.getDate(), 2);
                    break;

                  case 'D':
                    output += formatName('D', date.getDay(), this.locale.dayNamesShort, this.locale.dayNames);
                    break;

                  case 'o':
                    output += formatNumber('o', Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                    break;

                  case 'm':
                    output += formatNumber('m', date.getMonth() + 1, 2);
                    break;

                  case 'M':
                    output += formatName('M', date.getMonth(), this.locale.monthNamesShort, this.locale.monthNames);
                    break;

                  case 'y':
                    output += lookAhead('y') ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + date.getFullYear() % 100;
                    break;

                  case '@':
                    output += date.getTime();
                    break;

                  case '!':
                    output += date.getTime() * 10000 + this.ticksTo1970;
                    break;

                  case '\'':
                    if (lookAhead('\'')) {
                      output += '\'';
                    } else {
                      literal = true;
                    }

                    break;

                  default:
                    output += format.charAt(iFormat);
                }
              }
            }
          }

          return output;
        }
      }, {
        key: "formatTime",
        value: function formatTime(date) {
          if (!date) {
            return '';
          }

          var output = '';
          var hours = date.getHours();
          var minutes = date.getMinutes();
          var seconds = date.getSeconds();

          if (this.hourFormat == '12' && hours > 11 && hours != 12) {
            hours -= 12;
          }

          if (this.hourFormat == '12') {
            output += hours === 0 ? 12 : hours < 10 ? '0' + hours : hours;
          } else {
            output += hours < 10 ? '0' + hours : hours;
          }

          output += ':';
          output += minutes < 10 ? '0' + minutes : minutes;

          if (this.showSeconds) {
            output += ':';
            output += seconds < 10 ? '0' + seconds : seconds;
          }

          if (this.hourFormat == '12') {
            output += date.getHours() > 11 ? ' PM' : ' AM';
          }

          return output;
        }
      }, {
        key: "parseTime",
        value: function parseTime(value) {
          var tokens = value.split(':');
          var validTokenLength = this.showSeconds ? 3 : 2;

          if (tokens.length !== validTokenLength) {
            throw "Invalid time";
          }

          var h = parseInt(tokens[0]);
          var m = parseInt(tokens[1]);
          var s = this.showSeconds ? parseInt(tokens[2]) : null;

          if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || this.hourFormat == '12' && h > 12 || this.showSeconds && (isNaN(s) || s > 59)) {
            throw "Invalid time";
          } else {
            if (this.hourFormat == '12') {
              if (h !== 12 && this.pm) {
                h += 12;
              } else if (!this.pm && h === 12) {
                h -= 12;
              }
            }

            return {
              hour: h,
              minute: m,
              second: s
            };
          }
        } // Ported from jquery-ui datepicker parseDate

      }, {
        key: "parseDate",
        value: function parseDate(value, format) {
          if (format == null || value == null) {
            throw "Invalid arguments";
          }

          value = typeof value === "object" ? value.toString() : value + "";

          if (value === "") {
            return null;
          }

          var iFormat,
              dim,
              extra,
              iValue = 0,
              shortYearCutoff = typeof this.shortYearCutoff !== "string" ? this.shortYearCutoff : new Date().getFullYear() % 100 + parseInt(this.shortYearCutoff, 10),
              year = -1,
              month = -1,
              day = -1,
              doy = -1,
              literal = false,
              date,
              lookAhead = function lookAhead(match) {
            var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;

            if (matches) {
              iFormat++;
            }

            return matches;
          },
              getNumber = function getNumber(match) {
            var isDoubled = lookAhead(match),
                size = match === "@" ? 14 : match === "!" ? 20 : match === "y" && isDoubled ? 4 : match === "o" ? 3 : 2,
                minSize = match === "y" ? size : 1,
                digits = new RegExp("^\\d{" + minSize + "," + size + "}"),
                num = value.substring(iValue).match(digits);

            if (!num) {
              throw "Missing number at position " + iValue;
            }

            iValue += num[0].length;
            return parseInt(num[0], 10);
          },
              getName = function getName(match, shortNames, longNames) {
            var index = -1;
            var arr = lookAhead(match) ? longNames : shortNames;
            var names = [];

            for (var i = 0; i < arr.length; i++) {
              names.push([i, arr[i]]);
            }

            names.sort(function (a, b) {
              return -(a[1].length - b[1].length);
            });

            for (var _i2 = 0; _i2 < names.length; _i2++) {
              var name = names[_i2][1];

              if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
                index = names[_i2][0];
                iValue += name.length;
                break;
              }
            }

            if (index !== -1) {
              return index + 1;
            } else {
              throw "Unknown name at position " + iValue;
            }
          },
              checkLiteral = function checkLiteral() {
            if (value.charAt(iValue) !== format.charAt(iFormat)) {
              throw "Unexpected literal at position " + iValue;
            }

            iValue++;
          };

          if (this.view === 'month') {
            day = 1;
          }

          for (iFormat = 0; iFormat < format.length; iFormat++) {
            if (literal) {
              if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
                literal = false;
              } else {
                checkLiteral();
              }
            } else {
              switch (format.charAt(iFormat)) {
                case "d":
                  day = getNumber("d");
                  break;

                case "D":
                  getName("D", this.locale.dayNamesShort, this.locale.dayNames);
                  break;

                case "o":
                  doy = getNumber("o");
                  break;

                case "m":
                  month = getNumber("m");
                  break;

                case "M":
                  month = getName("M", this.locale.monthNamesShort, this.locale.monthNames);
                  break;

                case "y":
                  year = getNumber("y");
                  break;

                case "@":
                  date = new Date(getNumber("@"));
                  year = date.getFullYear();
                  month = date.getMonth() + 1;
                  day = date.getDate();
                  break;

                case "!":
                  date = new Date((getNumber("!") - this.ticksTo1970) / 10000);
                  year = date.getFullYear();
                  month = date.getMonth() + 1;
                  day = date.getDate();
                  break;

                case "'":
                  if (lookAhead("'")) {
                    checkLiteral();
                  } else {
                    literal = true;
                  }

                  break;

                default:
                  checkLiteral();
              }
            }
          }

          if (iValue < value.length) {
            extra = value.substr(iValue);

            if (!/^\s+/.test(extra)) {
              throw "Extra/unparsed characters found in date: " + extra;
            }
          }

          if (year === -1) {
            year = new Date().getFullYear();
          } else if (year < 100) {
            year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100);
          }

          if (doy > -1) {
            month = 1;
            day = doy;

            do {
              dim = this.getDaysCountInMonth(year, month - 1);

              if (day <= dim) {
                break;
              }

              month++;
              day -= dim;
            } while (true);
          }

          date = this.daylightSavingAdjust(new Date(year, month - 1, day));

          if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {
            throw "Invalid date"; // E.g. 31/02/00
          }

          return date;
        }
      }, {
        key: "daylightSavingAdjust",
        value: function daylightSavingAdjust(date) {
          if (!date) {
            return null;
          }

          date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
          return date;
        }
      }, {
        key: "updateFilledState",
        value: function updateFilledState() {
          this.filled = this.inputFieldValue && this.inputFieldValue != '';
        }
      }, {
        key: "onTodayButtonClick",
        value: function onTodayButtonClick(event) {
          var date = new Date();
          var dateMeta = {
            day: date.getDate(),
            month: date.getMonth(),
            year: date.getFullYear(),
            otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,
            today: true,
            selectable: true
          };
          this.onDateSelect(event, dateMeta);
          this.onTodayClick.emit(event);
        }
      }, {
        key: "onClearButtonClick",
        value: function onClearButtonClick(event) {
          this.updateModel(null);
          this.updateInputfield();
          this.hideOverlay();
          this.onClearClick.emit(event);
        }
      }, {
        key: "bindDocumentClickListener",
        value: function bindDocumentClickListener() {
          var _this41 = this;

          if (!this.documentClickListener) {
            this.zone.runOutsideAngular(function () {
              _this41.documentClickListener = _this41.renderer.listen('document', 'click', function (event) {
                if (_this41.isOutsideClicked(event) && _this41.overlayVisible) {
                  _this41.zone.run(function () {
                    _this41.hideOverlay();

                    _this41.onClickOutside.emit(event);

                    _this41.cd.markForCheck();
                  });
                }
              });
            });
          }
        }
      }, {
        key: "unbindDocumentClickListener",
        value: function unbindDocumentClickListener() {
          if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
          }
        }
      }, {
        key: "bindDocumentResizeListener",
        value: function bindDocumentResizeListener() {
          if (!this.documentResizeListener && !this.touchUI) {
            this.documentResizeListener = this.onWindowResize.bind(this);
            window.addEventListener('resize', this.documentResizeListener);
          }
        }
      }, {
        key: "unbindDocumentResizeListener",
        value: function unbindDocumentResizeListener() {
          if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
          }
        }
      }, {
        key: "isOutsideClicked",
        value: function isOutsideClicked(event) {
          return !(this.el.nativeElement.isSameNode(event.target) || this.isNavIconClicked(event) || this.el.nativeElement.contains(event.target) || this.overlay && this.overlay.contains(event.target));
        }
      }, {
        key: "isNavIconClicked",
        value: function isNavIconClicked(event) {
          return primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-datepicker-prev') || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-datepicker-prev-icon') || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-datepicker-next') || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-datepicker-next-icon');
        }
      }, {
        key: "onWindowResize",
        value: function onWindowResize() {
          if (this.overlayVisible && !primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].isAndroid()) {
            this.hideOverlay();
          }
        }
      }, {
        key: "onOverlayHide",
        value: function onOverlayHide() {
          this.unbindDocumentClickListener();
          this.unbindMaskClickListener();
          this.unbindDocumentResizeListener();
          this.overlay = null;
          this.disableModality();
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.clearTimePickerTimer();
          this.restoreOverlayAppend();
          this.onOverlayHide();
        }
      }, {
        key: "content",
        set: function set(content) {
          var _this42 = this;

          this.contentViewChild = content;

          if (this.contentViewChild) {
            if (this.isMonthNavigate) {
              Promise.resolve(null).then(function () {
                return _this42.updateFocus();
              });
              this.isMonthNavigate = false;
            } else {
              this.initFocusableCell();
            }
          }
        }
      }, {
        key: "minDate",
        get: function get() {
          return this._minDate;
        },
        set: function set(date) {
          this._minDate = date;

          if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "maxDate",
        get: function get() {
          return this._maxDate;
        },
        set: function set(date) {
          this._maxDate = date;

          if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "disabledDates",
        get: function get() {
          return this._disabledDates;
        },
        set: function set(disabledDates) {
          this._disabledDates = disabledDates;

          if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "disabledDays",
        get: function get() {
          return this._disabledDays;
        },
        set: function set(disabledDays) {
          this._disabledDays = disabledDays;

          if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "yearRange",
        get: function get() {
          return this._yearRange;
        },
        set: function set(yearRange) {
          this._yearRange = yearRange;

          if (yearRange) {
            var years = yearRange.split(':');
            var yearStart = parseInt(years[0]);
            var yearEnd = parseInt(years[1]);
            this.populateYearOptions(yearStart, yearEnd);
          }
        }
      }, {
        key: "showTime",
        get: function get() {
          return this._showTime;
        },
        set: function set(showTime) {
          this._showTime = showTime;

          if (this.currentHour === undefined) {
            this.initTime(this.value || new Date());
          }

          this.updateInputfield();
        }
      }, {
        key: "locale",
        get: function get() {
          return this._locale;
        },
        set: function set(newLocale) {
          this._locale = newLocale;

          if (this.view === 'date') {
            this.createWeekDays();
            this.createMonths(this.currentMonth, this.currentYear);
          } else if (this.view === 'month') {
            this.createMonthPickerValues();
          }
        }
      }]);

      return Calendar;
    }();

    Calendar.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "defaultDate", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "inputStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "inputStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "placeholder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "ariaLabelledBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "dateFormat", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "multipleSeparator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "rangeSeparator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "inline", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showOtherMonths", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "selectOtherMonths", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "icon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "readonlyInput", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "shortYearCutoff", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "monthNavigator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "yearNavigator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "hourFormat", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "timeOnly", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "stepHour", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "stepMinute", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "stepSecond", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showSeconds", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "required", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showOnFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showWeek", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "dataType", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "selectionMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "maxDateCount", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showButtonBar", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "todayButtonStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "clearButtonStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "autoZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "baseZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "panelStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "panelStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "keepInvalid", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "hideOnDateTimeSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "numberOfMonths", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "view", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "touchUI", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "timeSeparator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "hideTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onBlur", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onClose", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onInput", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onTodayClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onClearClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onMonthChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onYearChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onClickOutside", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_5__["PrimeTemplate"])], Calendar.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('inputfield', {
      static: false
    })], Calendar.prototype, "inputfieldViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('contentWrapper', {
      static: false
    })], Calendar.prototype, "content", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "minDate", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "maxDate", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "disabledDates", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "disabledDays", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "yearRange", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showTime", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "locale", null);

    Calendar = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-calendar',
      template: "\n        <span [ngClass]=\"{'ui-calendar':true, 'ui-calendar-w-btn': showIcon, 'ui-calendar-timeonly': timeOnly}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ng-template [ngIf]=\"!inline\">\n                <input #inputfield type=\"text\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.required]=\"required\" [attr.aria-required]=\"required\" [value]=\"inputFieldValue\" (focus)=\"onInputFocus($event)\" (keydown)=\"onInputKeydown($event)\" (click)=\"onInputClick($event)\" (blur)=\"onInputBlur($event)\"\n                    [readonly]=\"readonlyInput\" (input)=\"onUserInput($event)\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [placeholder]=\"placeholder||''\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\"\n                    [ngClass]=\"'ui-inputtext ui-widget ui-state-default ui-corner-all'\" autocomplete=\"off\" [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    ><button type=\"button\" [icon]=\"icon\" pButton *ngIf=\"showIcon\" (click)=\"onButtonClick($event,inputfield)\" class=\"ui-datepicker-trigger ui-calendar-button\"\n                    [ngClass]=\"{'ui-state-disabled':disabled}\" [disabled]=\"disabled\" tabindex=\"0\"></button>\n            </ng-template>\n            <div #contentWrapper [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" [ngClass]=\"{'ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all': true, 'ui-datepicker-inline':inline,'ui-shadow':!inline,\n                'ui-state-disabled':disabled,'ui-datepicker-timeonly':timeOnly,'ui-datepicker-multiple-month': this.numberOfMonths > 1, 'ui-datepicker-monthpicker': (view === 'month'), 'ui-datepicker-touch-ui': touchUI}\"\n                [@overlayAnimation]=\"touchUI ? {value: 'visibleTouchUI', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}: \n                                            {value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" \n                                            [@.disabled]=\"inline === true\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationDone($event)\" *ngIf=\"inline || overlayVisible\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngIf=\"!timeOnly\">\n                    <div class=\"ui-datepicker-group ui-widget-content\" *ngFor=\"let month of months; let i = index;\">\n                        <div class=\"ui-datepicker-header ui-widget-header ui-helper-clearfix ui-corner-all\">\n                            <a class=\"ui-datepicker-prev ui-corner-all\" (click)=\"onPrevButtonClick($event)\" (keydown.enter)=\"onPrevButtonClick($event)\" *ngIf=\"i === 0\" tabindex=\"0\" (keydown)=\"onInputKeydown($event)\">\n                                <span class=\"ui-datepicker-prev-icon pi pi-chevron-left\"></span>\n                            </a>\n                            <div class=\"ui-datepicker-title\">\n                                <span class=\"ui-datepicker-month\" *ngIf=\"!monthNavigator && (view !== 'month')\">{{locale.monthNames[month.month]}}</span>\n                                <select tabindex=\"0\" class=\"ui-datepicker-month\" *ngIf=\"monthNavigator && (view !== 'month') && numberOfMonths === 1\" (change)=\"onMonthDropdownChange($event.target.value)\">\n                                    <option [value]=\"i\" *ngFor=\"let monthName of locale.monthNames;let i = index\" [selected]=\"i === month.month\">{{monthName}}</option>\n                                </select>\n                                <select tabindex=\"0\" class=\"ui-datepicker-year\" *ngIf=\"yearNavigator && numberOfMonths === 1\" (change)=\"onYearDropdownChange($event.target.value)\">\n                                    <option [value]=\"year\" *ngFor=\"let year of yearOptions\" [selected]=\"year === currentYear\">{{year}}</option>\n                                </select>\n                                <span class=\"ui-datepicker-year\" *ngIf=\"!yearNavigator\">{{view === 'month' ? currentYear : month.year}}</span>\n                            </div>\n                            <a class=\"ui-datepicker-next ui-corner-all\" (click)=\"onNextButtonClick($event)\" (keydown.enter)=\"onNextButtonClick($event)\" *ngIf=\"numberOfMonths === 1 ? true : (i === numberOfMonths -1)\" tabindex=\"0\" (keydown)=\"onInputKeydown($event)\">\n                                <span class=\"ui-datepicker-next-icon pi pi-chevron-right\"></span>\n                            </a>\n                        </div>\n                        <div class=\"ui-datepicker-calendar-container\" *ngIf=\"view ==='date'\">\n                            <table class=\"ui-datepicker-calendar\">\n                                <thead>\n                                    <tr>\n                                        <th *ngIf=\"showWeek\" class=\"ui-datepicker-weekheader\">\n                                            <span>{{locale['weekHeader']}}</span>\n                                        </th>\n                                        <th scope=\"col\" *ngFor=\"let weekDay of weekDays;let begin = first; let end = last\">\n                                            <span>{{weekDay}}</span>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let week of month.dates; let j = index;\">\n                                        <td *ngIf=\"showWeek\" class=\"ui-datepicker-weeknumber ui-state-disabled\">\n                                            <span>\n                                                {{month.weekNumbers[j]}}\n                                            </span>\n                                        </td>\n                                        <td *ngFor=\"let date of week\" [ngClass]=\"{'ui-datepicker-other-month': date.otherMonth,\n                                            'ui-datepicker-current-day':isSelected(date),'ui-datepicker-today':date.today}\">\n                                            <ng-container *ngIf=\"date.otherMonth ? showOtherMonths : true\">\n                                                <a class=\"ui-state-default\" *ngIf=\"date.selectable\" [ngClass]=\"{'ui-state-active':isSelected(date), 'ui-state-highlight':date.today}\"\n                                                    (click)=\"onDateSelect($event,date)\" draggable=\"false\" (keydown)=\"onDateCellKeydown($event,date,i)\">\n                                                    <ng-container *ngIf=\"!dateTemplate\">{{date.day}}</ng-container>\n                                                    <ng-container *ngTemplateOutlet=\"dateTemplate; context: {$implicit: date}\"></ng-container>\n                                                </a>\n                                                <span class=\"ui-state-default ui-state-disabled\" [ngClass]=\"{'ui-state-active':isSelected(date), 'ui-state-highlight':date.today}\" *ngIf=\"!date.selectable\">\n                                                    <ng-container *ngIf=\"!disabledDateTemplate\">{{date.day}}</ng-container>\n                                                    <ng-container *ngTemplateOutlet=\"disabledDateTemplate; context: {$implicit: date}\"></ng-container>\n                                                </span>\n                                            </ng-container>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div class=\"ui-monthpicker\" *ngIf=\"view === 'month'\">\n                        <a  *ngFor=\"let m of monthPickerValues; let i = index\" (click)=\"onMonthSelect($event, i)\" (keydown)=\"onMonthCellKeydown($event,i)\" class=\"ui-monthpicker-month\" [ngClass]=\"{'ui-state-active': isMonthSelected(i), 'ui-state-disabled':!isSelectable(1, i, this.currentYear, false)}\">\n                            {{m}}\n                        </a>\n                    </div>\n                </ng-container>\n                <div class=\"ui-timepicker ui-widget-header ui-corner-all\" *ngIf=\"showTime||timeOnly\">\n                    <div class=\"ui-hour-picker\">\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementHour($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 0, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span [ngStyle]=\"{'display': currentHour < 10 ? 'inline': 'none'}\">0</span><span>{{currentHour}}</span>\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementHour($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 0, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-separator\">\n                        <a>\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span>{{timeSeparator}}</span>\n                        <a>\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-minute-picker\">\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementMinute($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 1, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span [ngStyle]=\"{'display': currentMinute < 10 ? 'inline': 'none'}\">0</span><span>{{currentMinute}}</span>\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementMinute($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 1, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-separator\" *ngIf=\"showSeconds\">\n                        <a>\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span>{{timeSeparator}}</span>\n                        <a>\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-second-picker\" *ngIf=\"showSeconds\">\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementSecond($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 2, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span [ngStyle]=\"{'display': currentSecond < 10 ? 'inline': 'none'}\">0</span><span>{{currentSecond}}</span>\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementSecond($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 2, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-ampm-picker\" *ngIf=\"hourFormat=='12'\">\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"toggleAMPM($event)\" (keydown.enter)=\"toggleAMPM($event)\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span>{{pm ? 'PM' : 'AM'}}</span>\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"toggleAMPM($event)\" (keydown.enter)=\"toggleAMPM($event)\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui-datepicker-buttonbar ui-widget-header\" *ngIf=\"showButtonBar\">\n                    <div class=\"ui-g\">\n                        <div class=\"ui-g-6\">\n                            <button type=\"button\" tabindex=\"0\" [label]=\"_locale.today\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"onTodayButtonClick($event)\" pButton [ngClass]=\"[todayButtonStyleClass]\"></button>\n                        </div>\n                        <div class=\"ui-g-6\">\n                            <button type=\"button\" tabindex=\"0\" [label]=\"_locale.clear\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"onClearButtonClick($event)\" pButton [ngClass]=\"[clearButtonStyleClass]\"></button>\n                        </div>\n                    </div>\n                </div>\n                <ng-content select=\"p-footer\"></ng-content>\n            </div>\n        </span>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('overlayAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translateY(0)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('visibleTouchUI', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translate(-50%,-50%)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visible', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translateY(5%)',
        opacity: 0
      }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{showTransitionParams}}')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visible => void', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{hideTransitionParams}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        opacity: 0,
        transform: 'translateY(5%)'
      }))]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visibleTouchUI', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        opacity: 0,
        transform: 'translate3d(-50%, -40%, 0) scale(0.9)'
      }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{showTransitionParams}}')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visibleTouchUI => void', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{hideTransitionParams}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        opacity: 0,
        transform: 'translate3d(-50%, -40%, 0) scale(0.9)'
      }))])])],
      host: {
        '[class.ui-inputwrapper-filled]': 'filled',
        '[class.ui-inputwrapper-focus]': 'focus'
      },
      providers: [CALENDAR_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Calendar);

    var CalendarModule = function CalendarModule() {
      _classCallCheck(this, CalendarModule);
    };

    CalendarModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], primeng_button__WEBPACK_IMPORTED_MODULE_3__["ButtonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"]],
      exports: [Calendar, primeng_button__WEBPACK_IMPORTED_MODULE_3__["ButtonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"]],
      declarations: [Calendar]
    })], CalendarModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-calendar.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-card.js":
  /*!*******************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-card.js ***!
    \*******************************************************/

  /*! exports provided: Card, CardModule */

  /***/
  function node_modulesPrimengFesm2015PrimengCardJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Card", function () {
      return Card;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CardModule", function () {
      return CardModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var Card =
    /*#__PURE__*/
    function () {
      function Card(el) {
        _classCallCheck(this, Card);

        this.el = el;
      }

      _createClass(Card, [{
        key: "getBlockableElement",
        value: function getBlockableElement() {
          return this.el.nativeElement.children[0];
        }
      }]);

      return Card;
    }();

    Card.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Card.prototype, "header", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Card.prototype, "subheader", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Card.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Card.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["Header"])], Card.prototype, "headerFacet", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["Footer"])], Card.prototype, "footerFacet", void 0);

    Card = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-card',
      template: "\n        <div [ngClass]=\"'ui-card ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-card-header\" *ngIf=\"headerFacet\">\n               <ng-content select=\"p-header\"></ng-content>\n            </div>\n            <div class=\"ui-card-body\">\n                <div class=\"ui-card-title\" *ngIf=\"header\">{{header}}</div>\n                <div class=\"ui-card-subtitle\" *ngIf=\"subheader\">{{subheader}}</div>\n                <div class=\"ui-card-content\">\n                    <ng-content></ng-content>\n                </div>\n                <div class=\"ui-card-footer\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Card);

    var CardModule = function CardModule() {
      _classCallCheck(this, CardModule);
    };

    CardModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [Card, primeng_api__WEBPACK_IMPORTED_MODULE_2__["SharedModule"]],
      declarations: [Card]
    })], CardModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-card.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-carousel.js":
  /*!***********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-carousel.js ***!
    \***********************************************************/

  /*! exports provided: Carousel, CarouselModule */

  /***/
  function node_modulesPrimengFesm2015PrimengCarouselJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Carousel", function () {
      return Carousel;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CarouselModule", function () {
      return CarouselModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var Carousel =
    /*#__PURE__*/
    function () {
      function Carousel(el, zone) {
        _classCallCheck(this, Carousel);

        this.el = el;
        this.zone = zone;
        this.orientation = "horizontal";
        this.verticalViewPortHeight = "300px";
        this.contentClass = "";
        this.dotsContainerClass = "";
        this.circular = false;
        this.autoplayInterval = 0;
        this.onPage = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this._numVisible = 1;
        this._numScroll = 1;
        this._oldNumScroll = 0;
        this.prevState = {
          numScroll: 0,
          numVisible: 0,
          value: []
        };
        this.defaultNumScroll = 1;
        this.defaultNumVisible = 1;
        this._page = 0;
        this.isRemainingItemsAdded = false;
        this.remainingItems = 0;
        this.totalShiftedItems = this.page * this.numScroll * -1;
      }

      _createClass(Carousel, [{
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this43 = this;

          this.id = Object(primeng_utils__WEBPACK_IMPORTED_MODULE_3__["UniqueComponentId"])();
          this.allowAutoplay = !!this.autoplayInterval;

          if (this.circular) {
            this.setCloneItems();
          }

          if (this.responsiveOptions) {
            this.defaultNumScroll = this._numScroll;
            this.defaultNumVisible = this._numVisible;
          }

          this.createStyle();
          this.calculatePosition();

          if (this.responsiveOptions) {
            this.bindDocumentListeners();
          }

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'item':
                _this43.itemTemplate = item.template;
                break;

              default:
                _this43.itemTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "ngAfterContentChecked",
        value: function ngAfterContentChecked() {
          var isCircular = this.isCircular();
          var totalShiftedItems = this.totalShiftedItems;

          if (this.value && (this.prevState.numScroll !== this._numScroll || this.prevState.numVisible !== this._numVisible || this.prevState.value.length !== this.value.length)) {
            if (this.autoplayInterval) {
              this.stopAutoplay();
            }

            this.remainingItems = (this.value.length - this._numVisible) % this._numScroll;
            var page = this._page;

            if (this.totalDots() !== 0 && page >= this.totalDots()) {
              page = this.totalDots() - 1;
              this._page = page;
              this.onPage.emit({
                page: this.page
              });
            }

            totalShiftedItems = page * this._numScroll * -1;

            if (isCircular) {
              totalShiftedItems -= this._numVisible;
            }

            if (page === this.totalDots() - 1 && this.remainingItems > 0) {
              totalShiftedItems += -1 * this.remainingItems + this._numScroll;
              this.isRemainingItemsAdded = true;
            } else {
              this.isRemainingItemsAdded = false;
            }

            if (totalShiftedItems !== this.totalShiftedItems) {
              this.totalShiftedItems = totalShiftedItems;
            }

            this._oldNumScroll = this._numScroll;
            this.prevState.numScroll = this._numScroll;
            this.prevState.numVisible = this._numVisible;
            this.prevState.value = this._value;

            if (this.totalDots() > 0 && this.itemsContainer && this.itemsContainer.nativeElement) {
              this.itemsContainer.nativeElement.style.transform = this.isVertical() ? "translate3d(0, ".concat(totalShiftedItems * (100 / this._numVisible), "%, 0)") : "translate3d(".concat(totalShiftedItems * (100 / this._numVisible), "%, 0, 0)");
            }

            this.isCreated = true;

            if (this.autoplayInterval && this.isAutoplay()) {
              this.startAutoplay();
            }
          }

          if (isCircular) {
            if (this.page === 0) {
              totalShiftedItems = -1 * this._numVisible;
            } else if (totalShiftedItems === 0) {
              totalShiftedItems = -1 * this.value.length;

              if (this.remainingItems > 0) {
                this.isRemainingItemsAdded = true;
              }
            }

            if (totalShiftedItems !== this.totalShiftedItems) {
              this.totalShiftedItems = totalShiftedItems;
            }
          }
        }
      }, {
        key: "createStyle",
        value: function createStyle() {
          if (!this.carouselStyle) {
            this.carouselStyle = document.createElement('style');
            this.carouselStyle.type = 'text/css';
            document.body.appendChild(this.carouselStyle);
          }

          var innerHTML = "\n            #".concat(this.id, " .ui-carousel-item {\n\t\t\t\tflex: 1 0 ").concat(100 / this.numVisible, "%\n\t\t\t}\n        ");

          if (this.responsiveOptions) {
            this.responsiveOptions.sort(function (data1, data2) {
              var value1 = data1.breakpoint;
              var value2 = data2.breakpoint;
              var result = null;
              if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2, undefined, {
                numeric: true
              });else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;
              return -1 * result;
            });

            for (var i = 0; i < this.responsiveOptions.length; i++) {
              var res = this.responsiveOptions[i];
              innerHTML += "\n                    @media screen and (max-width: ".concat(res.breakpoint, ") {\n                        #").concat(this.id, " .ui-carousel-item {\n                            flex: 1 0 ").concat(100 / res.numVisible, "%\n                        }\n                    }\n                ");
            }
          }

          this.carouselStyle.innerHTML = innerHTML;
        }
      }, {
        key: "calculatePosition",
        value: function calculatePosition() {
          if (this.itemsContainer && this.responsiveOptions) {
            var windowWidth = window.innerWidth;
            var matchedResponsiveData = {
              numVisible: this.defaultNumVisible,
              numScroll: this.defaultNumScroll
            };

            for (var i = 0; i < this.responsiveOptions.length; i++) {
              var res = this.responsiveOptions[i];

              if (parseInt(res.breakpoint, 10) >= windowWidth) {
                matchedResponsiveData = res;
              }
            }

            if (this._numScroll !== matchedResponsiveData.numScroll) {
              var page = this._page;
              page = Math.floor(page * this._numScroll / matchedResponsiveData.numScroll);
              var totalShiftedItems = matchedResponsiveData.numScroll * this.page * -1;

              if (this.isCircular()) {
                totalShiftedItems -= matchedResponsiveData.numVisible;
              }

              this.totalShiftedItems = totalShiftedItems;
              this._numScroll = matchedResponsiveData.numScroll;
              this._page = page;
              this.onPage.emit({
                page: this.page
              });
            }

            if (this._numVisible !== matchedResponsiveData.numVisible) {
              this._numVisible = matchedResponsiveData.numVisible;
              this.setCloneItems();
            }
          }
        }
      }, {
        key: "setCloneItems",
        value: function setCloneItems() {
          this.clonedItemsForStarting = [];
          this.clonedItemsForFinishing = [];

          if (this.isCircular()) {
            var _this$clonedItemsForS, _this$clonedItemsForF;

            (_this$clonedItemsForS = this.clonedItemsForStarting).push.apply(_this$clonedItemsForS, _toConsumableArray(this.value.slice(-1 * this._numVisible)));

            (_this$clonedItemsForF = this.clonedItemsForFinishing).push.apply(_this$clonedItemsForF, _toConsumableArray(this.value.slice(0, this._numVisible)));
          }
        }
      }, {
        key: "firstIndex",
        value: function firstIndex() {
          return this.isCircular() ? -1 * (this.totalShiftedItems + this.numVisible) : this.totalShiftedItems * -1;
        }
      }, {
        key: "lastIndex",
        value: function lastIndex() {
          return this.firstIndex() + this.numVisible - 1;
        }
      }, {
        key: "totalDots",
        value: function totalDots() {
          return this.value ? Math.ceil((this.value.length - this._numVisible) / this._numScroll) + 1 : 0;
        }
      }, {
        key: "totalDotsArray",
        value: function totalDotsArray() {
          var totalDots = this.totalDots();
          return totalDots <= 0 ? [] : Array(totalDots).fill(0);
        }
      }, {
        key: "containerClass",
        value: function containerClass() {
          return {
            'ui-carousel ui-widget': true,
            'ui-carousel-vertical': this.isVertical(),
            'ui-carousel-horizontal': !this.isVertical()
          };
        }
      }, {
        key: "contentClasses",
        value: function contentClasses() {
          return 'ui-carousel-content ' + this.contentClass;
        }
      }, {
        key: "dotsContentClasses",
        value: function dotsContentClasses() {
          return 'ui-carousel-dots-container ui-helper-reset ' + this.dotsContainerClass;
        }
      }, {
        key: "isVertical",
        value: function isVertical() {
          return this.orientation === 'vertical';
        }
      }, {
        key: "isCircular",
        value: function isCircular() {
          return this.circular && this.value && this.value.length >= this.numVisible;
        }
      }, {
        key: "isAutoplay",
        value: function isAutoplay() {
          return this.autoplayInterval && this.allowAutoplay;
        }
      }, {
        key: "isForwardNavDisabled",
        value: function isForwardNavDisabled() {
          return this.isEmpty() || this._page >= this.totalDots() - 1 && !this.isCircular();
        }
      }, {
        key: "isBackwardNavDisabled",
        value: function isBackwardNavDisabled() {
          return this.isEmpty() || this._page <= 0 && !this.isCircular();
        }
      }, {
        key: "isEmpty",
        value: function isEmpty() {
          return !this.value || this.value.length === 0;
        }
      }, {
        key: "navForward",
        value: function navForward(e, index) {
          if (this.isCircular() || this._page < this.totalDots() - 1) {
            this.step(-1, index);
          }

          if (this.autoplayInterval) {
            this.stopAutoplay();
            this.allowAutoplay = false;
          }

          if (e && e.cancelable) {
            e.preventDefault();
          }
        }
      }, {
        key: "navBackward",
        value: function navBackward(e, index) {
          if (this.isCircular() || this._page !== 0) {
            this.step(1, index);
          }

          if (this.autoplayInterval) {
            this.stopAutoplay();
            this.allowAutoplay = false;
          }

          if (e && e.cancelable) {
            e.preventDefault();
          }
        }
      }, {
        key: "onDotClick",
        value: function onDotClick(e, index) {
          var page = this._page;

          if (this.autoplayInterval) {
            this.stopAutoplay();
            this.allowAutoplay = false;
          }

          if (index > page) {
            this.navForward(e, index);
          } else if (index < page) {
            this.navBackward(e, index);
          }
        }
      }, {
        key: "step",
        value: function step(dir, page) {
          var totalShiftedItems = this.totalShiftedItems;
          var isCircular = this.isCircular();

          if (page != null) {
            totalShiftedItems = this._numScroll * page * -1;

            if (isCircular) {
              totalShiftedItems -= this._numVisible;
            }

            this.isRemainingItemsAdded = false;
          } else {
            totalShiftedItems += this._numScroll * dir;

            if (this.isRemainingItemsAdded) {
              totalShiftedItems += this.remainingItems - this._numScroll * dir;
              this.isRemainingItemsAdded = false;
            }

            var originalShiftedItems = isCircular ? totalShiftedItems + this._numVisible : totalShiftedItems;
            page = Math.abs(Math.floor(originalShiftedItems / this._numScroll));
          }

          if (isCircular && this.page === this.totalDots() - 1 && dir === -1) {
            totalShiftedItems = -1 * (this.value.length + this._numVisible);
            page = 0;
          } else if (isCircular && this.page === 0 && dir === 1) {
            totalShiftedItems = 0;
            page = this.totalDots() - 1;
          } else if (page === this.totalDots() - 1 && this.remainingItems > 0) {
            totalShiftedItems += this.remainingItems * -1 - this._numScroll * dir;
            this.isRemainingItemsAdded = true;
          }

          if (this.itemsContainer) {
            this.itemsContainer.nativeElement.style.transform = this.isVertical() ? "translate3d(0, ".concat(totalShiftedItems * (100 / this._numVisible), "%, 0)") : "translate3d(".concat(totalShiftedItems * (100 / this._numVisible), "%, 0, 0)");
            this.itemsContainer.nativeElement.style.transition = 'transform 500ms ease 0s';
          }

          this.totalShiftedItems = totalShiftedItems;
          this._page = page;
          this.onPage.emit({
            page: this.page
          });
        }
      }, {
        key: "startAutoplay",
        value: function startAutoplay() {
          var _this44 = this;

          this.interval = setInterval(function () {
            if (_this44.totalDots() > 0) {
              if (_this44.page === _this44.totalDots() - 1) {
                _this44.step(-1, 0);
              } else {
                _this44.step(-1, _this44.page + 1);
              }
            }
          }, this.autoplayInterval);
        }
      }, {
        key: "stopAutoplay",
        value: function stopAutoplay() {
          if (this.interval) {
            clearInterval(this.interval);
          }
        }
      }, {
        key: "onTransitionEnd",
        value: function onTransitionEnd() {
          if (this.itemsContainer) {
            this.itemsContainer.nativeElement.style.transition = '';

            if ((this.page === 0 || this.page === this.totalDots() - 1) && this.isCircular()) {
              this.itemsContainer.nativeElement.style.transform = this.isVertical() ? "translate3d(0, ".concat(this.totalShiftedItems * (100 / this._numVisible), "%, 0)") : "translate3d(".concat(this.totalShiftedItems * (100 / this._numVisible), "%, 0, 0)");
            }
          }
        }
      }, {
        key: "onTouchStart",
        value: function onTouchStart(e) {
          var touchobj = e.changedTouches[0];
          this.startPos = {
            x: touchobj.pageX,
            y: touchobj.pageY
          };
        }
      }, {
        key: "onTouchMove",
        value: function onTouchMove(e) {
          if (e.cancelable) {
            e.preventDefault();
          }
        }
      }, {
        key: "onTouchEnd",
        value: function onTouchEnd(e) {
          var touchobj = e.changedTouches[0];

          if (this.isVertical()) {
            this.changePageOnTouch(e, touchobj.pageY - this.startPos.y);
          } else {
            this.changePageOnTouch(e, touchobj.pageX - this.startPos.x);
          }
        }
      }, {
        key: "changePageOnTouch",
        value: function changePageOnTouch(e, diff) {
          if (diff < 0) {
            this.navForward(e);
          } else {
            this.navBackward(e);
          }
        }
      }, {
        key: "bindDocumentListeners",
        value: function bindDocumentListeners() {
          var _this45 = this;

          if (!this.documentResizeListener) {
            this.documentResizeListener = function (e) {
              _this45.calculatePosition();
            };

            window.addEventListener('resize', this.documentResizeListener);
          }
        }
      }, {
        key: "unbindDocumentListeners",
        value: function unbindDocumentListeners() {
          if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.responsiveOptions) {
            this.unbindDocumentListeners();
          }

          if (this.autoplayInterval) {
            this.stopAutoplay();
          }
        }
      }, {
        key: "page",
        get: function get() {
          return this._page;
        },
        set: function set(val) {
          if (this.isCreated && val !== this._page) {
            if (this.autoplayInterval) {
              this.stopAutoplay();
              this.allowAutoplay = false;
            }

            if (val > this._page && val < this.totalDots() - 1) {
              this.step(-1, val);
            } else if (val < this._page && val !== 0) {
              this.step(1, val);
            }
          }

          this._page = val;
        }
      }, {
        key: "numVisible",
        get: function get() {
          return this._numVisible;
        },
        set: function set(val) {
          this._numVisible = val;
        }
      }, {
        key: "numScroll",
        get: function get() {
          return this._numVisible;
        },
        set: function set(val) {
          this._numScroll = val;
        }
      }, {
        key: "value",
        get: function get() {
          return this._value;
        },
        set: function set(val) {
          this._value = val;

          if (this.circular && this._value) {
            this.setCloneItems();
          }
        }
      }]);

      return Carousel;
    }();

    Carousel.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "page", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "numVisible", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "numScroll", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "responsiveOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "orientation", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "verticalViewPortHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "contentClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "dotsContainerClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "value", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "circular", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "autoplayInterval", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Carousel.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Carousel.prototype, "onPage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('itemsContainer')], Carousel.prototype, "itemsContainer", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_1__["Header"])], Carousel.prototype, "headerFacet", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_1__["Footer"])], Carousel.prototype, "footerFacet", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_1__["PrimeTemplate"])], Carousel.prototype, "templates", void 0);

    Carousel = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-carousel',
      template: "\n\t\t<div [attr.id]=\"id\" [ngClass]=\"containerClass()\" [ngStyle]=\"style\" [class]=\"styleClass\">\n\t\t\t<div class=\"ui-carousel-header\" *ngIf=\"headerFacet\">\n\t\t\t\t<ng-content select=\"p-header\"></ng-content>\n\t\t\t</div>\n\t\t\t<div [class]=\"contentClasses()\">\n\t\t\t\t<div class=\"ui-carousel-container\">\n\t\t\t\t\t<button [ngClass]=\"{'ui-carousel-prev ui-button ui-widget ui-state-default ui-corner-all':true, 'ui-state-disabled': isBackwardNavDisabled()}\" [disabled]=\"isBackwardNavDisabled()\" (click)=\"navBackward($event)\">\n\t\t\t\t\t\t<span [ngClass]=\"{'ui-carousel-prev-icon pi': true, 'pi-chevron-left': !isVertical(), 'pi-chevron-up': isVertical()}\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<div class=\"ui-carousel-items-content\" [ngStyle]=\"{'height': isVertical() ? verticalViewPortHeight : 'auto'}\">\n\t\t\t\t\t\t<div #itemsContainer class=\"ui-carousel-items-container\" (transitionend)=\"onTransitionEnd()\" (touchend)=\"onTouchEnd($event)\" (touchstart)=\"onTouchStart($event)\" (touchmove)=\"onTouchMove($event)\">\n\t\t\t\t\t\t\t<div *ngFor=\"let item of clonedItemsForStarting; let index = index\" [ngClass]= \"{'ui-carousel-item ui-carousel-item-cloned': true,'ui-carousel-item-active': (totalShiftedItems * -1) === (value.length),\n\t\t\t\t\t\t\t'ui-carousel-item-start': 0 === index,\n\t\t\t\t\t\t\t'ui-carousel-item-end': (clonedItemsForStarting.length - 1) === index}\">\n\t\t\t\t\t\t\t\t<ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div *ngFor=\"let item of value; let index = index\" [ngClass]= \"{'ui-carousel-item': true,'ui-carousel-item-active': (firstIndex() <= index && lastIndex() >= index),\n\t\t\t\t\t\t\t'ui-carousel-item-start': firstIndex() === index,\n\t\t\t\t\t\t\t'ui-carousel-item-end': lastIndex() === index}\">\n\t\t\t\t\t\t\t\t<ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div *ngFor=\"let item of clonedItemsForFinishing; let index = index\" [ngClass]= \"{'ui-carousel-item ui-carousel-item-cloned': true,'ui-carousel-item-active': ((totalShiftedItems *-1) === numVisible),\n\t\t\t\t\t\t\t'ui-carousel-item-start': 0 === index,\n\t\t\t\t\t\t\t'ui-carousel-item-end': (clonedItemsForFinishing.length - 1) === index}\">\n\t\t\t\t\t\t\t\t<ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button [ngClass]=\"{'ui-carousel-next ui-button ui-widget ui-state-default ui-corner-all': true, 'ui-state-disabled': isForwardNavDisabled()}\" [disabled]=\"isForwardNavDisabled()\" (click)=\"navForward($event)\">\n\t\t\t\t\t\t<span [ngClass]=\"{'ui-carousel-next-icon pi': true, 'pi-chevron-right': !isVertical(), 'pi-chevron-down': isVertical()}\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<ul [class]=\"dotsContentClasses()\">\n\t\t\t\t\t<li *ngFor=\"let totalDot of totalDotsArray(); let i = index\" [ngClass]=\"{'ui-carousel-dot-item':true,'ui-state-highlight': _page === i}\">\n\t\t\t\t\t\t<button class=\"ui-button ui-widget ui-state-default ui-corner-all\" (click)=\"onDotClick($event, i)\">\n\t\t\t\t\t\t\t<span [ngClass]=\"{'ui-carousel-dot-icon pi':true, 'pi-circle-on': _page === i, 'pi-circle-off': !(_page === i)}\"></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"ui-carousel-footer\" *ngIf=\"footerFacet\">\n\t\t\t\t<ng-content select=\"p-footer\"></ng-content>\n\t\t\t</div>\n\t\t</div>\n    ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Carousel);

    var CarouselModule = function CarouselModule() {
      _classCallCheck(this, CarouselModule);
    };

    CarouselModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_1__["SharedModule"]],
      exports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], Carousel, primeng_api__WEBPACK_IMPORTED_MODULE_1__["SharedModule"]],
      declarations: [Carousel]
    })], CarouselModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-carousel.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-checkbox.js":
  /*!***********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-checkbox.js ***!
    \***********************************************************/

  /*! exports provided: CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxModule */

  /***/
  function node_modulesPrimengFesm2015PrimengCheckboxJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CHECKBOX_VALUE_ACCESSOR", function () {
      return CHECKBOX_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Checkbox", function () {
      return Checkbox;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CheckboxModule", function () {
      return CheckboxModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var CHECKBOX_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
        return Checkbox;
      }),
      multi: true
    };

    var Checkbox =
    /*#__PURE__*/
    function () {
      function Checkbox(cd) {
        _classCallCheck(this, Checkbox);

        this.cd = cd;
        this.checkboxIcon = 'pi pi-check';
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

        this.onModelChange = function () {};

        this.onModelTouched = function () {};

        this.focused = false;
        this.checked = false;
      }

      _createClass(Checkbox, [{
        key: "onClick",
        value: function onClick(event, checkbox, focus) {
          event.preventDefault();

          if (this.disabled || this.readonly) {
            return;
          }

          this.checked = !this.checked;
          this.updateModel();

          if (focus) {
            checkbox.focus();
          }
        }
      }, {
        key: "updateModel",
        value: function updateModel() {
          if (!this.binary) {
            if (this.checked) this.addValue();else this.removeValue();
            this.onModelChange(this.model);

            if (this.formControl) {
              this.formControl.setValue(this.model);
            }
          } else {
            this.onModelChange(this.checked);
          }

          this.onChange.emit(this.checked);
        }
      }, {
        key: "handleChange",
        value: function handleChange(event) {
          if (!this.readonly) {
            this.checked = event.target.checked;
            this.updateModel();
          }
        }
      }, {
        key: "isChecked",
        value: function isChecked() {
          if (this.binary) return this.model;else return this.model && this.model.indexOf(this.value) > -1;
        }
      }, {
        key: "removeValue",
        value: function removeValue() {
          var _this46 = this;

          this.model = this.model.filter(function (val) {
            return val !== _this46.value;
          });
        }
      }, {
        key: "addValue",
        value: function addValue() {
          if (this.model) this.model = [].concat(_toConsumableArray(this.model), [this.value]);else this.model = [this.value];
        }
      }, {
        key: "onFocus",
        value: function onFocus() {
          this.focused = true;
        }
      }, {
        key: "onBlur",
        value: function onBlur() {
          this.focused = false;
          this.onModelTouched();
        }
      }, {
        key: "focus",
        value: function focus() {
          this.inputViewChild.nativeElement.focus();
        }
      }, {
        key: "writeValue",
        value: function writeValue(model) {
          this.model = model;
          this.checked = this.isChecked();
          this.cd.markForCheck();
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(val) {
          this.disabled = val;
        }
      }]);

      return Checkbox;
    }();

    Checkbox.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "value", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "binary", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "label", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "ariaLabelledBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "labelStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "formControl", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "checkboxIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "readonly", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Checkbox.prototype, "required", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('cb')], Checkbox.prototype, "inputViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Checkbox.prototype, "onChange", void 0);

    Checkbox = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-checkbox',
      template: "\n        <div [ngStyle]=\"style\" [ngClass]=\"{'ui-chkbox ui-widget': true,'ui-chkbox-readonly': readonly}\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [ngClass]=\"{'ui-state-focus':focused}\" (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.required]=\"required\">\n            </div>\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    ",
      providers: [CHECKBOX_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Checkbox);

    var CheckboxModule = function CheckboxModule() {
      _classCallCheck(this, CheckboxModule);
    };

    CheckboxModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [Checkbox],
      declarations: [Checkbox]
    })], CheckboxModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-checkbox.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-confirmdialog.js":
  /*!****************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-confirmdialog.js ***!
    \****************************************************************/

  /*! exports provided: ConfirmDialog, ConfirmDialogModule */

  /***/
  function node_modulesPrimengFesm2015PrimengConfirmdialogJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ConfirmDialog", function () {
      return ConfirmDialog;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ConfirmDialogModule", function () {
      return ConfirmDialogModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var primeng_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/button */
    "./node_modules/primeng/fesm2015/primeng-button.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var showAnimation = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animation"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: '{{transform}}',
      opacity: 0
    }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transition}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: 'none',
      opacity: 1
    }))]);
    var hideAnimation = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animation"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transition}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: '{{transform}}',
      opacity: 0
    }))]);

    var ConfirmDialog =
    /*#__PURE__*/
    function () {
      function ConfirmDialog(el, renderer, confirmationService, zone, cd) {
        var _this47 = this;

        _classCallCheck(this, ConfirmDialog);

        this.el = el;
        this.renderer = renderer;
        this.confirmationService = confirmationService;
        this.zone = zone;
        this.cd = cd;
        this.acceptIcon = 'pi pi-check';
        this.acceptLabel = 'Yes';
        this.acceptVisible = true;
        this.rejectIcon = 'pi pi-times';
        this.rejectLabel = 'No';
        this.rejectVisible = true;
        this.closeOnEscape = true;
        this.blockScroll = true;
        this.closable = true;
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.transitionOptions = '150ms cubic-bezier(0, 0, 0.2, 1)';
        this.focusTrap = true;
        this.defaultFocus = 'accept';
        this._position = "center";
        this.transformOptions = "scale(0.7)";
        this.subscription = this.confirmationService.requireConfirmation$.subscribe(function (confirmation) {
          if (!confirmation) {
            _this47.hide();

            return;
          }

          if (confirmation.key === _this47.key) {
            _this47.confirmation = confirmation;
            _this47.confirmationOptions = {
              message: _this47.confirmation.message || _this47.message,
              icon: _this47.confirmation.icon || _this47.icon,
              header: _this47.confirmation.header || _this47.header,
              rejectVisible: _this47.confirmation.rejectVisible == null ? _this47.rejectVisible : _this47.confirmation.rejectVisible,
              acceptVisible: _this47.confirmation.acceptVisible == null ? _this47.acceptVisible : _this47.confirmation.acceptVisible,
              acceptLabel: _this47.confirmation.acceptLabel || _this47.acceptLabel,
              rejectLabel: _this47.confirmation.rejectLabel || _this47.rejectLabel,
              acceptIcon: _this47.confirmation.acceptIcon || _this47.acceptIcon,
              rejectIcon: _this47.confirmation.rejectIcon || _this47.rejectIcon,
              acceptButtonStyleClass: _this47.confirmation.acceptButtonStyleClass || _this47.acceptButtonStyleClass,
              rejectButtonStyleClass: _this47.confirmation.rejectButtonStyleClass || _this47.rejectButtonStyleClass,
              defaultFocus: _this47.confirmation.defaultFocus || _this47.defaultFocus,
              blockScroll: _this47.confirmation.blockScroll === false || _this47.confirmation.blockScroll === true ? _this47.confirmation.blockScroll : _this47.blockScroll
            };

            if (_this47.confirmation.accept) {
              _this47.confirmation.acceptEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

              _this47.confirmation.acceptEvent.subscribe(_this47.confirmation.accept);
            }

            if (_this47.confirmation.reject) {
              _this47.confirmation.rejectEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

              _this47.confirmation.rejectEvent.subscribe(_this47.confirmation.reject);
            }

            _this47.visible = true;
          }
        });
      }

      _createClass(ConfirmDialog, [{
        key: "option",
        value: function option(name) {
          var source = this.confirmationOptions || this;

          if (source.hasOwnProperty(name)) {
            return source[name];
          }

          return undefined;
        }
      }, {
        key: "onAnimationStart",
        value: function onAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
              this.container = event.element;
              this.wrapper = this.container.parentElement;
              this.contentContainer = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.container, '.ui-dialog-content');
              var element = this.getElementToFocus();

              if (element) {
                element.focus();
              }

              this.appendContainer();
              this.moveOnTop();
              this.bindGlobalListeners();
              this.enableModality();
              break;
          }
        }
      }, {
        key: "onAnimationEnd",
        value: function onAnimationEnd(event) {
          switch (event.toState) {
            case 'void':
              this.onOverlayHide();
              break;
          }
        }
      }, {
        key: "getElementToFocus",
        value: function getElementToFocus() {
          switch (this.option('defaultFocus')) {
            case 'accept':
              return primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.container, 'button.ui-confirmdialog-acceptbutton');

            case 'reject':
              return primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.container, 'button.ui-confirmdialog-rejectbutton');

            case 'close':
              return primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.container, 'a.ui-dialog-titlebar-close');

            case 'none':
              return null;
            //backward compatibility

            default:
              return primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.container, 'button.ui-confirmdialog-acceptbutton');
          }
        }
      }, {
        key: "appendContainer",
        value: function appendContainer() {
          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.wrapper);else primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].appendChild(this.wrapper, this.appendTo);
          }
        }
      }, {
        key: "restoreAppend",
        value: function restoreAppend() {
          if (this.wrapper && this.appendTo) {
            this.el.nativeElement.appendChild(this.wrapper);
          }
        }
      }, {
        key: "enableModality",
        value: function enableModality() {
          if (this.option('blockScroll')) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(document.body, 'ui-overflow-hidden');
          }
        }
      }, {
        key: "disableModality",
        value: function disableModality() {
          this.maskVisible = false;

          if (this.option('blockScroll')) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(document.body, 'ui-overflow-hidden');
          }

          if (this.container) {
            this.cd.detectChanges();
          }
        }
      }, {
        key: "close",
        value: function close(event) {
          if (this.confirmation.rejectEvent) {
            this.confirmation.rejectEvent.emit();
          }

          this.hide();
          event.preventDefault();
        }
      }, {
        key: "hide",
        value: function hide() {
          this.visible = false;
          this.confirmation = null;
          this.confirmationOptions = null;
        }
      }, {
        key: "moveOnTop",
        value: function moveOnTop() {
          if (this.autoZIndex) {
            this.container.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex);
            this.wrapper.style.zIndex = String(this.baseZIndex + (primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex - 1));
          }
        }
      }, {
        key: "getMaskClass",
        value: function getMaskClass() {
          var maskClass = {
            'ui-widget-overlay ui-dialog-mask': true,
            'ui-dialog-visible': this.maskVisible,
            'ui-dialog-mask-scrollblocker': this.blockScroll
          };
          maskClass[this.getPositionClass().toString()] = true;
          return maskClass;
        }
      }, {
        key: "getPositionClass",
        value: function getPositionClass() {
          var _this48 = this;

          var positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];
          var pos = positions.find(function (item) {
            return item === _this48.position;
          });
          return pos ? "ui-dialog-".concat(pos) : '';
        }
      }, {
        key: "bindGlobalListeners",
        value: function bindGlobalListeners() {
          var _this49 = this;

          if (this.closeOnEscape && this.closable || this.focusTrap && !this.documentEscapeListener) {
            this.documentEscapeListener = this.renderer.listen('document', 'keydown', function (event) {
              if (event.which == 27 && _this49.closeOnEscape && _this49.closable) {
                if (parseInt(_this49.container.style.zIndex) === primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex + _this49.baseZIndex && _this49.visible) {
                  _this49.close(event);
                }
              }

              if (event.which === 9 && _this49.focusTrap) {
                event.preventDefault();
                var focusableElements = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getFocusableElements(_this49.container);

                if (focusableElements && focusableElements.length > 0) {
                  if (!document.activeElement) {
                    focusableElements[0].focus();
                  } else {
                    var focusedIndex = focusableElements.indexOf(document.activeElement);

                    if (event.shiftKey) {
                      if (focusedIndex == -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();
                    } else {
                      if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();
                    }
                  }
                }
              }
            });
          }
        }
      }, {
        key: "unbindGlobalListeners",
        value: function unbindGlobalListeners() {
          if (this.documentEscapeListener) {
            this.documentEscapeListener();
            this.documentEscapeListener = null;
          }
        }
      }, {
        key: "onOverlayHide",
        value: function onOverlayHide() {
          this.disableModality();
          this.unbindGlobalListeners();
          this.container = null;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.restoreAppend();
          this.onOverlayHide();
          this.subscription.unsubscribe();
        }
      }, {
        key: "accept",
        value: function accept() {
          if (this.confirmation.acceptEvent) {
            this.confirmation.acceptEvent.emit();
          }

          this.hide();
        }
      }, {
        key: "reject",
        value: function reject() {
          if (this.confirmation.rejectEvent) {
            this.confirmation.rejectEvent.emit();
          }

          this.hide();
        }
      }, {
        key: "visible",
        get: function get() {
          return this._visible;
        },
        set: function set(value) {
          this._visible = value;

          if (this._visible && !this.maskVisible) {
            this.maskVisible = true;
          }
        }
      }, {
        key: "position",
        get: function get() {
          return this._position;
        },
        set: function set(value) {
          this._position = value;

          switch (value) {
            case 'topleft':
            case 'bottomleft':
            case 'left':
              this.transformOptions = "translate3d(-100%, 0px, 0px)";
              break;

            case 'topright':
            case 'bottomright':
            case 'right':
              this.transformOptions = "translate3d(100%, 0px, 0px)";
              break;

            case 'bottom':
              this.transformOptions = "translate3d(0px, 100%, 0px)";
              break;

            case 'top':
              this.transformOptions = "translate3d(0px, -100%, 0px)";
              break;

            default:
              this.transformOptions = "scale(0.7)";
              break;
          }
        }
      }]);

      return ConfirmDialog;
    }();

    ConfirmDialog.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: primeng_api__WEBPACK_IMPORTED_MODULE_4__["ConfirmationService"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "header", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "icon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "message", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "maskStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "acceptIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "acceptLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "acceptVisible", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "rejectIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "rejectLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "rejectVisible", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "acceptButtonStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "rejectButtonStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "closeOnEscape", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "blockScroll", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "rtl", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "closable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "key", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "autoZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "baseZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "transitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "focusTrap", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "defaultFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "visible", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ConfirmDialog.prototype, "position", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_4__["Footer"])], ConfirmDialog.prototype, "footer", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('content')], ConfirmDialog.prototype, "contentViewChild", void 0);

    ConfirmDialog = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-confirmDialog',
      template: "\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\n            <div [ngClass]=\"{'ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow':true,'ui-dialog-rtl':rtl}\" [ngStyle]=\"style\" [class]=\"styleClass\" (mousedown)=\"moveOnTop()\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" *ngIf=\"visible\">\n                <div class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\">\n                    <span class=\"ui-dialog-title\" *ngIf=\"option('header')\">{{option('header')}}</span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                            <span class=\"pi pi-times\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class=\"ui-dialog-content ui-widget-content\">\n                    <i [ngClass]=\"'ui-confirmdialog-icon'\" [class]=\"option('icon')\" *ngIf=\"option('icon')\"></i>\n                    <span class=\"ui-confirmdialog-message\" [innerHTML]=\"option('message')\"></span>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footer\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"!footer\">\n                    <button type=\"button\" pButton [icon]=\"option('acceptIcon')\" [label]=\"option('acceptLabel')\" (click)=\"accept()\" [ngClass]=\"'ui-confirmdialog-acceptbutton'\" [class]=\"option('acceptButtonStyleClass')\" *ngIf=\"option('acceptVisible')\"></button>\n                    <button type=\"button\" pButton [icon]=\"option('rejectIcon')\" [label]=\"option('rejectLabel')\" (click)=\"reject()\" [ngClass]=\"'ui-confirmdialog-rejectbutton'\" [class]=\"option('rejectButtonStyleClass')\" *ngIf=\"option('rejectVisible')\"></button>\n                </div>\n            </div>\n        </div>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('animation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visible', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["useAnimation"])(showAnimation)]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visible => void', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["useAnimation"])(hideAnimation)])])],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], ConfirmDialog);

    var ConfirmDialogModule = function ConfirmDialogModule() {
      _classCallCheck(this, ConfirmDialogModule);
    };

    ConfirmDialogModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], primeng_button__WEBPACK_IMPORTED_MODULE_5__["ButtonModule"]],
      exports: [ConfirmDialog, primeng_button__WEBPACK_IMPORTED_MODULE_5__["ButtonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_4__["SharedModule"]],
      declarations: [ConfirmDialog]
    })], ConfirmDialogModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-confirmdialog.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-dataview.js":
  /*!***********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-dataview.js ***!
    \***********************************************************/

  /*! exports provided: DataView, DataViewLayoutOptions, DataViewModule */

  /***/
  function node_modulesPrimengFesm2015PrimengDataviewJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DataView", function () {
      return DataView;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DataViewLayoutOptions", function () {
      return DataViewLayoutOptions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DataViewModule", function () {
      return DataViewModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var primeng_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/paginator */
    "./node_modules/primeng/fesm2015/primeng-paginator.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var DataView =
    /*#__PURE__*/
    function () {
      function DataView(el) {
        _classCallCheck(this, DataView);

        this.el = el;
        this.layout = 'list';
        this.pageLinks = 5;
        this.paginatorPosition = 'bottom';
        this.alwaysShowPaginator = true;
        this.paginatorDropdownScrollHeight = '200px';
        this.currentPageReportTemplate = '{currentPage} of {totalPages}';
        this.emptyMessage = 'No records found';
        this.onLazyLoad = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

        this.trackBy = function (index, item) {
          return item;
        };

        this.loadingIcon = 'pi pi-spinner';
        this.first = 0;
        this.onPage = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onSort = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onChangeLayout = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass(DataView, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          }

          this.initialized = true;
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(simpleChanges) {
          if (simpleChanges.value) {
            this._value = simpleChanges.value.currentValue;
            this.updateTotalRecords();

            if (!this.lazy && this.hasFilter()) {
              this.filter(this.filterValue);
            }
          }

          if (simpleChanges.sortField || simpleChanges.sortOrder) {
            //avoid triggering lazy load prior to lazy initialization at onInit
            if (!this.lazy || this.initialized) {
              this.sort();
            }
          }
        }
      }, {
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this50 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'listItem':
                _this50.listItemTemplate = item.template;
                break;

              case 'gridItem':
                _this50.gridItemTemplate = item.template;
                break;

              case 'paginatorleft':
                _this50.paginatorLeftTemplate = item.template;
                break;

              case 'paginatorright':
                _this50.paginatorRightTemplate = item.template;
                break;
            }
          });
          this.updateItemTemplate();
        }
      }, {
        key: "updateItemTemplate",
        value: function updateItemTemplate() {
          switch (this.layout) {
            case 'list':
              this.itemTemplate = this.listItemTemplate;
              break;

            case 'grid':
              this.itemTemplate = this.gridItemTemplate;
              break;
          }
        }
      }, {
        key: "changeLayout",
        value: function changeLayout(layout) {
          this.layout = layout;
          this.onChangeLayout.emit({
            layout: this.layout
          });
          this.updateItemTemplate();
        }
      }, {
        key: "updateTotalRecords",
        value: function updateTotalRecords() {
          this.totalRecords = this.lazy ? this.totalRecords : this._value ? this._value.length : 0;
        }
      }, {
        key: "paginate",
        value: function paginate(event) {
          this.first = event.first;
          this.rows = event.rows;

          if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          }

          this.onPage.emit({
            first: this.first,
            rows: this.rows
          });
        }
      }, {
        key: "sort",
        value: function sort() {
          var _this51 = this;

          this.first = 0;

          if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          } else if (this.value) {
            this.value.sort(function (data1, data2) {
              var value1 = primeng_utils__WEBPACK_IMPORTED_MODULE_2__["ObjectUtils"].resolveFieldData(data1, _this51.sortField);
              var value2 = primeng_utils__WEBPACK_IMPORTED_MODULE_2__["ObjectUtils"].resolveFieldData(data2, _this51.sortField);
              var result = null;
              if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;
              return _this51.sortOrder * result;
            });

            if (this.hasFilter()) {
              this.filter(this.filterValue);
            }
          }

          this.onSort.emit({
            sortField: this.sortField,
            sortOrder: this.sortOrder
          });
        }
      }, {
        key: "isEmpty",
        value: function isEmpty() {
          var data = this.filteredValue || this.value;
          return data == null || data.length == 0;
        }
      }, {
        key: "createLazyLoadMetadata",
        value: function createLazyLoadMetadata() {
          return {
            first: this.first,
            rows: this.rows,
            sortField: this.sortField,
            sortOrder: this.sortOrder
          };
        }
      }, {
        key: "getBlockableElement",
        value: function getBlockableElement() {
          return this.el.nativeElement.children[0];
        }
      }, {
        key: "filter",
        value: function filter(_filter) {
          var filterMatchMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "contains";
          this.filterValue = _filter;

          if (this.value && this.value.length) {
            var searchFields = this.filterBy.split(',');
            this.filteredValue = primeng_utils__WEBPACK_IMPORTED_MODULE_2__["FilterUtils"].filter(this.value, searchFields, _filter, filterMatchMode);

            if (this.filteredValue.length === this.value.length) {
              this.filteredValue = null;
            }

            if (this.paginator) {
              this.first = 0;
              this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;
            }
          }
        }
      }, {
        key: "hasFilter",
        value: function hasFilter() {
          return this.filterValue && this.filterValue.trim().length > 0;
        }
      }]);

      return DataView;
    }();

    DataView.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "layout", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "paginator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "rows", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "totalRecords", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "pageLinks", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "rowsPerPageOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "paginatorPosition", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "alwaysShowPaginator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "paginatorDropdownAppendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "paginatorDropdownScrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "currentPageReportTemplate", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "showCurrentPageReport", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "lazy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "emptyMessage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], DataView.prototype, "onLazyLoad", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "trackBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "filterBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "loading", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "loadingIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "first", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "sortField", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "sortOrder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataView.prototype, "value", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], DataView.prototype, "onPage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], DataView.prototype, "onSort", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], DataView.prototype, "onChangeLayout", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_3__["Header"])], DataView.prototype, "header", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_3__["Footer"])], DataView.prototype, "footer", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_3__["PrimeTemplate"])], DataView.prototype, "templates", void 0);

    DataView = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-dataView',
      template: "\n        <div [ngClass]=\"{'ui-dataview ui-widget': true, 'ui-dataview-list': (layout === 'list'), 'ui-dataview-grid': (layout === 'grid')}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-dataview-loading ui-widget-overlay\" *ngIf=\"loading\"></div>\n            <div class=\"ui-dataview-loading-content\" *ngIf=\"loading\">\n                <i [class]=\"'ui-dataview-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div class=\"ui-dataview-header ui-widget-header ui-corner-top\">\n                <ng-content select=\"p-header\"></ng-content>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"paginate($event)\" styleClass=\"ui-paginator-top\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\" [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\"></p-paginator>\n            <div class=\"ui-dataview-content ui-widget-content\">\n                <div class=\"ui-g\">\n                    <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"paginator ? ((filteredValue||value) | slice:(lazy ? 0 : first):((lazy ? 0 : first) + rows)) : (filteredValue||value)\" [ngForTrackBy]=\"trackBy\">\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: rowData, rowIndex: rowIndex}\"></ng-container>\n                    </ng-template>\n                    <div *ngIf=\"isEmpty()\" class=\"ui-g-12 ui-dataview-emptymessage\">{{emptyMessage}}</div>\n                </div>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"paginate($event)\" styleClass=\"ui-paginator-bottom\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\" [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\"></p-paginator>\n            <div class=\"ui-dataview-footer ui-widget-header ui-corner-bottom\" *ngIf=\"footer\">\n                <ng-content select=\"p-footer\"></ng-content>\n            </div>\n        </div>\n    ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], DataView);

    var DataViewLayoutOptions =
    /*#__PURE__*/
    function () {
      function DataViewLayoutOptions(dv) {
        _classCallCheck(this, DataViewLayoutOptions);

        this.dv = dv;
      }

      _createClass(DataViewLayoutOptions, [{
        key: "changeLayout",
        value: function changeLayout(event, layout) {
          this.dv.changeLayout(layout);
          event.preventDefault();
        }
      }]);

      return DataViewLayoutOptions;
    }();

    DataViewLayoutOptions.ctorParameters = function () {
      return [{
        type: DataView
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataViewLayoutOptions.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], DataViewLayoutOptions.prototype, "styleClass", void 0);

    DataViewLayoutOptions = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-dataViewLayoutOptions',
      template: "\n        <div [ngClass]=\"'ui-dataview-layout-options ui-selectbutton ui-buttonset'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <a tabindex=\"0\" class=\"ui-button ui-button-icon-only ui-state-default\" (click)=\"changeLayout($event, 'list')\" (keydown.enter)=\"changeLayout($event, 'list')\"\n                [ngClass]=\"{'ui-state-active': dv.layout === 'list'}\">\n                <i class=\"pi pi-bars ui-button-icon-left\"></i>\n                <span class=\"ui-button-text ui-clickable\">ui-btn</span>\n            </a><a tabindex=\"0\" class=\"ui-button ui-button-icon-only ui-state-default\" (click)=\"changeLayout($event, 'grid')\" (keydown.enter)=\"changeLayout($event, 'grid')\"\n                [ngClass]=\"{'ui-state-active': dv.layout === 'grid'}\">\n                <i class=\"pi pi-th-large ui-button-icon-left\"></i>\n                <span class=\"ui-button-text ui-clickable\">ui-btn</span>\n            </a>\n        </div>\n    "
    })], DataViewLayoutOptions);

    var DataViewModule = function DataViewModule() {
      _classCallCheck(this, DataViewModule);
    };

    DataViewModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_3__["SharedModule"], primeng_paginator__WEBPACK_IMPORTED_MODULE_4__["PaginatorModule"]],
      exports: [DataView, primeng_api__WEBPACK_IMPORTED_MODULE_3__["SharedModule"], DataViewLayoutOptions],
      declarations: [DataView, DataViewLayoutOptions]
    })], DataViewModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-dataview.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-dialog.js":
  /*!*********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-dialog.js ***!
    \*********************************************************/

  /*! exports provided: Dialog, DialogModule */

  /***/
  function node_modulesPrimengFesm2015PrimengDialogJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Dialog", function () {
      return Dialog;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DialogModule", function () {
      return DialogModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var primeng_focustrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/focustrap */
    "./node_modules/primeng/fesm2015/primeng-focustrap.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var idx = 0;
    var showAnimation = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animation"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: '{{transform}}',
      opacity: 0
    }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transition}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: 'none',
      opacity: 1
    }))]);
    var hideAnimation = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animation"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transition}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: '{{transform}}',
      opacity: 0
    }))]);

    var Dialog =
    /*#__PURE__*/
    function () {
      function Dialog(el, renderer, zone, cd) {
        _classCallCheck(this, Dialog);

        this.el = el;
        this.renderer = renderer;
        this.zone = zone;
        this.cd = cd;
        this.draggable = true;
        this.resizable = true;
        this.closeOnEscape = true;
        this.closable = true;
        this.showHeader = true;
        this.blockScroll = false;
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.minX = 0;
        this.minY = 0;
        this.focusOnShow = true;
        this.keepInViewport = true;
        this.focusTrap = true;
        this.transitionOptions = '150ms cubic-bezier(0, 0, 0.2, 1)';
        this.closeIcon = 'pi pi-times';
        this.minimizeIcon = 'pi pi-window-minimize';
        this.maximizeIcon = 'pi pi-window-maximize';
        this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onHide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.visibleChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onResizeInit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onResizeEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.id = "ui-dialog-".concat(idx++);
        this._style = {};
        this._position = "center";
        this.transformOptions = "scale(0.7)";
      }

      _createClass(Dialog, [{
        key: "focus",
        value: function focus() {
          var focusable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.container, 'button');

          if (focusable) {
            this.zone.runOutsideAngular(function () {
              setTimeout(function () {
                return focusable.focus();
              }, 5);
            });
          }
        }
      }, {
        key: "close",
        value: function close(event) {
          this.visibleChange.emit(false);
          event.preventDefault();
        }
      }, {
        key: "enableModality",
        value: function enableModality() {
          var _this52 = this;

          if (this.closable && this.dismissableMask) {
            this.maskClickListener = this.renderer.listen(this.wrapper, 'click', function (event) {
              if (!_this52.container.isSameNode(event.target) && !_this52.container.contains(event.target)) {
                _this52.close(event);
              }
            });
          }

          if (this.modal) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(document.body, 'ui-overflow-hidden');
          }
        }
      }, {
        key: "disableModality",
        value: function disableModality() {
          if (this.wrapper) {
            if (this.dismissableMask) {
              this.unbindMaskClickListener();
            }

            if (this.modal) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(document.body, 'ui-overflow-hidden');
            }

            if (!this.cd.destroyed) {
              this.cd.detectChanges();
            }
          }
        }
      }, {
        key: "maximize",
        value: function maximize() {
          this.maximized = !this.maximized;

          if (!this.modal && !this.blockScroll) {
            if (this.maximized) primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(document.body, 'ui-overflow-hidden');else primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(document.body, 'ui-overflow-hidden');
          }
        }
      }, {
        key: "unbindMaskClickListener",
        value: function unbindMaskClickListener() {
          if (this.maskClickListener) {
            this.maskClickListener();
            this.maskClickListener = null;
          }
        }
      }, {
        key: "moveOnTop",
        value: function moveOnTop() {
          if (this.autoZIndex) {
            this.container.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex);
            this.wrapper.style.zIndex = String(this.baseZIndex + (primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex - 1));
          }
        }
      }, {
        key: "getMaskClass",
        value: function getMaskClass() {
          var maskClass = {
            'ui-dialog-mask': true,
            'ui-widget-overlay': this.modal,
            'ui-dialog-visible': this.maskVisible,
            'ui-dialog-mask-scrollblocker': this.modal || this.blockScroll
          };
          maskClass[this.getPositionClass().toString()] = true;
          return maskClass;
        }
      }, {
        key: "getPositionClass",
        value: function getPositionClass() {
          var _this53 = this;

          var positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];
          var pos = positions.find(function (item) {
            return item === _this53.position;
          });
          return pos ? "ui-dialog-".concat(pos) : '';
        }
      }, {
        key: "initDrag",
        value: function initDrag(event) {
          if (primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(event.target, 'ui-dialog-titlebar-icon') || primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(event.target.parentElement, 'ui-dialog-titlebar-icon')) {
            return;
          }

          if (this.draggable) {
            this.dragging = true;
            this.lastPageX = event.pageX;
            this.lastPageY = event.pageY;
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(document.body, 'ui-unselectable-text');
          }
        }
      }, {
        key: "onKeydown",
        value: function onKeydown(event) {
          if (this.focusTrap) {
            if (event.which === 9) {
              event.preventDefault();
              var focusableElements = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getFocusableElements(this.container);

              if (focusableElements && focusableElements.length > 0) {
                if (!document.activeElement) {
                  focusableElements[0].focus();
                } else {
                  var focusedIndex = focusableElements.indexOf(document.activeElement);

                  if (event.shiftKey) {
                    if (focusedIndex == -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();
                  } else {
                    if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();
                  }
                }
              }
            }
          }
        }
      }, {
        key: "onDrag",
        value: function onDrag(event) {
          if (this.dragging) {
            var containerWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOuterWidth(this.container);
            var containerHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOuterHeight(this.container);
            var deltaX = event.pageX - this.lastPageX;
            var deltaY = event.pageY - this.lastPageY;
            var offset = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOffset(this.container);
            var leftPos = offset.left + deltaX;
            var topPos = offset.top + deltaY;
            var viewport = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getViewport();

            if (this.keepInViewport) {
              if (leftPos >= this.minX && leftPos + containerWidth < viewport.width) {
                this._style.left = leftPos + 'px';
                this.lastPageX = event.pageX;
                this.container.style.left = leftPos + 'px';
              }

              if (topPos >= this.minY && topPos + containerHeight < viewport.height) {
                this._style.top = topPos + 'px';
                this.lastPageY = event.pageY;
                this.container.style.top = topPos + 'px';
              }
            } else {
              this.lastPageX = event.pageX;
              this.container.style.left = leftPos + 'px';
              this.lastPageY = event.pageY;
              this.container.style.top = topPos + 'px';
            }
          }
        }
      }, {
        key: "endDrag",
        value: function endDrag(event) {
          if (this.draggable) {
            this.dragging = false;
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(document.body, 'ui-unselectable-text');
          }
        }
      }, {
        key: "initResize",
        value: function initResize(event) {
          if (this.resizable) {
            this.resizing = true;
            this.lastPageX = event.pageX;
            this.lastPageY = event.pageY;
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(document.body, 'ui-unselectable-text');
            this.onResizeInit.emit(event);
          }
        }
      }, {
        key: "onResize",
        value: function onResize(event) {
          if (this.resizing) {
            var deltaX = event.pageX - this.lastPageX;
            var deltaY = event.pageY - this.lastPageY;
            var containerWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOuterWidth(this.container);
            var containerHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOuterHeight(this.container);
            var contentHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOuterHeight(this.contentViewChild.nativeElement);
            var newWidth = containerWidth + deltaX;
            var newHeight = containerHeight + deltaY;
            var minWidth = this.container.style.minWidth;
            var minHeight = this.container.style.minHeight;
            var offset = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOffset(this.container);
            var viewport = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getViewport();

            if ((!minWidth || newWidth > parseInt(minWidth)) && offset.left + newWidth < viewport.width) {
              this._style.width = newWidth + 'px';
              this.container.style.width = this._style.width;
            }

            if ((!minHeight || newHeight > parseInt(minHeight)) && offset.top + newHeight < viewport.height) {
              this.contentViewChild.nativeElement.style.height = contentHeight + deltaY + 'px';
            }

            this.lastPageX = event.pageX;
            this.lastPageY = event.pageY;
          }
        }
      }, {
        key: "resizeEnd",
        value: function resizeEnd(event) {
          if (this.resizing) {
            this.resizing = false;
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(document.body, 'ui-unselectable-text');
            this.onResizeEnd.emit(event);
          }
        }
      }, {
        key: "bindGlobalListeners",
        value: function bindGlobalListeners() {
          if (this.draggable) {
            this.bindDocumentDragListener();
            this.bindDocumentDragEndListener();
          }

          if (this.resizable) {
            this.bindDocumentResizeListeners();
          }

          if (this.closeOnEscape && this.closable) {
            this.bindDocumentEscapeListener();
          }
        }
      }, {
        key: "unbindGlobalListeners",
        value: function unbindGlobalListeners() {
          this.unbindDocumentDragListener();
          this.unbindDocumentDragEndListener();
          this.unbindDocumentResizeListeners();
          this.unbindDocumentEscapeListener();
        }
      }, {
        key: "bindDocumentDragListener",
        value: function bindDocumentDragListener() {
          var _this54 = this;

          this.zone.runOutsideAngular(function () {
            _this54.documentDragListener = _this54.onDrag.bind(_this54);
            window.document.addEventListener('mousemove', _this54.documentDragListener);
          });
        }
      }, {
        key: "unbindDocumentDragListener",
        value: function unbindDocumentDragListener() {
          if (this.documentDragListener) {
            window.document.removeEventListener('mousemove', this.documentDragListener);
            this.documentDragListener = null;
          }
        }
      }, {
        key: "bindDocumentDragEndListener",
        value: function bindDocumentDragEndListener() {
          var _this55 = this;

          this.zone.runOutsideAngular(function () {
            _this55.documentDragEndListener = _this55.endDrag.bind(_this55);
            window.document.addEventListener('mouseup', _this55.documentDragEndListener);
          });
        }
      }, {
        key: "unbindDocumentDragEndListener",
        value: function unbindDocumentDragEndListener() {
          if (this.documentDragEndListener) {
            window.document.removeEventListener('mouseup', this.documentDragEndListener);
            this.documentDragEndListener = null;
          }
        }
      }, {
        key: "bindDocumentResizeListeners",
        value: function bindDocumentResizeListeners() {
          var _this56 = this;

          this.zone.runOutsideAngular(function () {
            _this56.documentResizeListener = _this56.onResize.bind(_this56);
            _this56.documentResizeEndListener = _this56.resizeEnd.bind(_this56);
            window.document.addEventListener('mousemove', _this56.documentResizeListener);
            window.document.addEventListener('mouseup', _this56.documentResizeEndListener);
          });
        }
      }, {
        key: "unbindDocumentResizeListeners",
        value: function unbindDocumentResizeListeners() {
          if (this.documentResizeListener && this.documentResizeEndListener) {
            window.document.removeEventListener('mousemove', this.documentResizeListener);
            window.document.removeEventListener('mouseup', this.documentResizeEndListener);
            this.documentResizeListener = null;
            this.documentResizeEndListener = null;
          }
        }
      }, {
        key: "bindDocumentEscapeListener",
        value: function bindDocumentEscapeListener() {
          var _this57 = this;

          this.documentEscapeListener = this.renderer.listen('document', 'keydown', function (event) {
            if (event.which == 27) {
              if (parseInt(_this57.container.style.zIndex) === primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex + _this57.baseZIndex) {
                _this57.close(event);
              }
            }
          });
        }
      }, {
        key: "unbindDocumentEscapeListener",
        value: function unbindDocumentEscapeListener() {
          if (this.documentEscapeListener) {
            this.documentEscapeListener();
            this.documentEscapeListener = null;
          }
        }
      }, {
        key: "appendContainer",
        value: function appendContainer() {
          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.wrapper);else primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].appendChild(this.wrapper, this.appendTo);
          }
        }
      }, {
        key: "restoreAppend",
        value: function restoreAppend() {
          if (this.container && this.appendTo) {
            this.el.nativeElement.appendChild(this.wrapper);
          }
        }
      }, {
        key: "onAnimationStart",
        value: function onAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
              this.container = event.element;
              this.wrapper = this.container.parentElement;
              this.onShow.emit({});
              this.appendContainer();
              this.moveOnTop();
              this.bindGlobalListeners();

              if (this.modal) {
                this.enableModality();
              }

              if (!this.modal && this.blockScroll) {
                primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(document.body, 'ui-overflow-hidden');
              }

              if (this.focusOnShow) {
                this.focus();
              }

              break;
          }
        }
      }, {
        key: "onAnimationEnd",
        value: function onAnimationEnd(event) {
          switch (event.toState) {
            case 'void':
              this.onContainerDestroy();
              this.onHide.emit({});
              break;
          }
        }
      }, {
        key: "onContainerDestroy",
        value: function onContainerDestroy() {
          this.unbindGlobalListeners();
          this.dragging = false;
          this.maskVisible = false;

          if (this.maximized) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(document.body, 'ui-overflow-hidden');
            this.maximized = false;
          }

          if (this.modal) {
            this.disableModality();
          }

          if (this.blockScroll) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(document.body, 'ui-overflow-hidden');
          }

          this.container = null;
          this.wrapper = null;
          this._style = this.originalStyle ? Object.assign({}, this.originalStyle) : {};
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.container) {
            this.restoreAppend();
            this.onContainerDestroy();
          }
        }
      }, {
        key: "responsive",
        get: function get() {
          return false;
        },
        set: function set(_responsive) {
          console.log("Responsive property is deprecated.");
        }
      }, {
        key: "breakpoint",
        get: function get() {
          return 649;
        },
        set: function set(_breakpoint) {
          console.log("Breakpoint property is not utilized and deprecated, use CSS media queries instead.");
        }
      }, {
        key: "visible",
        get: function get() {
          return this._visible;
        },
        set: function set(value) {
          this._visible = value;

          if (this._visible && !this.maskVisible) {
            this.maskVisible = true;
          }
        }
      }, {
        key: "style",
        get: function get() {
          return this._style;
        },
        set: function set(value) {
          if (value) {
            this._style = Object.assign({}, value);
            this.originalStyle = value;
          }
        }
      }, {
        key: "position",
        get: function get() {
          return this._position;
        },
        set: function set(value) {
          this._position = value;

          switch (value) {
            case 'topleft':
            case 'bottomleft':
            case 'left':
              this.transformOptions = "translate3d(-100%, 0px, 0px)";
              break;

            case 'topright':
            case 'bottomright':
            case 'right':
              this.transformOptions = "translate3d(100%, 0px, 0px)";
              break;

            case 'bottom':
              this.transformOptions = "translate3d(0px, 100%, 0px)";
              break;

            case 'top':
              this.transformOptions = "translate3d(0px, -100%, 0px)";
              break;

            default:
              this.transformOptions = "scale(0.7)";
              break;
          }
        }
      }]);

      return Dialog;
    }();

    Dialog.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "header", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "draggable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "resizable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "positionLeft", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "positionTop", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "contentStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "modal", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "closeOnEscape", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "dismissableMask", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "rtl", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "closable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "responsive", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "maskStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "showHeader", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "breakpoint", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "blockScroll", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "autoZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "baseZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "minX", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "minY", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "focusOnShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "maximizable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "keepInViewport", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "focusTrap", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "transitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "closeIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "minimizeIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "maximizeIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_4__["Header"], {
      descendants: false
    })], Dialog.prototype, "headerFacet", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_4__["Footer"], {
      descendants: false
    })], Dialog.prototype, "footerFacet", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('titlebar')], Dialog.prototype, "headerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('content')], Dialog.prototype, "contentViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('footer')], Dialog.prototype, "footerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Dialog.prototype, "onShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Dialog.prototype, "onHide", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Dialog.prototype, "visibleChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Dialog.prototype, "onResizeInit", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Dialog.prototype, "onResizeEnd", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "visible", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "style", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Dialog.prototype, "position", null);

    Dialog = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-dialog',
      template: "\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\n            <div #container [ngClass]=\"{'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl':rtl,'ui-dialog-draggable':draggable,'ui-dialog-resizable':resizable, 'ui-dialog-maximized': maximized}\"\n                [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"visible\" pFocusTrap [pFocusTrapDisabled]=\"focusTrap === false\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\">\n                <div #titlebar class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\n                    <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"header\">{{header}}</span>\n                    <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"headerFacet && headerFacet.first\">\n                        <ng-content select=\"p-header\"></ng-content>\n                    </span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a *ngIf=\"maximizable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"maximize()\" (keydown.enter)=\"maximize()\">\n                            <span [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\n                        </a>\n                        <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                            <span [class]=\"closeIcon\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"contentStyle\">\n                    <ng-content></ng-content>\n                </div>\n                <div #footer class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footerFacet && footerFacet.first\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n                <div *ngIf=\"resizable\" class=\"ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\n            </div>\n        </div>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('animation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visible', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["useAnimation"])(showAnimation)]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visible => void', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["useAnimation"])(hideAnimation)])])],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Dialog);

    var DialogModule = function DialogModule() {
      _classCallCheck(this, DialogModule);
    };

    DialogModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], primeng_focustrap__WEBPACK_IMPORTED_MODULE_5__["FocusTrapModule"]],
      exports: [Dialog, primeng_api__WEBPACK_IMPORTED_MODULE_4__["SharedModule"]],
      declarations: [Dialog]
    })], DialogModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-dialog.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-dropdown.js":
  /*!***********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-dropdown.js ***!
    \***********************************************************/

  /*! exports provided: DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule */

  /***/
  function node_modulesPrimengFesm2015PrimengDropdownJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DROPDOWN_VALUE_ACCESSOR", function () {
      return DROPDOWN_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Dropdown", function () {
      return Dropdown;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DropdownItem", function () {
      return DropdownItem;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DropdownModule", function () {
      return DropdownModule;
    });
    /* harmony import */


    var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/cdk/scrolling */
    "./node_modules/@angular/cdk/fesm2015/scrolling.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var primeng_tooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! primeng/tooltip */
    "./node_modules/primeng/fesm2015/primeng-tooltip.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var DROPDOWN_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
        return Dropdown;
      }),
      multi: true
    };

    var DropdownItem =
    /*#__PURE__*/
    function () {
      function DropdownItem() {
        _classCallCheck(this, DropdownItem);

        this.onClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      }

      _createClass(DropdownItem, [{
        key: "onOptionClick",
        value: function onOptionClick(event) {
          this.onClick.emit({
            originalEvent: event,
            option: this.option
          });
        }
      }]);

      return DropdownItem;
    }();

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], DropdownItem.prototype, "option", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], DropdownItem.prototype, "selected", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], DropdownItem.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], DropdownItem.prototype, "visible", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], DropdownItem.prototype, "itemSize", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], DropdownItem.prototype, "template", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], DropdownItem.prototype, "onClick", void 0);

    DropdownItem = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'p-dropdownItem',
      template: "\n        <li (click)=\"onOptionClick($event)\" role=\"option\"\n            [attr.aria-label]=\"option.label\" [attr.aria-selected]=\"selected\"\n            [ngStyle]=\"{'height': itemSize + 'px'}\"\n            [ngClass]=\"{'ui-dropdown-item ui-corner-all':true,\n                                                'ui-state-highlight': selected,\n                                                'ui-state-disabled':(option.disabled),\n                                                'ui-dropdown-item-empty': !option.label||option.label.length === 0}\">\n            <span *ngIf=\"!template\">{{option.label||'empty'}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option}\"></ng-container>\n        </li>\n    "
    })], DropdownItem);

    var Dropdown =
    /*#__PURE__*/
    function () {
      function Dropdown(el, renderer, cd, zone) {
        _classCallCheck(this, Dropdown);

        this.el = el;
        this.renderer = renderer;
        this.cd = cd;
        this.zone = zone;
        this.scrollHeight = '200px';
        this.filterBy = 'label';
        this.resetFilterOnHide = false;
        this.dropdownIcon = 'pi pi-chevron-down';
        this.autoDisplayFirst = true;
        this.emptyFilterMessage = 'No results found';
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
        this.filterMatchMode = "contains";
        this.tooltip = '';
        this.tooltipPosition = 'right';
        this.tooltipPositionStyle = 'absolute';
        this.autofocusFilter = true;
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onHide = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();

        this.onModelChange = function () {};

        this.onModelTouched = function () {};

        this.viewPortOffsetTop = 0;
      }

      _createClass(Dropdown, [{
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this58 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'item':
                _this58.itemTemplate = item.template;
                break;

              case 'selectedItem':
                _this58.selectedItemTemplate = item.template;
                break;

              case 'group':
                _this58.groupTemplate = item.template;
                break;

              default:
                _this58.itemTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {
          this.optionsToDisplay = this.options;
          this.updateSelectedOption(null);
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (this.editable) {
            this.updateEditableLabel();
          }
        }
      }, {
        key: "updateEditableLabel",
        value: function updateEditableLabel() {
          if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {
            this.editableInputViewChild.nativeElement.value = this.selectedOption ? this.selectedOption.label : this.value || '';
          }
        }
      }, {
        key: "onItemClick",
        value: function onItemClick(event) {
          var _this59 = this;

          var option = event.option;
          this.itemClick = true;

          if (!option.disabled) {
            this.selectItem(event, option);
            this.focusViewChild.nativeElement.focus();
          }

          setTimeout(function () {
            _this59.hide(event);
          }, 150);
        }
      }, {
        key: "selectItem",
        value: function selectItem(event, option) {
          var _this60 = this;

          if (this.selectedOption != option) {
            this.selectedOption = option;
            this.value = option.value;
            this.filled = true;
            this.onModelChange(this.value);
            this.updateEditableLabel();
            this.onChange.emit({
              originalEvent: event.originalEvent,
              value: this.value
            });

            if (this.virtualScroll) {
              setTimeout(function () {
                _this60.viewPortOffsetTop = _this60.viewPort ? _this60.viewPort.measureScrollOffset() : 0;
              }, 1);
            }
          }
        }
      }, {
        key: "ngAfterViewChecked",
        value: function ngAfterViewChecked() {
          var _this61 = this;

          if (this.optionsChanged && this.overlayVisible) {
            this.optionsChanged = false;

            if (this.virtualScroll) {
              this.updateVirtualScrollSelectedIndex(true);
            }

            this.zone.runOutsideAngular(function () {
              setTimeout(function () {
                _this61.alignOverlay();
              }, 1);
            });
          }

          if (this.selectedOptionUpdated && this.itemsWrapper) {
            if (this.virtualScroll && this.viewPort) {
              var range = this.viewPort.getRenderedRange();
              this.updateVirtualScrollSelectedIndex(false);

              if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {
                this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);
              }
            }

            var selectedItem = primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].findSingle(this.overlay, 'li.ui-state-highlight');

            if (selectedItem) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].scrollInView(this.itemsWrapper, primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].findSingle(this.overlay, 'li.ui-state-highlight'));
            }

            this.selectedOptionUpdated = false;
          }
        }
      }, {
        key: "writeValue",
        value: function writeValue(value) {
          if (this.filter) {
            this.resetFilter();
          }

          this.value = value;
          this.updateSelectedOption(value);
          this.updateEditableLabel();
          this.updateFilledState();
          this.cd.markForCheck();
        }
      }, {
        key: "resetFilter",
        value: function resetFilter() {
          this.filterValue = null;

          if (this.filterViewChild && this.filterViewChild.nativeElement) {
            this.filterViewChild.nativeElement.value = '';
          }

          this.optionsToDisplay = this.options;
        }
      }, {
        key: "updateSelectedOption",
        value: function updateSelectedOption(val) {
          this.selectedOption = this.findOption(val, this.optionsToDisplay);

          if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {
            this.selectedOption = this.optionsToDisplay[0];
          }

          this.selectedOptionUpdated = true;
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(val) {
          this.disabled = val;
        }
      }, {
        key: "onMouseclick",
        value: function onMouseclick(event) {
          if (this.disabled || this.readonly) {
            return;
          }

          this.onClick.emit(event);
          this.selfClick = true;
          this.clearClick = primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].hasClass(event.target, 'ui-dropdown-clear-icon');

          if (!this.itemClick && !this.clearClick) {
            this.focusViewChild.nativeElement.focus();
            if (this.overlayVisible) this.hide(event);else this.show();
            this.cd.detectChanges();
          }
        }
      }, {
        key: "onEditableInputClick",
        value: function onEditableInputClick(event) {
          this.itemClick = true;
          this.bindDocumentClickListener();
        }
      }, {
        key: "onEditableInputFocus",
        value: function onEditableInputFocus(event) {
          this.focused = true;
          this.hide(event);
          this.onFocus.emit(event);
        }
      }, {
        key: "onEditableInputChange",
        value: function onEditableInputChange(event) {
          this.value = event.target.value;
          this.updateSelectedOption(this.value);
          this.onModelChange(this.value);
          this.onChange.emit({
            originalEvent: event,
            value: this.value
          });
        }
      }, {
        key: "show",
        value: function show() {
          this.overlayVisible = true;
        }
      }, {
        key: "onOverlayAnimationStart",
        value: function onOverlayAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
              this.overlay = event.element;
              var itemsWrapperSelector = this.virtualScroll ? '.cdk-virtual-scroll-viewport' : '.ui-dropdown-items-wrapper';
              this.itemsWrapper = primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].findSingle(this.overlay, itemsWrapperSelector);
              this.appendOverlay();

              if (this.autoZIndex) {
                this.overlay.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].zindex);
              }

              this.alignOverlay();
              this.bindDocumentClickListener();
              this.bindDocumentResizeListener();

              if (this.options && this.options.length) {
                if (!this.virtualScroll) {
                  var selectedListItem = primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].findSingle(this.itemsWrapper, '.ui-dropdown-item.ui-state-highlight');

                  if (selectedListItem) {
                    primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].scrollInView(this.itemsWrapper, selectedListItem);
                  }
                }
              }

              if (this.filterViewChild && this.filterViewChild.nativeElement) {
                this.preventModelTouched = true;

                if (this.autofocusFilter) {
                  this.filterViewChild.nativeElement.focus();
                }
              }

              this.onShow.emit(event);
              break;

            case 'void':
              this.onOverlayHide();
              break;
          }
        }
      }, {
        key: "scrollToSelectedVirtualScrollElement",
        value: function scrollToSelectedVirtualScrollElement() {
          if (!this.virtualAutoScrolled) {
            if (this.viewPortOffsetTop) {
              this.viewPort.scrollToOffset(this.viewPortOffsetTop);
            } else if (this.virtualScrollSelectedIndex > -1) {
              this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);
            }
          }

          this.virtualAutoScrolled = true;
        }
      }, {
        key: "updateVirtualScrollSelectedIndex",
        value: function updateVirtualScrollSelectedIndex(resetOffset) {
          if (this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length) {
            if (resetOffset) {
              this.viewPortOffsetTop = 0;
            }

            this.virtualScrollSelectedIndex = this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay);
          }
        }
      }, {
        key: "appendOverlay",
        value: function appendOverlay() {
          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.overlay);else primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].appendChild(this.overlay, this.appendTo);
            this.overlay.style.minWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].getWidth(this.containerViewChild.nativeElement) + 'px';
          }
        }
      }, {
        key: "restoreOverlayAppend",
        value: function restoreOverlayAppend() {
          if (this.overlay && this.appendTo) {
            this.el.nativeElement.appendChild(this.overlay);
          }
        }
      }, {
        key: "hide",
        value: function hide(event) {
          this.overlayVisible = false;

          if (this.filter && this.resetFilterOnHide) {
            this.resetFilter();
          }

          if (this.virtualScroll) {
            this.virtualAutoScrolled = false;
          }

          this.cd.markForCheck();
          this.onHide.emit(event);
        }
      }, {
        key: "alignOverlay",
        value: function alignOverlay() {
          if (this.overlay) {
            if (this.appendTo) primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].absolutePosition(this.overlay, this.containerViewChild.nativeElement);else primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].relativePosition(this.overlay, this.containerViewChild.nativeElement);
          }
        }
      }, {
        key: "onInputFocus",
        value: function onInputFocus(event) {
          this.focused = true;
          this.onFocus.emit(event);
        }
      }, {
        key: "onInputBlur",
        value: function onInputBlur(event) {
          this.focused = false;
          this.onBlur.emit(event);

          if (!this.preventModelTouched) {
            this.onModelTouched();
          }

          this.preventModelTouched = false;
        }
      }, {
        key: "findPrevEnabledOption",
        value: function findPrevEnabledOption(index) {
          var prevEnabledOption;

          if (this.optionsToDisplay && this.optionsToDisplay.length) {
            for (var i = index - 1; 0 <= i; i--) {
              var option = this.optionsToDisplay[i];

              if (option.disabled) {
                continue;
              } else {
                prevEnabledOption = option;
                break;
              }
            }

            if (!prevEnabledOption) {
              for (var _i3 = this.optionsToDisplay.length - 1; _i3 >= index; _i3--) {
                var _option = this.optionsToDisplay[_i3];

                if (_option.disabled) {
                  continue;
                } else {
                  prevEnabledOption = _option;
                  break;
                }
              }
            }
          }

          return prevEnabledOption;
        }
      }, {
        key: "findNextEnabledOption",
        value: function findNextEnabledOption(index) {
          var nextEnabledOption;

          if (this.optionsToDisplay && this.optionsToDisplay.length) {
            for (var i = index + 1; index < this.optionsToDisplay.length - 1; i++) {
              var option = this.optionsToDisplay[i];

              if (option.disabled) {
                continue;
              } else {
                nextEnabledOption = option;
                break;
              }
            }

            if (!nextEnabledOption) {
              for (var _i4 = 0; _i4 < index; _i4++) {
                var _option2 = this.optionsToDisplay[_i4];

                if (_option2.disabled) {
                  continue;
                } else {
                  nextEnabledOption = _option2;
                  break;
                }
              }
            }
          }

          return nextEnabledOption;
        }
      }, {
        key: "onKeydown",
        value: function onKeydown(event, search) {
          if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {
            return;
          }

          switch (event.which) {
            //down
            case 40:
              if (!this.overlayVisible && event.altKey) {
                this.show();
              } else {
                if (this.group) {
                  var selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : -1;

                  if (selectedItemIndex !== -1) {
                    var nextItemIndex = selectedItemIndex.itemIndex + 1;

                    if (nextItemIndex < this.optionsToDisplay[selectedItemIndex.groupIndex].items.length) {
                      this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex].items[nextItemIndex]);
                      this.selectedOptionUpdated = true;
                    } else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {
                      this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex + 1].items[0]);
                      this.selectedOptionUpdated = true;
                    }
                  } else {
                    this.selectItem(event, this.optionsToDisplay[0].items[0]);
                  }
                } else {
                  var _selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;

                  var nextEnabledOption = this.findNextEnabledOption(_selectedItemIndex);

                  if (nextEnabledOption) {
                    this.selectItem(event, nextEnabledOption);
                    this.selectedOptionUpdated = true;
                  }
                }
              }

              event.preventDefault();
              break;
            //up

            case 38:
              if (this.group) {
                var _selectedItemIndex2 = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : -1;

                if (_selectedItemIndex2 !== -1) {
                  var prevItemIndex = _selectedItemIndex2.itemIndex - 1;

                  if (prevItemIndex >= 0) {
                    this.selectItem(event, this.optionsToDisplay[_selectedItemIndex2.groupIndex].items[prevItemIndex]);
                    this.selectedOptionUpdated = true;
                  } else if (prevItemIndex < 0) {
                    var prevGroup = this.optionsToDisplay[_selectedItemIndex2.groupIndex - 1];

                    if (prevGroup) {
                      this.selectItem(event, prevGroup.items[prevGroup.items.length - 1]);
                      this.selectedOptionUpdated = true;
                    }
                  }
                }
              } else {
                var _selectedItemIndex3 = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;

                var prevEnabledOption = this.findPrevEnabledOption(_selectedItemIndex3);

                if (prevEnabledOption) {
                  this.selectItem(event, prevEnabledOption);
                  this.selectedOptionUpdated = true;
                }
              }

              event.preventDefault();
              break;
            //space

            case 32:
            case 32:
              if (!this.overlayVisible) {
                this.show();
                event.preventDefault();
              }

              break;
            //enter

            case 13:
              if (!this.filter || this.optionsToDisplay && this.optionsToDisplay.length > 0) {
                this.hide(event);
              }

              event.preventDefault();
              break;
            //escape and tab

            case 27:
            case 9:
              this.hide(event);
              break;
            //search item based on keyboard input

            default:
              if (search) {
                this.search(event);
              }

              break;
          }
        }
      }, {
        key: "search",
        value: function search(event) {
          var _this62 = this;

          if (this.searchTimeout) {
            clearTimeout(this.searchTimeout);
          }

          var char = event.key;
          this.previousSearchChar = this.currentSearchChar;
          this.currentSearchChar = char;
          if (this.previousSearchChar === this.currentSearchChar) this.searchValue = this.currentSearchChar;else this.searchValue = this.searchValue ? this.searchValue + char : char;
          var newOption;

          if (this.group) {
            var searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : {
              groupIndex: 0,
              itemIndex: 0
            };
            newOption = this.searchOptionWithinGroup(searchIndex);
          } else {
            var _searchIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;

            newOption = this.searchOption(++_searchIndex);
          }

          if (newOption) {
            this.selectItem(event, newOption);
            this.selectedOptionUpdated = true;
          }

          this.searchTimeout = setTimeout(function () {
            _this62.searchValue = null;
          }, 250);
        }
      }, {
        key: "searchOption",
        value: function searchOption(index) {
          var option;

          if (this.searchValue) {
            option = this.searchOptionInRange(index, this.optionsToDisplay.length);

            if (!option) {
              option = this.searchOptionInRange(0, index);
            }
          }

          return option;
        }
      }, {
        key: "searchOptionInRange",
        value: function searchOptionInRange(start, end) {
          for (var i = start; i < end; i++) {
            var opt = this.optionsToDisplay[i];

            if (opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {
              return opt;
            }
          }

          return null;
        }
      }, {
        key: "searchOptionWithinGroup",
        value: function searchOptionWithinGroup(index) {
          var option;

          if (this.searchValue) {
            for (var i = index.groupIndex; i < this.optionsToDisplay.length; i++) {
              for (var j = index.groupIndex === i ? index.itemIndex + 1 : 0; j < this.optionsToDisplay[i].items.length; j++) {
                var opt = this.optionsToDisplay[i].items[j];

                if (opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {
                  return opt;
                }
              }
            }

            if (!option) {
              for (var _i5 = 0; _i5 <= index.groupIndex; _i5++) {
                for (var _j3 = 0; _j3 < (index.groupIndex === _i5 ? index.itemIndex : this.optionsToDisplay[_i5].items.length); _j3++) {
                  var _opt = this.optionsToDisplay[_i5].items[_j3];

                  if (_opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {
                    return _opt;
                  }
                }
              }
            }
          }

          return null;
        }
      }, {
        key: "findOptionIndex",
        value: function findOptionIndex(val, opts) {
          var index = -1;

          if (opts) {
            for (var i = 0; i < opts.length; i++) {
              if (val == null && opts[i].value == null || primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].equals(val, opts[i].value, this.dataKey)) {
                index = i;
                break;
              }
            }
          }

          return index;
        }
      }, {
        key: "findOptionGroupIndex",
        value: function findOptionGroupIndex(val, opts) {
          var groupIndex, itemIndex;

          if (opts) {
            for (var i = 0; i < opts.length; i++) {
              groupIndex = i;
              itemIndex = this.findOptionIndex(val, opts[i].items);

              if (itemIndex !== -1) {
                break;
              }
            }
          }

          if (itemIndex !== -1) {
            return {
              groupIndex: groupIndex,
              itemIndex: itemIndex
            };
          } else {
            return -1;
          }
        }
      }, {
        key: "findOption",
        value: function findOption(val, opts, inGroup) {
          if (this.group && !inGroup) {
            var opt;

            if (opts && opts.length) {
              var _iterator8 = _createForOfIteratorHelper(opts),
                  _step8;

              try {
                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                  var optgroup = _step8.value;
                  opt = this.findOption(val, optgroup.items, true);

                  if (opt) {
                    break;
                  }
                }
              } catch (err) {
                _iterator8.e(err);
              } finally {
                _iterator8.f();
              }
            }

            return opt;
          } else {
            var index = this.findOptionIndex(val, opts);
            return index != -1 ? opts[index] : null;
          }
        }
      }, {
        key: "onFilter",
        value: function onFilter(event) {
          var inputValue = event.target.value;

          if (inputValue && inputValue.length) {
            this.filterValue = inputValue;
            this.activateFilter();
          } else {
            this.filterValue = null;
            this.optionsToDisplay = this.options;
          }

          this.optionsChanged = true;
        }
      }, {
        key: "activateFilter",
        value: function activateFilter() {
          var searchFields = this.filterBy.split(',');

          if (this.options && this.options.length) {
            if (this.group) {
              var filteredGroups = [];

              var _iterator9 = _createForOfIteratorHelper(this.options),
                  _step9;

              try {
                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
                  var optgroup = _step9.value;
                  var filteredSubOptions = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["FilterUtils"].filter(optgroup.items, searchFields, this.filterValue, this.filterMatchMode);

                  if (filteredSubOptions && filteredSubOptions.length) {
                    filteredGroups.push({
                      label: optgroup.label,
                      value: optgroup.value,
                      items: filteredSubOptions
                    });
                  }
                }
              } catch (err) {
                _iterator9.e(err);
              } finally {
                _iterator9.f();
              }

              this.optionsToDisplay = filteredGroups;
            } else {
              this.optionsToDisplay = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["FilterUtils"].filter(this.options, searchFields, this.filterValue, this.filterMatchMode);
            }

            this.optionsChanged = true;
          }
        }
      }, {
        key: "applyFocus",
        value: function applyFocus() {
          if (this.editable) primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].findSingle(this.el.nativeElement, '.ui-dropdown-label.ui-inputtext').focus();else primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].findSingle(this.el.nativeElement, 'input[readonly]').focus();
        }
      }, {
        key: "focus",
        value: function focus() {
          this.applyFocus();
        }
      }, {
        key: "bindDocumentClickListener",
        value: function bindDocumentClickListener() {
          var _this63 = this;

          if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'click', function (event) {
              if (!_this63.selfClick && !_this63.itemClick) {
                _this63.hide(event);

                _this63.unbindDocumentClickListener();
              }

              _this63.clearClickState();

              _this63.cd.markForCheck();
            });
          }
        }
      }, {
        key: "clearClickState",
        value: function clearClickState() {
          this.selfClick = false;
          this.itemClick = false;
        }
      }, {
        key: "unbindDocumentClickListener",
        value: function unbindDocumentClickListener() {
          if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
          }
        }
      }, {
        key: "bindDocumentResizeListener",
        value: function bindDocumentResizeListener() {
          this.documentResizeListener = this.onWindowResize.bind(this);
          window.addEventListener('resize', this.documentResizeListener);
        }
      }, {
        key: "unbindDocumentResizeListener",
        value: function unbindDocumentResizeListener() {
          if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
          }
        }
      }, {
        key: "onWindowResize",
        value: function onWindowResize() {
          if (!primeng_dom__WEBPACK_IMPORTED_MODULE_5__["DomHandler"].isAndroid()) {
            this.hide(event);
          }
        }
      }, {
        key: "updateFilledState",
        value: function updateFilledState() {
          this.filled = this.selectedOption != null;
        }
      }, {
        key: "clear",
        value: function clear(event) {
          this.clearClick = true;
          this.value = null;
          this.onModelChange(this.value);
          this.onChange.emit({
            originalEvent: event,
            value: this.value
          });
          this.updateSelectedOption(this.value);
          this.updateEditableLabel();
          this.updateFilledState();
        }
      }, {
        key: "onOverlayHide",
        value: function onOverlayHide() {
          this.unbindDocumentClickListener();
          this.unbindDocumentResizeListener();
          this.overlay = null;
          this.itemsWrapper = null;
          this.onModelTouched();
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.restoreOverlayAppend();
          this.onOverlayHide();
        }
      }, {
        key: "disabled",
        get: function get() {
          return this._disabled;
        },
        set: function set(_disabled) {
          if (_disabled) this.focused = false;
          this._disabled = _disabled;

          if (!this.cd.destroyed) {
            this.cd.detectChanges();
          }
        }
      }, {
        key: "options",
        get: function get() {
          return this._options;
        },
        set: function set(val) {
          var opts = this.optionLabel ? primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].generateSelectItems(val, this.optionLabel) : val;
          this._options = opts;
          this.optionsToDisplay = this._options;
          this.updateSelectedOption(this.value);
          this.optionsChanged = true;
          this.updateFilledState();

          if (this.filterValue && this.filterValue.length) {
            this.activateFilter();
          }
        }
      }, {
        key: "label",
        get: function get() {
          return this.selectedOption ? this.selectedOption.label : null;
        }
      }]);

      return Dropdown;
    }();

    Dropdown.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "scrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "filter", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "panelStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "panelStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "readonly", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "required", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "editable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "placeholder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "filterPlaceholder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "selectId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "dataKey", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "filterBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "autofocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "resetFilterOnHide", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "dropdownIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "optionLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "autoDisplayFirst", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "group", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "showClear", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "emptyFilterMessage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "virtualScroll", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "itemSize", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "autoZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "baseZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "showTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "hideTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "ariaFilterLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "ariaLabelledBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "filterMatchMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "maxlength", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "tooltip", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "tooltipPosition", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "tooltipPositionStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "tooltipStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "autofocusFilter", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], Dropdown.prototype, "onChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], Dropdown.prototype, "onFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], Dropdown.prototype, "onBlur", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], Dropdown.prototype, "onClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], Dropdown.prototype, "onShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], Dropdown.prototype, "onHide", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('container')], Dropdown.prototype, "containerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('filter')], Dropdown.prototype, "filterViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('in')], Dropdown.prototype, "focusViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_0__["CdkVirtualScrollViewport"])], Dropdown.prototype, "viewPort", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('editableInput')], Dropdown.prototype, "editableInputViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_4__["PrimeTemplate"])], Dropdown.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "disabled", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], Dropdown.prototype, "options", null);

    Dropdown = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'p-dropdown',
      template: "\n         <div #container [ngClass]=\"{'ui-dropdown ui-widget ui-state-default ui-corner-all':true,\n            'ui-state-disabled':disabled, 'ui-dropdown-open':overlayVisible, 'ui-state-focus':focused, 'ui-dropdown-clearable': showClear && !disabled}\"\n            (click)=\"onMouseclick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #in [attr.id]=\"inputId\" type=\"text\" [attr.aria-label]=\"selectedOption ? selectedOption.label : ' '\" readonly (focus)=\"onInputFocus($event)\" aria-haspopup=\"listbox\"\n                    aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" [attr.aria-labelledby]=\"ariaLabelledBy\" (blur)=\"onInputBlur($event)\" (keydown)=\"onKeydown($event, true)\" \n                    [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.autofocus]=\"autofocus\" role=\"listbox\">\n            </div>\n            <div class=\"ui-dropdown-label-container\" [pTooltip]=\"tooltip\" [tooltipPosition]=\"tooltipPosition\" [positionStyle]=\"tooltipPositionStyle\" [tooltipStyleClass]=\"tooltipStyleClass\">\n                <label [ngClass]=\"{'ui-dropdown-label ui-inputtext ui-corner-all':true,'ui-dropdown-label-empty':(label == null || label.length === 0)}\" *ngIf=\"!editable && (label != null)\">\n                    <ng-container *ngIf=\"!selectedItemTemplate\">{{label||'empty'}}</ng-container>\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: selectedOption}\"></ng-container>\n                </label>\n                <label [ngClass]=\"{'ui-dropdown-label ui-inputtext ui-corner-all ui-placeholder':true,'ui-dropdown-label-empty': (placeholder == null || placeholder.length === 0)}\" *ngIf=\"!editable && (label == null)\">{{placeholder||'empty'}}</label>\n                <input #editableInput type=\"text\" [attr.maxlength]=\"maxlength\" [attr.aria-label]=\"selectedOption ? selectedOption.label : ' '\" class=\"ui-dropdown-label ui-inputtext ui-corner-all\" *ngIf=\"editable\" [disabled]=\"disabled\" [attr.placeholder]=\"placeholder\"\n                    aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" (click)=\"onEditableInputClick($event)\" (input)=\"onEditableInputChange($event)\" (focus)=\"onEditableInputFocus($event)\" (blur)=\"onInputBlur($event)\">\n                <i class=\"ui-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"value != null && showClear && !disabled\"></i>\n            </div>\n            <div class=\"ui-dropdown-trigger ui-state-default ui-corner-right\" role=\"button\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\">\n                <span class=\"ui-dropdown-trigger-icon ui-clickable\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <div *ngIf=\"overlayVisible\" [ngClass]=\"'ui-dropdown-panel  ui-widget ui-widget-content ui-corner-all ui-shadow'\" [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                <div *ngIf=\"filter\" class=\"ui-dropdown-filter-container\" (click)=\"$event.stopPropagation()\">\n                    <input #filter type=\"text\" autocomplete=\"off\" [value]=\"filterValue||''\" class=\"ui-dropdown-filter ui-inputtext ui-widget ui-state-default ui-corner-all\" [attr.placeholder]=\"filterPlaceholder\"\n                    (keydown.enter)=\"$event.preventDefault()\" (keydown)=\"onKeydown($event, false)\" (input)=\"onFilter($event)\" [attr.aria-label]=\"ariaFilterLabel\">\n                    <span class=\"ui-dropdown-filter-icon pi pi-search\"></span>\n                </div>\n                <div class=\"ui-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\">\n                    <ul class=\"ui-dropdown-items ui-dropdown-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\" role=\"listbox\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"optionsToDisplay\">\n                                <li class=\"ui-dropdown-item-group\">\n                                    <span *ngIf=\"!groupTemplate\">{{optgroup.label||'empty'}}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optgroup.items, selectedOption: selectedOption}\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n\n                            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                                <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                    <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" \n                                                    (onClick)=\"onItemClick($event)\"\n                                                    [template]=\"itemTemplate\"></p-dropdownItem>\n                                </ng-template>\n                            </ng-container>\n                            <ng-template #virtualScrollList>\n                                <cdk-virtual-scroll-viewport (scrolledIndexChange)=\"scrollToSelectedVirtualScrollElement()\" #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && optionsToDisplay && optionsToDisplay.length\">\n                                    <ng-container *cdkVirtualFor=\"let option of options; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">         \n                                        <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\"\n                                                                   (onClick)=\"onItemClick($event)\"\n                                                                   [template]=\"itemTemplate\"></p-dropdownItem>\n                                    </ng-container>\n                                </cdk-virtual-scroll-viewport>\n                            </ng-template>\n                        </ng-template>\n                        <li *ngIf=\"filter && (!optionsToDisplay || (optionsToDisplay && optionsToDisplay.length === 0))\" class=\"ui-dropdown-empty-message\">{{emptyFilterMessage}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["trigger"])('overlayAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["style"])({
        transform: 'translateY(5%)',
        opacity: 0
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["style"])({
        transform: 'translateY(0)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["transition"])('void => visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["animate"])('{{showTransitionParams}}')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["transition"])('visible => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["animate"])('{{hideTransitionParams}}'))])],
      host: {
        '[class.ui-inputwrapper-filled]': 'filled',
        '[class.ui-inputwrapper-focus]': 'focused'
      },
      providers: [DROPDOWN_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectionStrategy"].Default
    })], Dropdown);

    var DropdownModule = function DropdownModule() {
      _classCallCheck(this, DropdownModule);
    };

    DropdownModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_4__["SharedModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_0__["ScrollingModule"], primeng_tooltip__WEBPACK_IMPORTED_MODULE_8__["TooltipModule"]],
      exports: [Dropdown, primeng_api__WEBPACK_IMPORTED_MODULE_4__["SharedModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_0__["ScrollingModule"]],
      declarations: [Dropdown, DropdownItem]
    })], DropdownModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-dropdown.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-dynamicdialog.js":
  /*!****************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-dynamicdialog.js ***!
    \****************************************************************/

  /*! exports provided: DialogService, DynamicDialogComponent, DynamicDialogConfig, DynamicDialogInjector, DynamicDialogModule, DynamicDialogRef, ɵa */

  /***/
  function node_modulesPrimengFesm2015PrimengDynamicdialogJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DialogService", function () {
      return DialogService;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DynamicDialogComponent", function () {
      return DynamicDialogComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DynamicDialogConfig", function () {
      return DynamicDialogConfig;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DynamicDialogInjector", function () {
      return DynamicDialogInjector;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DynamicDialogModule", function () {
      return DynamicDialogModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DynamicDialogRef", function () {
      return DynamicDialogRef;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵa", function () {
      return DynamicDialogContent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var DynamicDialogContent = function DynamicDialogContent(viewContainerRef) {
      _classCallCheck(this, DynamicDialogContent);

      this.viewContainerRef = viewContainerRef;
    };

    DynamicDialogContent.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]
      }];
    };

    DynamicDialogContent = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pDynamicDialogContent]'
    })], DynamicDialogContent);

    var DynamicDialogConfig = function DynamicDialogConfig() {
      _classCallCheck(this, DynamicDialogConfig);
    };

    var DynamicDialogRef =
    /*#__PURE__*/
    function () {
      function DynamicDialogRef() {
        _classCallCheck(this, DynamicDialogRef);

        this._onClose = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.onClose = this._onClose.asObservable();
        this._onDestroy = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.onDestroy = this._onDestroy.asObservable();
      }

      _createClass(DynamicDialogRef, [{
        key: "close",
        value: function close(result) {
          this._onClose.next(result);
        }
      }, {
        key: "destroy",
        value: function destroy() {
          this._onDestroy.next();
        }
      }]);

      return DynamicDialogRef;
    }();

    var __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var showAnimation = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animation"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: '{{transform}}',
      opacity: 0
    }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transition}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: 'none',
      opacity: 1
    }))]);
    var hideAnimation = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animation"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{transition}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
      transform: '{{transform}}',
      opacity: 0
    }))]);

    var DynamicDialogComponent =
    /*#__PURE__*/
    function () {
      function DynamicDialogComponent(componentFactoryResolver, cd, renderer, config, dialogRef, zone) {
        _classCallCheck(this, DynamicDialogComponent);

        this.componentFactoryResolver = componentFactoryResolver;
        this.cd = cd;
        this.renderer = renderer;
        this.config = config;
        this.dialogRef = dialogRef;
        this.zone = zone;
        this.visible = true;
        this.transformOptions = "scale(0.7)";
      }

      _createClass(DynamicDialogComponent, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          this.loadChildComponent(this.childComponentType);
          this.cd.detectChanges();
        }
      }, {
        key: "onOverlayClicked",
        value: function onOverlayClicked(evt) {
          this.dialogRef.close();
        }
      }, {
        key: "onDialogClicked",
        value: function onDialogClicked(evt) {
          evt.stopPropagation();
        }
      }, {
        key: "loadChildComponent",
        value: function loadChildComponent(componentType) {
          var componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);
          var viewContainerRef = this.insertionPoint.viewContainerRef;
          viewContainerRef.clear();
          this.componentRef = viewContainerRef.createComponent(componentFactory);
        }
      }, {
        key: "moveOnTop",
        value: function moveOnTop() {
          if (this.config.autoZIndex !== false) {
            var zIndex = (this.config.baseZIndex || 0) + ++primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex;
            this.container.style.zIndex = String(zIndex);
            this.maskViewChild.nativeElement.style.zIndex = String(zIndex - 1);
          }
        }
      }, {
        key: "onAnimationStart",
        value: function onAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
              this.container = event.element;
              this.moveOnTop();
              this.bindGlobalListeners();
              primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(document.body, 'ui-overflow-hidden');
              this.focus();
              break;

            case 'void':
              this.onContainerDestroy();
              break;
          }
        }
      }, {
        key: "onAnimationEnd",
        value: function onAnimationEnd(event) {
          if (event.toState === 'void') {
            this.dialogRef.destroy();
          }
        }
      }, {
        key: "onContainerDestroy",
        value: function onContainerDestroy() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(document.body, 'ui-overflow-hidden');
          this.unbindGlobalListeners();
          this.container = null;
        }
      }, {
        key: "close",
        value: function close() {
          this.visible = false;
        }
      }, {
        key: "onMaskClick",
        value: function onMaskClick() {
          if (this.config.dismissableMask) {
            this.close();
          }
        }
      }, {
        key: "onKeydown",
        value: function onKeydown(event) {
          if (event.which === 9) {
            event.preventDefault();
            var focusableElements = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getFocusableElements(this.container);

            if (focusableElements && focusableElements.length > 0) {
              if (!document.activeElement) {
                focusableElements[0].focus();
              } else {
                var focusedIndex = focusableElements.indexOf(document.activeElement);

                if (event.shiftKey) {
                  if (focusedIndex == -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();
                } else {
                  if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();
                }
              }
            }
          }
        }
      }, {
        key: "focus",
        value: function focus() {
          var focusable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.container, 'a');

          if (focusable) {
            this.zone.runOutsideAngular(function () {
              setTimeout(function () {
                return focusable.focus();
              }, 5);
            });
          }
        }
      }, {
        key: "bindGlobalListeners",
        value: function bindGlobalListeners() {
          this.bindDocumentKeydownListener();

          if (this.config.closeOnEscape !== false && this.config.closable !== false) {
            this.bindDocumentEscapeListener();
          }
        }
      }, {
        key: "unbindGlobalListeners",
        value: function unbindGlobalListeners() {
          this.unbindDocumentKeydownListener();
          this.unbindDocumentEscapeListener();
        }
      }, {
        key: "bindDocumentKeydownListener",
        value: function bindDocumentKeydownListener() {
          var _this64 = this;

          this.zone.runOutsideAngular(function () {
            _this64.documentKeydownListener = _this64.onKeydown.bind(_this64);
            window.document.addEventListener('keydown', _this64.documentKeydownListener);
          });
        }
      }, {
        key: "unbindDocumentKeydownListener",
        value: function unbindDocumentKeydownListener() {
          if (this.documentKeydownListener) {
            window.document.removeEventListener('keydown', this.documentKeydownListener);
            this.documentKeydownListener = null;
          }
        }
      }, {
        key: "bindDocumentEscapeListener",
        value: function bindDocumentEscapeListener() {
          var _this65 = this;

          this.documentEscapeListener = this.renderer.listen('document', 'keydown', function (event) {
            if (event.which == 27) {
              if (parseInt(_this65.container.style.zIndex) == primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex + _this65.config.baseZIndex) {
                _this65.close();
              }
            }
          });
        }
      }, {
        key: "unbindDocumentEscapeListener",
        value: function unbindDocumentEscapeListener() {
          if (this.documentEscapeListener) {
            this.documentEscapeListener();
            this.documentEscapeListener = null;
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.onContainerDestroy();

          if (this.componentRef) {
            this.componentRef.destroy();
          }
        }
      }]);

      return DynamicDialogComponent;
    }();

    DynamicDialogComponent.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: DynamicDialogConfig
      }, {
        type: DynamicDialogRef
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate$1([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(DynamicDialogContent)], DynamicDialogComponent.prototype, "insertionPoint", void 0);

    __decorate$1([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('mask')], DynamicDialogComponent.prototype, "maskViewChild", void 0);

    DynamicDialogComponent = __decorate$1([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-dynamicDialog',
      template: "\n        <div #mask class=\"ui-widget-overlay ui-dialog-mask ui-dialog-visible ui-dialog-mask-scrollblocker\">\n            <div [ngClass]=\"{'ui-dialog ui-dynamicdialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl': config.rtl}\" [ngStyle]=\"config.style\" [class]=\"config.styleClass\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: config.transitionOptions || '150ms cubic-bezier(0, 0, 0.2, 1)'}}\"\n                (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" *ngIf=\"visible\"\n                [style.width]=\"config.width\" [style.height]=\"config.height\">\n                <div class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" *ngIf=\"config.showHeader === false ? false: true\">\n                    <span class=\"ui-dialog-title\">{{config.header}}</span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a [ngClass]=\"'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all'\" tabindex=\"0\" role=\"button\" (click)=\"close()\" (keydown.enter)=\"close()\" *ngIf=\"config.closable !== false\">\n                            <span class=\"pi pi-times\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"config.contentStyle\">\n                    <ng-template pDynamicDialogContent></ng-template>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"config.footer\">\n                    {{config.footer}}\n                </div>\n            </div>\n        </div>\n\t",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('animation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visible', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["useAnimation"])(showAnimation)]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visible => void', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["useAnimation"])(hideAnimation)])])],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], DynamicDialogComponent);

    var DynamicDialogModule = function DynamicDialogModule() {
      _classCallCheck(this, DynamicDialogModule);
    };

    DynamicDialogModule = __decorate$1([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]],
      declarations: [DynamicDialogComponent, DynamicDialogContent],
      entryComponents: [DynamicDialogComponent]
    })], DynamicDialogModule);

    var DynamicDialogInjector =
    /*#__PURE__*/
    function () {
      function DynamicDialogInjector(_parentInjector, _additionalTokens) {
        _classCallCheck(this, DynamicDialogInjector);

        this._parentInjector = _parentInjector;
        this._additionalTokens = _additionalTokens;
      }

      _createClass(DynamicDialogInjector, [{
        key: "get",
        value: function get(token, notFoundValue, flags) {
          var value = this._additionalTokens.get(token);

          if (value) return value;
          return this._parentInjector.get(token, notFoundValue);
        }
      }]);

      return DynamicDialogInjector;
    }();

    var __decorate$2 = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var DialogService =
    /*#__PURE__*/
    function () {
      function DialogService(componentFactoryResolver, appRef, injector) {
        _classCallCheck(this, DialogService);

        this.componentFactoryResolver = componentFactoryResolver;
        this.appRef = appRef;
        this.injector = injector;
      }

      _createClass(DialogService, [{
        key: "open",
        value: function open(componentType, config) {
          var dialogRef = this.appendDialogComponentToBody(config);
          this.dialogComponentRef.instance.childComponentType = componentType;
          return dialogRef;
        }
      }, {
        key: "appendDialogComponentToBody",
        value: function appendDialogComponentToBody(config) {
          var _this66 = this;

          var map = new WeakMap();
          map.set(DynamicDialogConfig, config);
          var dialogRef = new DynamicDialogRef();
          map.set(DynamicDialogRef, dialogRef);
          var sub = dialogRef.onClose.subscribe(function () {
            _this66.dialogComponentRef.instance.close();
          });
          var destroySub = dialogRef.onDestroy.subscribe(function () {
            _this66.removeDialogComponentFromBody();

            destroySub.unsubscribe();
            sub.unsubscribe();
          });
          var componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent);
          var componentRef = componentFactory.create(new DynamicDialogInjector(this.injector, map));
          this.appRef.attachView(componentRef.hostView);
          var domElem = componentRef.hostView.rootNodes[0];
          document.body.appendChild(domElem);
          this.dialogComponentRef = componentRef;
          return dialogRef;
        }
      }, {
        key: "removeDialogComponentFromBody",
        value: function removeDialogComponentFromBody() {
          this.appRef.detachView(this.dialogComponentRef.hostView);
          this.dialogComponentRef.destroy();
        }
      }]);

      return DialogService;
    }();

    DialogService.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]
      }];
    };

    DialogService = __decorate$2([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()], DialogService);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-dynamicdialog.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-focustrap.js":
  /*!************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-focustrap.js ***!
    \************************************************************/

  /*! exports provided: FocusTrap, FocusTrapModule */

  /***/
  function node_modulesPrimengFesm2015PrimengFocustrapJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FocusTrap", function () {
      return FocusTrap;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FocusTrapModule", function () {
      return FocusTrapModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var FocusTrap =
    /*#__PURE__*/
    function () {
      function FocusTrap(el) {
        _classCallCheck(this, FocusTrap);

        this.el = el;
      }

      _createClass(FocusTrap, [{
        key: "onkeydown",
        value: function onkeydown(e) {
          if (this.pFocusTrapDisabled !== true) {
            e.preventDefault();
            var focusableElements = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getFocusableElements(this.el.nativeElement);

            if (focusableElements && focusableElements.length > 0) {
              if (!document.activeElement) {
                focusableElements[0].focus();
              } else {
                var focusedIndex = focusableElements.indexOf(document.activeElement);

                if (e.shiftKey) {
                  if (focusedIndex == -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();
                } else {
                  if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();
                }
              }
            }
          }
        }
      }]);

      return FocusTrap;
    }();

    FocusTrap.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], FocusTrap.prototype, "pFocusTrapDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.tab', ['$event']), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.shift.tab', ['$event'])], FocusTrap.prototype, "onkeydown", null);

    FocusTrap = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pFocusTrap]'
    })], FocusTrap);

    var FocusTrapModule = function FocusTrapModule() {
      _classCallCheck(this, FocusTrapModule);
    };

    FocusTrapModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [FocusTrap],
      declarations: [FocusTrap]
    })], FocusTrapModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-focustrap.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-fullcalendar.js":
  /*!***************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-fullcalendar.js ***!
    \***************************************************************/

  /*! exports provided: FullCalendar, FullCalendarModule */

  /***/
  function node_modulesPrimengFesm2015PrimengFullcalendarJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FullCalendar", function () {
      return FullCalendar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FullCalendarModule", function () {
      return FullCalendarModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @fullcalendar/core */
    "./node_modules/@fullcalendar/core/main.js");
    /* harmony import */


    var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_2___default =
    /*#__PURE__*/
    __webpack_require__.n(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_2__);

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var FullCalendar =
    /*#__PURE__*/
    function () {
      function FullCalendar(el) {
        _classCallCheck(this, FullCalendar);

        this.el = el;
      }

      _createClass(FullCalendar, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.config = {
            theme: true
          };

          if (this.options) {
            for (var prop in this.options) {
              this.config[prop] = this.options[prop];
            }
          }
        }
      }, {
        key: "ngAfterViewChecked",
        value: function ngAfterViewChecked() {
          if (!this.initialized && this.el.nativeElement.offsetParent) {
            this.initialize();
          }
        }
      }, {
        key: "initialize",
        value: function initialize() {
          this.calendar = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_2__["Calendar"](this.el.nativeElement.children[0], this.config);
          this.calendar.render();
          this.initialized = true;

          if (this.events) {
            this.calendar.removeAllEventSources();
            this.calendar.addEventSource(this.events);
          }
        }
      }, {
        key: "getCalendar",
        value: function getCalendar() {
          return this.calendar;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.calendar) {
            this.calendar.destroy();
            this.initialized = false;
            this.calendar = null;
          }
        }
      }, {
        key: "events",
        get: function get() {
          return this._events;
        },
        set: function set(value) {
          this._events = value;

          if (this._events && this.calendar) {
            this.calendar.removeAllEventSources();
            this.calendar.addEventSource(this._events);
          }
        }
      }, {
        key: "options",
        get: function get() {
          return this._options;
        },
        set: function set(value) {
          this._options = value;

          if (this._options && this.calendar) {
            for (var prop in this._options) {
              var optionValue = this._options[prop];
              this.config[prop] = optionValue;
              this.calendar.setOption(prop, optionValue);
            }
          }
        }
      }]);

      return FullCalendar;
    }();

    FullCalendar.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], FullCalendar.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], FullCalendar.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], FullCalendar.prototype, "events", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], FullCalendar.prototype, "options", null);

    FullCalendar = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-fullCalendar',
      template: '<div [ngStyle]="style" [class]="styleClass"></div>',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], FullCalendar);

    var FullCalendarModule = function FullCalendarModule() {
      _classCallCheck(this, FullCalendarModule);
    };

    FullCalendarModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [FullCalendar],
      declarations: [FullCalendar]
    })], FullCalendarModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-fullcalendar.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-inputswitch.js":
  /*!**************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-inputswitch.js ***!
    \**************************************************************/

  /*! exports provided: INPUTSWITCH_VALUE_ACCESSOR, InputSwitch, InputSwitchModule */

  /***/
  function node_modulesPrimengFesm2015PrimengInputswitchJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "INPUTSWITCH_VALUE_ACCESSOR", function () {
      return INPUTSWITCH_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "InputSwitch", function () {
      return InputSwitch;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "InputSwitchModule", function () {
      return InputSwitchModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var INPUTSWITCH_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
        return InputSwitch;
      }),
      multi: true
    };

    var InputSwitch =
    /*#__PURE__*/
    function () {
      function InputSwitch(cd) {
        _classCallCheck(this, InputSwitch);

        this.cd = cd;
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.checked = false;
        this.focused = false;

        this.onModelChange = function () {};

        this.onModelTouched = function () {};
      }

      _createClass(InputSwitch, [{
        key: "onClick",
        value: function onClick(event, cb) {
          if (!this.disabled && !this.readonly) {
            event.preventDefault();
            this.toggle(event);
            cb.focus();
          }
        }
      }, {
        key: "onInputChange",
        value: function onInputChange(event) {
          if (!this.readonly) {
            var inputChecked = event.target.checked;
            this.updateModel(event, inputChecked);
          }
        }
      }, {
        key: "toggle",
        value: function toggle(event) {
          this.updateModel(event, !this.checked);
        }
      }, {
        key: "updateModel",
        value: function updateModel(event, value) {
          this.checked = value;
          this.onModelChange(this.checked);
          this.onChange.emit({
            originalEvent: event,
            checked: this.checked
          });
        }
      }, {
        key: "onFocus",
        value: function onFocus(event) {
          this.focused = true;
        }
      }, {
        key: "onBlur",
        value: function onBlur(event) {
          this.focused = false;
          this.onModelTouched();
        }
      }, {
        key: "writeValue",
        value: function writeValue(checked) {
          this.checked = checked;
          this.cd.markForCheck();
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(val) {
          this.disabled = val;
        }
      }]);

      return InputSwitch;
    }();

    InputSwitch.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], InputSwitch.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], InputSwitch.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], InputSwitch.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], InputSwitch.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], InputSwitch.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], InputSwitch.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], InputSwitch.prototype, "readonly", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], InputSwitch.prototype, "ariaLabelledBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], InputSwitch.prototype, "onChange", void 0);

    InputSwitch = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-inputSwitch',
      template: "\n        <div [ngClass]=\"{'ui-inputswitch ui-widget': true, 'ui-inputswitch-checked': checked, 'ui-state-disabled': disabled, 'ui-inputswitch-readonly': readonly, 'ui-inputswitch-focus': focused}\" \n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" role=\"switch\" [attr.aria-checked]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\"/>\n            </div>\n            <span class=\"ui-inputswitch-slider\"></span>\n        </div>\n    ",
      providers: [INPUTSWITCH_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], InputSwitch);

    var InputSwitchModule = function InputSwitchModule() {
      _classCallCheck(this, InputSwitchModule);
    };

    InputSwitchModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [InputSwitch],
      declarations: [InputSwitch]
    })], InputSwitchModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-inputswitch.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-paginator.js":
  /*!************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-paginator.js ***!
    \************************************************************/

  /*! exports provided: Paginator, PaginatorModule */

  /***/
  function node_modulesPrimengFesm2015PrimengPaginatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Paginator", function () {
      return Paginator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PaginatorModule", function () {
      return PaginatorModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var primeng_dropdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/dropdown */
    "./node_modules/primeng/fesm2015/primeng-dropdown.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var Paginator =
    /*#__PURE__*/
    function () {
      function Paginator(cd) {
        _classCallCheck(this, Paginator);

        this.cd = cd;
        this.pageLinkSize = 5;
        this.onPageChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.alwaysShow = true;
        this.dropdownScrollHeight = '200px';
        this.currentPageReportTemplate = '{currentPage} of {totalPages}';
        this.totalRecords = 0;
        this.rows = 0;
        this._first = 0;
      }

      _createClass(Paginator, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.updatePaginatorState();
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(simpleChange) {
          if (simpleChange.totalRecords) {
            this.updatePageLinks();
            this.updatePaginatorState();
            this.updateFirst();
            this.updateRowsPerPageOptions();
          }

          if (simpleChange.first) {
            this._first = simpleChange.first.currentValue;
            this.updatePageLinks();
            this.updatePaginatorState();
          }

          if (simpleChange.rows) {
            this.updatePageLinks();
            this.updatePaginatorState();
          }

          if (simpleChange.rowsPerPageOptions) {
            this.updateRowsPerPageOptions();
          }
        }
      }, {
        key: "updateRowsPerPageOptions",
        value: function updateRowsPerPageOptions() {
          if (this.rowsPerPageOptions) {
            this.rowsPerPageItems = [];

            var _iterator10 = _createForOfIteratorHelper(this.rowsPerPageOptions),
                _step10;

            try {
              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
                var opt = _step10.value;

                if (typeof opt == 'object' && opt['showAll']) {
                  this.rowsPerPageItems.push({
                    label: opt['showAll'],
                    value: this.totalRecords
                  });
                } else {
                  this.rowsPerPageItems.push({
                    label: String(opt),
                    value: opt
                  });
                }
              }
            } catch (err) {
              _iterator10.e(err);
            } finally {
              _iterator10.f();
            }
          }
        }
      }, {
        key: "isFirstPage",
        value: function isFirstPage() {
          return this.getPage() === 0;
        }
      }, {
        key: "isLastPage",
        value: function isLastPage() {
          return this.getPage() === this.getPageCount() - 1;
        }
      }, {
        key: "getPageCount",
        value: function getPageCount() {
          return Math.ceil(this.totalRecords / this.rows) || 1;
        }
      }, {
        key: "calculatePageLinkBoundaries",
        value: function calculatePageLinkBoundaries() {
          var numberOfPages = this.getPageCount(),
              visiblePages = Math.min(this.pageLinkSize, numberOfPages); //calculate range, keep current in middle if necessary

          var start = Math.max(0, Math.ceil(this.getPage() - visiblePages / 2)),
              end = Math.min(numberOfPages - 1, start + visiblePages - 1); //check when approaching to last page

          var delta = this.pageLinkSize - (end - start + 1);
          start = Math.max(0, start - delta);
          return [start, end];
        }
      }, {
        key: "updatePageLinks",
        value: function updatePageLinks() {
          this.pageLinks = [];
          var boundaries = this.calculatePageLinkBoundaries(),
              start = boundaries[0],
              end = boundaries[1];

          for (var i = start; i <= end; i++) {
            this.pageLinks.push(i + 1);
          }
        }
      }, {
        key: "changePage",
        value: function changePage(p) {
          var pc = this.getPageCount();

          if (p >= 0 && p < pc) {
            this._first = this.rows * p;
            var state = {
              page: p,
              first: this.first,
              rows: this.rows,
              pageCount: pc
            };
            this.updatePageLinks();
            this.onPageChange.emit(state);
            this.updatePaginatorState();
          }
        }
      }, {
        key: "updateFirst",
        value: function updateFirst() {
          var _this67 = this;

          var page = this.getPage();

          if (page > 0 && this.totalRecords && this.first >= this.totalRecords) {
            Promise.resolve(null).then(function () {
              return _this67.changePage(page - 1);
            });
          }
        }
      }, {
        key: "getPage",
        value: function getPage() {
          return Math.floor(this.first / this.rows);
        }
      }, {
        key: "changePageToFirst",
        value: function changePageToFirst(event) {
          if (!this.isFirstPage()) {
            this.changePage(0);
          }

          event.preventDefault();
        }
      }, {
        key: "changePageToPrev",
        value: function changePageToPrev(event) {
          this.changePage(this.getPage() - 1);
          event.preventDefault();
        }
      }, {
        key: "changePageToNext",
        value: function changePageToNext(event) {
          this.changePage(this.getPage() + 1);
          event.preventDefault();
        }
      }, {
        key: "changePageToLast",
        value: function changePageToLast(event) {
          if (!this.isLastPage()) {
            this.changePage(this.getPageCount() - 1);
          }

          event.preventDefault();
        }
      }, {
        key: "onPageLinkClick",
        value: function onPageLinkClick(event, page) {
          this.changePage(page);
          event.preventDefault();
        }
      }, {
        key: "onRppChange",
        value: function onRppChange(event) {
          this.changePage(this.getPage());
        }
      }, {
        key: "updatePaginatorState",
        value: function updatePaginatorState() {
          this.paginatorState = {
            page: this.getPage(),
            pageCount: this.getPageCount(),
            rows: this.rows,
            first: this.first,
            totalRecords: this.totalRecords
          };
        }
      }, {
        key: "first",
        get: function get() {
          return this._first;
        },
        set: function set(val) {
          this._first = val;
        }
      }, {
        key: "currentPageReport",
        get: function get() {
          return this.currentPageReportTemplate.replace("{currentPage}", String(this.getPage() + 1)).replace("{totalPages}", String(this.getPageCount())).replace("{first}", String(this._first + 1)).replace("{last}", String(Math.min(this._first + this.rows, this.totalRecords))).replace("{rows}", String(this.rows)).replace("{totalRecords}", String(this.totalRecords));
        }
      }]);

      return Paginator;
    }();

    Paginator.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "pageLinkSize", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Paginator.prototype, "onPageChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "alwaysShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "templateLeft", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "templateRight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "dropdownAppendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "dropdownScrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "currentPageReportTemplate", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "showCurrentPageReport", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "totalRecords", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "rows", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "rowsPerPageOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Paginator.prototype, "first", null);

    Paginator = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-paginator',
      template: "\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-paginator ui-widget ui-widget-header ui-unselectable-text ui-helper-clearfix'\"\n            *ngIf=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\n            <div class=\"ui-paginator-left-content\" *ngIf=\"templateLeft\">\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n            <span class=\"ui-paginator-current\" *ngIf=\"showCurrentPageReport\">{{currentPageReport}}</span>\n            <a [attr.tabindex]=\"isFirstPage() ? null : '0'\" class=\"ui-paginator-first ui-paginator-element ui-state-default ui-corner-all\"\n                    (click)=\"changePageToFirst($event)\" (keydown.enter)=\"changePageToFirst($event)\" [ngClass]=\"{'ui-state-disabled':isFirstPage()}\" [tabindex]=\"isFirstPage() ? -1 : null\">\n                <span class=\"ui-paginator-icon pi pi-step-backward\"></span>\n            </a>\n            <a tabindex=\"0\" [attr.tabindex]=\"isFirstPage() ? null : '0'\" class=\"ui-paginator-prev ui-paginator-element ui-state-default ui-corner-all\"\n                    (click)=\"changePageToPrev($event)\" (keydown.enter)=\"changePageToPrev($event)\" [ngClass]=\"{'ui-state-disabled':isFirstPage()}\" [tabindex]=\"isFirstPage() ? -1 : null\">\n                <span class=\"ui-paginator-icon pi pi-caret-left\"></span>\n            </a>\n            <span class=\"ui-paginator-pages\">\n                <a tabindex=\"0\" *ngFor=\"let pageLink of pageLinks\" class=\"ui-paginator-page ui-paginator-element ui-state-default ui-corner-all\"\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\" (keydown.enter)=\"onPageLinkClick($event, pageLink - 1)\" [ngClass]=\"{'ui-state-active': (pageLink-1 == getPage())}\">{{pageLink}}</a>\n            </span>\n            <a [attr.tabindex]=\"isLastPage() ? null : '0'\" class=\"ui-paginator-next ui-paginator-element ui-state-default ui-corner-all\"\n                    (click)=\"changePageToNext($event)\" (keydown.enter)=\"changePageToNext($event)\" [ngClass]=\"{'ui-state-disabled':isLastPage()}\" [tabindex]=\"isLastPage() ? -1 : null\">\n                <span class=\"ui-paginator-icon pi pi-caret-right\"></span>\n            </a>\n            <a [attr.tabindex]=\"isLastPage() ? null : '0'\" class=\"ui-paginator-last ui-paginator-element ui-state-default ui-corner-all\"\n                    (click)=\"changePageToLast($event)\" (keydown.enter)=\"changePageToLast($event)\" [ngClass]=\"{'ui-state-disabled':isLastPage()}\" [tabindex]=\"isLastPage() ? -1 : null\">\n                <span class=\"ui-paginator-icon pi pi-step-forward\"></span>\n            </a>\n            <p-dropdown [options]=\"rowsPerPageItems\" [(ngModel)]=\"rows\" *ngIf=\"rowsPerPageOptions\" \n                (onChange)=\"onRppChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\"></p-dropdown>\n            <div class=\"ui-paginator-right-content\" *ngIf=\"templateRight\">\n                <ng-container *ngTemplateOutlet=\"templateRight; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n        </div>\n    ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Paginator);

    var PaginatorModule = function PaginatorModule() {
      _classCallCheck(this, PaginatorModule);
    };

    PaginatorModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], primeng_dropdown__WEBPACK_IMPORTED_MODULE_3__["DropdownModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], primeng_api__WEBPACK_IMPORTED_MODULE_4__["SharedModule"]],
      exports: [Paginator, primeng_dropdown__WEBPACK_IMPORTED_MODULE_3__["DropdownModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], primeng_api__WEBPACK_IMPORTED_MODULE_4__["SharedModule"]],
      declarations: [Paginator]
    })], PaginatorModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-paginator.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-panel.js":
  /*!********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-panel.js ***!
    \********************************************************/

  /*! exports provided: Panel, PanelModule */

  /***/
  function node_modulesPrimengFesm2015PrimengPanelJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Panel", function () {
      return Panel;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PanelModule", function () {
      return PanelModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var idx = 0;

    var Panel =
    /*#__PURE__*/
    function () {
      function Panel(el) {
        _classCallCheck(this, Panel);

        this.el = el;
        this.collapsed = false;
        this.expandIcon = 'pi pi-plus';
        this.collapseIcon = 'pi pi-minus';
        this.showHeader = true;
        this.toggler = "icon";
        this.collapsedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBeforeToggle = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onAfterToggle = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';
        this.id = "ui-panel-".concat(idx++);
      }

      _createClass(Panel, [{
        key: "onHeaderClick",
        value: function onHeaderClick(event) {
          if (this.toggler === 'header') {
            this.toggle(event);
          }
        }
      }, {
        key: "onIconClick",
        value: function onIconClick(event) {
          if (this.toggler === 'icon') {
            this.toggle(event);
          }
        }
      }, {
        key: "toggle",
        value: function toggle(event) {
          if (this.animating) {
            return false;
          }

          this.animating = true;
          this.onBeforeToggle.emit({
            originalEvent: event,
            collapsed: this.collapsed
          });

          if (this.toggleable) {
            if (this.collapsed) this.expand(event);else this.collapse(event);
          }

          event.preventDefault();
        }
      }, {
        key: "expand",
        value: function expand(event) {
          this.collapsed = false;
          this.collapsedChange.emit(this.collapsed);
        }
      }, {
        key: "collapse",
        value: function collapse(event) {
          this.collapsed = true;
          this.collapsedChange.emit(this.collapsed);
        }
      }, {
        key: "getBlockableElement",
        value: function getBlockableElement() {
          return this.el.nativeElement.children[0];
        }
      }, {
        key: "onToggleDone",
        value: function onToggleDone(event) {
          this.animating = false;
          this.onAfterToggle.emit({
            originalEvent: event,
            collapsed: this.collapsed
          });
        }
      }]);

      return Panel;
    }();

    Panel.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "toggleable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "header", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "collapsed", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "expandIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "collapseIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "showHeader", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "toggler", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Panel.prototype, "collapsedChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Panel.prototype, "onBeforeToggle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Panel.prototype, "onAfterToggle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Panel.prototype, "transitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["Footer"])], Panel.prototype, "footerFacet", void 0);

    Panel = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-panel',
      template: "\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\">\n                <span class=\"ui-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id + '-label'\">\n                <div class=\"ui-panel-content ui-widget-content\">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["trigger"])('panelContent', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["state"])('hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["style"])({
        height: '0',
        opacity: 0
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["style"])({
        height: '{{height}}',
        opacity: '{{opacity}}'
      }), {
        params: {
          height: '0',
          opacity: '0'
        }
      }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["style"])({
        height: '*',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["transition"])('visible <=> hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["animate"])('{{transitionParams}}')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["transition"])('void => hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["animate"])('{{transitionParams}}')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["transition"])('void => visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["animate"])('{{transitionParams}}'))])],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Panel);

    var PanelModule = function PanelModule() {
      _classCallCheck(this, PanelModule);
    };

    PanelModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [Panel, primeng_api__WEBPACK_IMPORTED_MODULE_2__["SharedModule"]],
      declarations: [Panel]
    })], PanelModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-panel.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-selectbutton.js":
  /*!***************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-selectbutton.js ***!
    \***************************************************************/

  /*! exports provided: SELECTBUTTON_VALUE_ACCESSOR, SelectButton, SelectButtonModule */

  /***/
  function node_modulesPrimengFesm2015PrimengSelectbuttonJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SELECTBUTTON_VALUE_ACCESSOR", function () {
      return SELECTBUTTON_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SelectButton", function () {
      return SelectButton;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SelectButtonModule", function () {
      return SelectButtonModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var SELECTBUTTON_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
        return SelectButton;
      }),
      multi: true
    };

    var SelectButton =
    /*#__PURE__*/
    function () {
      function SelectButton(cd) {
        _classCallCheck(this, SelectButton);

        this.cd = cd;
        this.tabindex = 0;
        this.onOptionClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

        this.onModelChange = function () {};

        this.onModelTouched = function () {};
      }

      _createClass(SelectButton, [{
        key: "ngOnChanges",
        value: function ngOnChanges(simpleChange) {
          if (simpleChange.options) {
            this._options = this.optionLabel ? primeng_utils__WEBPACK_IMPORTED_MODULE_2__["ObjectUtils"].generateSelectItems(simpleChange.options.currentValue, this.optionLabel) : simpleChange.options.currentValue;
          }
        }
      }, {
        key: "writeValue",
        value: function writeValue(value) {
          this.value = value;
          this.cd.markForCheck();
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(val) {
          this.disabled = val;
        }
      }, {
        key: "onItemClick",
        value: function onItemClick(event, option, index) {
          if (this.disabled || option.disabled) {
            return;
          }

          if (this.multiple) {
            var itemIndex = this.findItemIndex(option);
            if (itemIndex != -1) this.value = this.value.filter(function (val, i) {
              return i != itemIndex;
            });else this.value = [].concat(_toConsumableArray(this.value || []), [option.value]);
          } else {
            this.value = option.value;
          }

          this.onOptionClick.emit({
            originalEvent: event,
            option: option,
            index: index
          });
          this.onModelChange(this.value);
          this.onChange.emit({
            originalEvent: event,
            value: this.value
          });
        }
      }, {
        key: "onFocus",
        value: function onFocus(event) {
          this.focusedItem = event.target;
        }
      }, {
        key: "onBlur",
        value: function onBlur(event) {
          this.focusedItem = null;
          this.onModelTouched();
        }
      }, {
        key: "isSelected",
        value: function isSelected(option) {
          if (this.multiple) return this.findItemIndex(option) != -1;else return primeng_utils__WEBPACK_IMPORTED_MODULE_2__["ObjectUtils"].equals(option.value, this.value, this.dataKey);
        }
      }, {
        key: "findItemIndex",
        value: function findItemIndex(option) {
          var index = -1;

          if (this.value) {
            for (var i = 0; i < this.value.length; i++) {
              if (this.value[i] == option.value) {
                index = i;
                break;
              }
            }
          }

          return index;
        }
      }, {
        key: "options",
        get: function get() {
          return this._options;
        },
        set: function set(val) {//NoOp
        }
      }]);

      return SelectButton;
    }();

    SelectButton.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "multiple", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "ariaLabelledBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "dataKey", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "optionLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], SelectButton.prototype, "onOptionClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], SelectButton.prototype, "onChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"])], SelectButton.prototype, "itemTemplate", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectButton.prototype, "options", null);

    SelectButton = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-selectButton',
      template: "\n        <div [ngClass]=\"'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-' + (options ? options.length : 0)\" [ngStyle]=\"style\" [class]=\"styleClass\"  role=\"group\">\n            <div *ngFor=\"let option of options; let i = index\" #btn class=\"ui-button ui-widget ui-state-default ui-button-text-only {{option.styleClass}}\"  role=\"button\" [attr.aria-pressed]=\"isSelected(option)\"\n                [ngClass]=\"{'ui-state-active':isSelected(option), 'ui-state-disabled': disabled || option.disabled, 'ui-state-focus': btn == focusedItem, \n                'ui-button-text-icon-left': (option.icon != null), 'ui-button-icon-only': (option.icon && !option.label)}\" (click)=\"onItemClick($event,option,i)\" (keydown.enter)=\"onItemClick($event,option,i)\"\n                [attr.title]=\"option.title\" [attr.aria-label]=\"option.label\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\">\n                <ng-container *ngIf=\"!itemTemplate else customcontent\">\n                    <span [ngClass]=\"['ui-clickable', 'ui-button-icon-left']\" [class]=\"option.icon\" *ngIf=\"option.icon\"></span>\n                    <span class=\"ui-button-text ui-clickable\">{{option.label||'ui-btn'}}</span>\n                </ng-container>\n                <ng-template #customcontent>\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                </ng-template>\n            </div>\n        </div>\n    ",
      providers: [SELECTBUTTON_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], SelectButton);

    var SelectButtonModule = function SelectButtonModule() {
      _classCallCheck(this, SelectButtonModule);
    };

    SelectButtonModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [SelectButton],
      declarations: [SelectButton]
    })], SelectButtonModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-selectbutton.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-splitbutton.js":
  /*!**************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-splitbutton.js ***!
    \**************************************************************/

  /*! exports provided: SplitButton, SplitButtonModule */

  /***/
  function node_modulesPrimengFesm2015PrimengSplitbuttonJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SplitButton", function () {
      return SplitButton;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SplitButtonModule", function () {
      return SplitButtonModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/button */
    "./node_modules/primeng/fesm2015/primeng-button.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var SplitButton =
    /*#__PURE__*/
    function () {
      function SplitButton(el, renderer, router, cd) {
        _classCallCheck(this, SplitButton);

        this.el = el;
        this.renderer = renderer;
        this.router = router;
        this.cd = cd;
        this.iconPos = 'left';
        this.onClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onDropdownClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
        this.overlayVisible = false;
        this.ariaId = Object(primeng_utils__WEBPACK_IMPORTED_MODULE_6__["UniqueComponentId"])() + '_list';
      }

      _createClass(SplitButton, [{
        key: "onDefaultButtonClick",
        value: function onDefaultButtonClick(event) {
          this.onClick.emit(event);
        }
      }, {
        key: "itemClick",
        value: function itemClick(event, item) {
          if (item.disabled) {
            event.preventDefault();
            return;
          }

          if (!item.url) {
            event.preventDefault();
          }

          if (item.command) {
            item.command({
              originalEvent: event,
              item: item
            });
          }

          this.overlayVisible = false;
        }
      }, {
        key: "show",
        value: function show() {
          this.overlayVisible = !this.overlayVisible;
        }
      }, {
        key: "onOverlayAnimationStart",
        value: function onOverlayAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
              this.overlay = event.element;
              this.appendOverlay();
              this.overlay.style.zIndex = String(++primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex);
              this.alignOverlay();
              this.bindDocumentClickListener();
              this.bindDocumentResizeListener();
              break;

            case 'void':
              this.onOverlayHide();
              break;
          }
        }
      }, {
        key: "onDropdownButtonClick",
        value: function onDropdownButtonClick(event) {
          this.onDropdownClick.emit(event);
          this.dropdownClick = true;
          this.show();
        }
      }, {
        key: "alignOverlay",
        value: function alignOverlay() {
          if (this.appendTo) primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].absolutePosition(this.overlay, this.containerViewChild.nativeElement);else primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].relativePosition(this.overlay, this.containerViewChild.nativeElement);
        }
      }, {
        key: "appendOverlay",
        value: function appendOverlay() {
          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.overlay);else primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].appendChild(this.overlay, this.appendTo);
            this.overlay.style.minWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getWidth(this.el.nativeElement.children[0]) + 'px';
          }
        }
      }, {
        key: "restoreOverlayAppend",
        value: function restoreOverlayAppend() {
          if (this.overlay && this.appendTo) {
            this.el.nativeElement.appendChild(this.overlay);
          }
        }
      }, {
        key: "bindDocumentClickListener",
        value: function bindDocumentClickListener() {
          var _this68 = this;

          if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'click', function () {
              if (_this68.dropdownClick) {
                _this68.dropdownClick = false;
              } else {
                _this68.overlayVisible = false;

                _this68.unbindDocumentClickListener();

                _this68.cd.markForCheck();
              }
            });
          }
        }
      }, {
        key: "unbindDocumentClickListener",
        value: function unbindDocumentClickListener() {
          if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
          }
        }
      }, {
        key: "bindDocumentResizeListener",
        value: function bindDocumentResizeListener() {
          this.documentResizeListener = this.onWindowResize.bind(this);
          window.addEventListener('resize', this.documentResizeListener);
        }
      }, {
        key: "unbindDocumentResizeListener",
        value: function unbindDocumentResizeListener() {
          if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
          }
        }
      }, {
        key: "onWindowResize",
        value: function onWindowResize() {
          this.overlayVisible = false;
        }
      }, {
        key: "onOverlayHide",
        value: function onOverlayHide() {
          this.unbindDocumentClickListener();
          this.unbindDocumentResizeListener();
          this.overlay = null;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.restoreOverlayAppend();
          this.onOverlayHide();
        }
      }]);

      return SplitButton;
    }();

    SplitButton.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "model", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "icon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "iconPos", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "label", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], SplitButton.prototype, "onClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], SplitButton.prototype, "onDropdownClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "menuStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "menuStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "dir", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "showTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SplitButton.prototype, "hideTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('container')], SplitButton.prototype, "containerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('defaultbtn')], SplitButton.prototype, "buttonViewChild", void 0);

    SplitButton = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-splitButton',
      template: "\n        <div #container [ngClass]=\"{'ui-splitbutton ui-buttonset ui-widget':true,'ui-state-disabled':disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <button #defaultbtn type=\"button\" pButton [icon]=\"icon\" [iconPos]=\"iconPos\" [label]=\"label\" [cornerStyleClass]=\"dir === 'rtl' ? 'ui-corner-right': 'ui-corner-left'\" (click)=\"onDefaultButtonClick($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\">\n            </button><button type=\"button\" pButton class=\"ui-splitbutton-menubutton\" icon=\"pi pi-chevron-down\" [cornerStyleClass]=\"dir === 'rtl' ? 'ui-corner-left': 'ui-corner-right'\" (click)=\"onDropdownButtonClick($event)\" [disabled]=\"disabled\"></button>\n            <div [attr.id]=\"ariaId + '_overlay'\" #overlay [ngClass]=\"'ui-menu ui-menu-dynamic ui-widget ui-widget-content ui-corner-all ui-helper-clearfix ui-shadow'\" *ngIf=\"overlayVisible\"\n                    [ngStyle]=\"menuStyle\" [class]=\"menuStyleClass\"\n                    [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <ul class=\"ui-menu-list ui-helper-reset\" role=\"menu\">\n                    <ng-template ngFor let-item [ngForOf]=\"model\">\n                        <li *ngIf=\"item.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\" role=\"separator\">\n                        <li class=\"ui-menuitem ui-widget ui-corner-all\" role=\"menuitem\" *ngIf=\"item.visible !== false && !item.separator\" role=\"none\">\n                            <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"item.target\" role=\"menuitem\"\n                                [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\">\n                                <span [ngClass]=\"'ui-menuitem-icon'\" [class]=\"item.icon\" *ngIf=\"item.icon\"></span>\n                                <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                            </a>\n                            <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\"\n                                class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"item.target\" [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\">\n                                <span [ngClass]=\"'ui-menuitem-icon'\" [class]=\"item.icon\" *ngIf=\"item.icon\"></span>\n                                <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                            </a>\n                        </li>\n                    </ng-template>\n                </ul>\n            </div>\n        </div>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('overlayAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translateY(5%)',
        opacity: 0
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translateY(0)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{showTransitionParams}}')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visible => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{hideTransitionParams}}'))])],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], SplitButton);

    var SplitButtonModule = function SplitButtonModule() {
      _classCallCheck(this, SplitButtonModule);
    };

    SplitButtonModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], primeng_button__WEBPACK_IMPORTED_MODULE_4__["ButtonModule"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["RouterModule"]],
      exports: [SplitButton, primeng_button__WEBPACK_IMPORTED_MODULE_4__["ButtonModule"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["RouterModule"]],
      declarations: [SplitButton]
    })], SplitButtonModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-splitbutton.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-table.js":
  /*!********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-table.js ***!
    \********************************************************/

  /*! exports provided: CancelEditableRow, CellEditor, ContextMenuRow, EditableColumn, EditableRow, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowToggler, SaveEditableRow, ScrollableView, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService */

  /***/
  function node_modulesPrimengFesm2015PrimengTableJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CancelEditableRow", function () {
      return CancelEditableRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CellEditor", function () {
      return CellEditor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContextMenuRow", function () {
      return ContextMenuRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EditableColumn", function () {
      return EditableColumn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EditableRow", function () {
      return EditableRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "InitEditableRow", function () {
      return InitEditableRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReorderableColumn", function () {
      return ReorderableColumn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReorderableRow", function () {
      return ReorderableRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReorderableRowHandle", function () {
      return ReorderableRowHandle;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ResizableColumn", function () {
      return ResizableColumn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RowToggler", function () {
      return RowToggler;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SaveEditableRow", function () {
      return SaveEditableRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ScrollableView", function () {
      return ScrollableView;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SelectableRow", function () {
      return SelectableRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SelectableRowDblClick", function () {
      return SelectableRowDblClick;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SortIcon", function () {
      return SortIcon;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SortableColumn", function () {
      return SortableColumn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Table", function () {
      return Table;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TableBody", function () {
      return TableBody;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TableCheckbox", function () {
      return TableCheckbox;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TableHeaderCheckbox", function () {
      return TableHeaderCheckbox;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TableModule", function () {
      return TableModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TableRadioButton", function () {
      return TableRadioButton;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TableService", function () {
      return TableService;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var primeng_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/paginator */
    "./node_modules/primeng/fesm2015/primeng-paginator.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var __param = undefined && undefined.__param || function (paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    };

    var TableService =
    /*#__PURE__*/
    function () {
      function TableService() {
        _classCallCheck(this, TableService);

        this.sortSource = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.selectionSource = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.contextMenuSource = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.valueSource = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.totalRecordsSource = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.columnsSource = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.sortSource$ = this.sortSource.asObservable();
        this.selectionSource$ = this.selectionSource.asObservable();
        this.contextMenuSource$ = this.contextMenuSource.asObservable();
        this.valueSource$ = this.valueSource.asObservable();
        this.totalRecordsSource$ = this.totalRecordsSource.asObservable();
        this.columnsSource$ = this.columnsSource.asObservable();
      }

      _createClass(TableService, [{
        key: "onSort",
        value: function onSort(sortMeta) {
          this.sortSource.next(sortMeta);
        }
      }, {
        key: "onSelectionChange",
        value: function onSelectionChange() {
          this.selectionSource.next();
        }
      }, {
        key: "onContextMenu",
        value: function onContextMenu(data) {
          this.contextMenuSource.next(data);
        }
      }, {
        key: "onValueChange",
        value: function onValueChange(value) {
          this.valueSource.next(value);
        }
      }, {
        key: "onTotalRecordsChange",
        value: function onTotalRecordsChange(value) {
          this.totalRecordsSource.next(value);
        }
      }, {
        key: "onColumnsChange",
        value: function onColumnsChange(columns) {
          this.columnsSource.next(columns);
        }
      }]);

      return TableService;
    }();

    TableService = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()], TableService);

    var Table =
    /*#__PURE__*/
    function () {
      function Table(el, zone, tableService, cd) {
        _classCallCheck(this, Table);

        this.el = el;
        this.zone = zone;
        this.tableService = tableService;
        this.cd = cd;
        this.pageLinks = 5;
        this.alwaysShowPaginator = true;
        this.paginatorPosition = 'bottom';
        this.paginatorDropdownScrollHeight = '200px';
        this.currentPageReportTemplate = '{currentPage} of {totalPages}';
        this.defaultSortOrder = 1;
        this.sortMode = 'single';
        this.resetPageOnSort = true;
        this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.contextMenuSelectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.contextMenuSelectionMode = "separate";

        this.rowTrackBy = function (index, item) {
          return item;
        };

        this.lazy = false;
        this.lazyLoadOnInit = true;
        this.compareSelectionBy = 'deepEquals';
        this.csvSeparator = ',';
        this.exportFilename = 'download';
        this.filters = {};
        this.filterDelay = 300;
        this.expandedRowKeys = {};
        this.editingRowKeys = {};
        this.rowExpandMode = 'multiple';
        this.virtualScrollDelay = 150;
        this.virtualRowHeight = 28;
        this.columnResizeMode = 'fit';
        this.loadingIcon = 'pi pi-spinner';
        this.showLoader = true;
        this.stateStorage = 'session';
        this.editMode = 'cell';
        this.onRowSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onRowUnselect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onPage = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onSort = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onFilter = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onLazyLoad = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onRowExpand = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onRowCollapse = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onContextMenuSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onColResize = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onColReorder = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onRowReorder = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onEditInit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onEditComplete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onEditCancel = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onHeaderCheckboxToggle = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.sortFunction = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.firstChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.rowsChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onStateSave = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onStateRestore = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this._value = [];
        this._totalRecords = 0;
        this._first = 0;
        this.selectionKeys = {};
        this._sortOrder = 1;
      }

      _createClass(Table, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.lazy && this.lazyLoadOnInit) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());

            if (this.restoringFilter) {
              this.restoringFilter = false;
            }
          }

          this.initialized = true;
        }
      }, {
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this69 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'caption':
                _this69.captionTemplate = item.template;
                break;

              case 'header':
                _this69.headerTemplate = item.template;
                break;

              case 'body':
                _this69.bodyTemplate = item.template;
                break;

              case 'loadingbody':
                _this69.loadingBodyTemplate = item.template;
                break;

              case 'footer':
                _this69.footerTemplate = item.template;
                break;

              case 'summary':
                _this69.summaryTemplate = item.template;
                break;

              case 'colgroup':
                _this69.colGroupTemplate = item.template;
                break;

              case 'rowexpansion':
                _this69.expandedRowTemplate = item.template;
                break;

              case 'frozenrows':
                _this69.frozenRowsTemplate = item.template;
                break;

              case 'frozenheader':
                _this69.frozenHeaderTemplate = item.template;
                break;

              case 'frozenbody':
                _this69.frozenBodyTemplate = item.template;
                break;

              case 'frozenfooter':
                _this69.frozenFooterTemplate = item.template;
                break;

              case 'frozencolgroup':
                _this69.frozenColGroupTemplate = item.template;
                break;

              case 'emptymessage':
                _this69.emptyMessageTemplate = item.template;
                break;

              case 'paginatorleft':
                _this69.paginatorLeftTemplate = item.template;
                break;

              case 'paginatorright':
                _this69.paginatorRightTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (this.isStateful() && this.resizableColumns) {
            this.restoreColumnWidths();
          }
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(simpleChange) {
          if (simpleChange.value) {
            if (this.isStateful() && !this.stateRestored) {
              this.restoreState();
            }

            this._value = simpleChange.value.currentValue;

            if (!this.lazy) {
              this.totalRecords = this._value ? this._value.length : 0;
              if (this.sortMode == 'single' && this.sortField) this.sortSingle();else if (this.sortMode == 'multiple' && this.multiSortMeta) this.sortMultiple();else if (this.hasFilter()) //sort already filters
                this._filter();
            }

            if (this.virtualScroll && this.virtualScrollCallback) {
              this.virtualScrollCallback();
            }

            this.tableService.onValueChange(simpleChange.value.currentValue);
          }

          if (simpleChange.columns) {
            this._columns = simpleChange.columns.currentValue;
            this.tableService.onColumnsChange(simpleChange.columns.currentValue);

            if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {
              this.restoreColumnOrder();
            }
          }

          if (simpleChange.sortField) {
            this._sortField = simpleChange.sortField.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit

            if (!this.lazy || this.initialized) {
              if (this.sortMode === 'single') {
                this.sortSingle();
              }
            }
          }

          if (simpleChange.sortOrder) {
            this._sortOrder = simpleChange.sortOrder.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit

            if (!this.lazy || this.initialized) {
              if (this.sortMode === 'single') {
                this.sortSingle();
              }
            }
          }

          if (simpleChange.multiSortMeta) {
            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;

            if (this.sortMode === 'multiple') {
              this.sortMultiple();
            }
          }

          if (simpleChange.selection) {
            this._selection = simpleChange.selection.currentValue;

            if (!this.preventSelectionSetterPropagation) {
              this.updateSelectionKeys();
              this.tableService.onSelectionChange();
            }

            this.preventSelectionSetterPropagation = false;
          }
        }
      }, {
        key: "updateSelectionKeys",
        value: function updateSelectionKeys() {
          if (this.dataKey && this._selection) {
            this.selectionKeys = {};

            if (Array.isArray(this._selection)) {
              var _iterator11 = _createForOfIteratorHelper(this._selection),
                  _step11;

              try {
                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                  var data = _step11.value;
                  this.selectionKeys[String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(data, this.dataKey))] = 1;
                }
              } catch (err) {
                _iterator11.e(err);
              } finally {
                _iterator11.f();
              }
            } else {
              this.selectionKeys[String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(this._selection, this.dataKey))] = 1;
            }
          }
        }
      }, {
        key: "onPageChange",
        value: function onPageChange(event) {
          this.first = event.first;
          this.rows = event.rows;

          if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          }

          this.onPage.emit({
            first: this.first,
            rows: this.rows
          });
          this.firstChange.emit(this.first);
          this.rowsChange.emit(this.rows);
          this.tableService.onValueChange(this.value);

          if (this.isStateful()) {
            this.saveState();
          }

          this.anchorRowIndex = null;
        }
      }, {
        key: "sort",
        value: function sort(event) {
          var originalEvent = event.originalEvent;

          if (this.sortMode === 'single') {
            this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;
            this._sortField = event.field;
            this.sortSingle();

            if (this.resetPageOnSort) {
              this._first = 0;
              this.firstChange.emit(this._first);
            }
          }

          if (this.sortMode === 'multiple') {
            var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;
            var sortMeta = this.getSortMeta(event.field);

            if (sortMeta) {
              if (!metaKey) {
                this._multiSortMeta = [{
                  field: event.field,
                  order: sortMeta.order * -1
                }];

                if (this.resetPageOnSort) {
                  this._first = 0;
                  this.firstChange.emit(this._first);
                }
              } else {
                sortMeta.order = sortMeta.order * -1;
              }
            } else {
              if (!metaKey || !this.multiSortMeta) {
                this._multiSortMeta = [];

                if (this.resetPageOnSort) {
                  this._first = 0;
                  this.firstChange.emit(this._first);
                }
              }

              this._multiSortMeta.push({
                field: event.field,
                order: this.defaultSortOrder
              });
            }

            this.sortMultiple();
          }

          if (this.isStateful()) {
            this.saveState();
          }

          this.anchorRowIndex = null;
        }
      }, {
        key: "sortSingle",
        value: function sortSingle() {
          var _this70 = this;

          if (this.sortField && this.sortOrder) {
            if (this.restoringSort) {
              this.restoringSort = false;
            }

            if (this.lazy) {
              this.onLazyLoad.emit(this.createLazyLoadMetadata());
            } else if (this.value) {
              if (this.customSort) {
                this.sortFunction.emit({
                  data: this.value,
                  mode: this.sortMode,
                  field: this.sortField,
                  order: this.sortOrder
                });
              } else {
                this.value.sort(function (data1, data2) {
                  var value1 = primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(data1, _this70.sortField);
                  var value2 = primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(data2, _this70.sortField);
                  var result = null;
                  if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;
                  return _this70.sortOrder * result;
                });
              }

              if (this.hasFilter()) {
                this._filter();
              }
            }

            var sortMeta = {
              field: this.sortField,
              order: this.sortOrder
            };
            this.onSort.emit(sortMeta);
            this.tableService.onSort(sortMeta);
          }
        }
      }, {
        key: "sortMultiple",
        value: function sortMultiple() {
          var _this71 = this;

          if (this.multiSortMeta) {
            if (this.lazy) {
              this.onLazyLoad.emit(this.createLazyLoadMetadata());
            } else if (this.value) {
              if (this.customSort) {
                this.sortFunction.emit({
                  data: this.value,
                  mode: this.sortMode,
                  multiSortMeta: this.multiSortMeta
                });
              } else {
                this.value.sort(function (data1, data2) {
                  return _this71.multisortField(data1, data2, _this71.multiSortMeta, 0);
                });
              }

              if (this.hasFilter()) {
                this._filter();
              }
            }

            this.onSort.emit({
              multisortmeta: this.multiSortMeta
            });
            this.tableService.onSort(this.multiSortMeta);
          }
        }
      }, {
        key: "multisortField",
        value: function multisortField(data1, data2, multiSortMeta, index) {
          var value1 = primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(data1, multiSortMeta[index].field);
          var value2 = primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(data2, multiSortMeta[index].field);
          var result = null;
          if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 == 'string' || value1 instanceof String) {
            if (value1.localeCompare && value1 != value2) {
              return multiSortMeta[index].order * value1.localeCompare(value2);
            }
          } else {
            result = value1 < value2 ? -1 : 1;
          }

          if (value1 == value2) {
            return multiSortMeta.length - 1 > index ? this.multisortField(data1, data2, multiSortMeta, index + 1) : 0;
          }

          return multiSortMeta[index].order * result;
        }
      }, {
        key: "getSortMeta",
        value: function getSortMeta(field) {
          if (this.multiSortMeta && this.multiSortMeta.length) {
            for (var i = 0; i < this.multiSortMeta.length; i++) {
              if (this.multiSortMeta[i].field === field) {
                return this.multiSortMeta[i];
              }
            }
          }

          return null;
        }
      }, {
        key: "isSorted",
        value: function isSorted(field) {
          if (this.sortMode === 'single') {
            return this.sortField && this.sortField === field;
          } else if (this.sortMode === 'multiple') {
            var sorted = false;

            if (this.multiSortMeta) {
              for (var i = 0; i < this.multiSortMeta.length; i++) {
                if (this.multiSortMeta[i].field == field) {
                  sorted = true;
                  break;
                }
              }
            }

            return sorted;
          }
        }
      }, {
        key: "handleRowClick",
        value: function handleRowClick(event) {
          var target = event.originalEvent.target;
          var targetNode = target.nodeName;
          var parentNode = target.parentElement && target.parentElement.nodeName;

          if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.originalEvent.target, 'ui-clickable')) {
            return;
          }

          if (this.selectionMode) {
            this.preventSelectionSetterPropagation = true;

            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].clearSelection();

              if (this.rangeRowIndex != null) {
                this.clearSelectionRange(event.originalEvent);
              }

              this.rangeRowIndex = event.rowIndex;
              this.selectRange(event.originalEvent, event.rowIndex);
            } else {
              var rowData = event.rowData;
              var selected = this.isSelected(rowData);
              var metaSelection = this.rowTouched ? false : this.metaKeySelection;
              var dataKeyValue = this.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey)) : null;
              this.anchorRowIndex = event.rowIndex;
              this.rangeRowIndex = event.rowIndex;

              if (metaSelection) {
                var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;

                if (selected && metaKey) {
                  if (this.isSingleSelectionMode()) {
                    this._selection = null;
                    this.selectionKeys = {};
                    this.selectionChange.emit(null);
                  } else {
                    var selectionIndex = this.findIndexInSelection(rowData);
                    this._selection = this.selection.filter(function (val, i) {
                      return i != selectionIndex;
                    });
                    this.selectionChange.emit(this.selection);

                    if (dataKeyValue) {
                      delete this.selectionKeys[dataKeyValue];
                    }
                  }

                  this.onRowUnselect.emit({
                    originalEvent: event.originalEvent,
                    data: rowData,
                    type: 'row'
                  });
                } else {
                  if (this.isSingleSelectionMode()) {
                    this._selection = rowData;
                    this.selectionChange.emit(rowData);

                    if (dataKeyValue) {
                      this.selectionKeys = {};
                      this.selectionKeys[dataKeyValue] = 1;
                    }
                  } else if (this.isMultipleSelectionMode()) {
                    if (metaKey) {
                      this._selection = this.selection || [];
                    } else {
                      this._selection = [];
                      this.selectionKeys = {};
                    }

                    this._selection = [].concat(_toConsumableArray(this.selection), [rowData]);
                    this.selectionChange.emit(this.selection);

                    if (dataKeyValue) {
                      this.selectionKeys[dataKeyValue] = 1;
                    }
                  }

                  this.onRowSelect.emit({
                    originalEvent: event.originalEvent,
                    data: rowData,
                    type: 'row',
                    index: event.rowIndex
                  });
                }
              } else {
                if (this.selectionMode === 'single') {
                  if (selected) {
                    this._selection = null;
                    this.selectionKeys = {};
                    this.selectionChange.emit(this.selection);
                    this.onRowUnselect.emit({
                      originalEvent: event.originalEvent,
                      data: rowData,
                      type: 'row'
                    });
                  } else {
                    this._selection = rowData;
                    this.selectionChange.emit(this.selection);
                    this.onRowSelect.emit({
                      originalEvent: event.originalEvent,
                      data: rowData,
                      type: 'row',
                      index: event.rowIndex
                    });

                    if (dataKeyValue) {
                      this.selectionKeys = {};
                      this.selectionKeys[dataKeyValue] = 1;
                    }
                  }
                } else if (this.selectionMode === 'multiple') {
                  if (selected) {
                    var _selectionIndex = this.findIndexInSelection(rowData);

                    this._selection = this.selection.filter(function (val, i) {
                      return i != _selectionIndex;
                    });
                    this.selectionChange.emit(this.selection);
                    this.onRowUnselect.emit({
                      originalEvent: event.originalEvent,
                      data: rowData,
                      type: 'row'
                    });

                    if (dataKeyValue) {
                      delete this.selectionKeys[dataKeyValue];
                    }
                  } else {
                    this._selection = this.selection ? [].concat(_toConsumableArray(this.selection), [rowData]) : [rowData];
                    this.selectionChange.emit(this.selection);
                    this.onRowSelect.emit({
                      originalEvent: event.originalEvent,
                      data: rowData,
                      type: 'row',
                      index: event.rowIndex
                    });

                    if (dataKeyValue) {
                      this.selectionKeys[dataKeyValue] = 1;
                    }
                  }
                }
              }
            }

            this.tableService.onSelectionChange();

            if (this.isStateful()) {
              this.saveState();
            }
          }

          this.rowTouched = false;
        }
      }, {
        key: "handleRowTouchEnd",
        value: function handleRowTouchEnd(event) {
          this.rowTouched = true;
        }
      }, {
        key: "handleRowRightClick",
        value: function handleRowRightClick(event) {
          if (this.contextMenu) {
            var rowData = event.rowData;

            if (this.contextMenuSelectionMode === 'separate') {
              this.contextMenuSelection = rowData;
              this.contextMenuSelectionChange.emit(rowData);
              this.onContextMenuSelect.emit({
                originalEvent: event.originalEvent,
                data: rowData,
                index: event.rowIndex
              });
              this.contextMenu.show(event.originalEvent);
              this.tableService.onContextMenu(rowData);
            } else if (this.contextMenuSelectionMode === 'joint') {
              this.preventSelectionSetterPropagation = true;
              var selected = this.isSelected(rowData);
              var dataKeyValue = this.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey)) : null;

              if (!selected) {
                if (this.isSingleSelectionMode()) {
                  this.selection = rowData;
                  this.selectionChange.emit(rowData);
                } else if (this.isMultipleSelectionMode()) {
                  this.selection = [rowData];
                  this.selectionChange.emit(this.selection);
                }

                if (dataKeyValue) {
                  this.selectionKeys[dataKeyValue] = 1;
                }
              }

              this.contextMenu.show(event.originalEvent);
              this.onContextMenuSelect.emit({
                originalEvent: event,
                data: rowData,
                index: event.rowIndex
              });
            }
          }
        }
      }, {
        key: "selectRange",
        value: function selectRange(event, rowIndex) {
          var rangeStart, rangeEnd;

          if (this.anchorRowIndex > rowIndex) {
            rangeStart = rowIndex;
            rangeEnd = this.anchorRowIndex;
          } else if (this.anchorRowIndex < rowIndex) {
            rangeStart = this.anchorRowIndex;
            rangeEnd = rowIndex;
          } else {
            rangeStart = rowIndex;
            rangeEnd = rowIndex;
          }

          if (this.lazy && this.paginator) {
            rangeStart -= this.first;
            rangeEnd -= this.first;
          }

          for (var i = rangeStart; i <= rangeEnd; i++) {
            var rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];

            if (!this.isSelected(rangeRowData)) {
              this._selection = [].concat(_toConsumableArray(this.selection), [rangeRowData]);
              var dataKeyValue = this.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rangeRowData, this.dataKey)) : null;

              if (dataKeyValue) {
                this.selectionKeys[dataKeyValue] = 1;
              }

              this.onRowSelect.emit({
                originalEvent: event,
                data: rangeRowData,
                type: 'row'
              });
            }
          }

          this.selectionChange.emit(this.selection);
        }
      }, {
        key: "clearSelectionRange",
        value: function clearSelectionRange(event) {
          var _this72 = this;

          var rangeStart, rangeEnd;

          if (this.rangeRowIndex > this.anchorRowIndex) {
            rangeStart = this.anchorRowIndex;
            rangeEnd = this.rangeRowIndex;
          } else if (this.rangeRowIndex < this.anchorRowIndex) {
            rangeStart = this.rangeRowIndex;
            rangeEnd = this.anchorRowIndex;
          } else {
            rangeStart = this.rangeRowIndex;
            rangeEnd = this.rangeRowIndex;
          }

          var _loop2 = function _loop2(i) {
            var rangeRowData = _this72.value[i];

            var selectionIndex = _this72.findIndexInSelection(rangeRowData);

            _this72._selection = _this72.selection.filter(function (val, i) {
              return i != selectionIndex;
            });
            var dataKeyValue = _this72.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rangeRowData, _this72.dataKey)) : null;

            if (dataKeyValue) {
              delete _this72.selectionKeys[dataKeyValue];
            }

            _this72.onRowUnselect.emit({
              originalEvent: event,
              data: rangeRowData,
              type: 'row'
            });
          };

          for (var i = rangeStart; i <= rangeEnd; i++) {
            _loop2(i);
          }
        }
      }, {
        key: "isSelected",
        value: function isSelected(rowData) {
          if (rowData && this.selection) {
            if (this.dataKey) {
              return this.selectionKeys[primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey)] !== undefined;
            } else {
              if (this.selection instanceof Array) return this.findIndexInSelection(rowData) > -1;else return this.equals(rowData, this.selection);
            }
          }

          return false;
        }
      }, {
        key: "findIndexInSelection",
        value: function findIndexInSelection(rowData) {
          var index = -1;

          if (this.selection && this.selection.length) {
            for (var i = 0; i < this.selection.length; i++) {
              if (this.equals(rowData, this.selection[i])) {
                index = i;
                break;
              }
            }
          }

          return index;
        }
      }, {
        key: "toggleRowWithRadio",
        value: function toggleRowWithRadio(event, rowData) {
          this.preventSelectionSetterPropagation = true;

          if (this.selection != rowData) {
            this._selection = rowData;
            this.selectionChange.emit(this.selection);
            this.onRowSelect.emit({
              originalEvent: event.originalEvent,
              index: event.rowIndex,
              data: rowData,
              type: 'radiobutton'
            });

            if (this.dataKey) {
              this.selectionKeys = {};
              this.selectionKeys[String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey))] = 1;
            }
          } else {
            this._selection = null;
            this.selectionChange.emit(this.selection);
            this.onRowUnselect.emit({
              originalEvent: event.originalEvent,
              index: event.rowIndex,
              data: rowData,
              type: 'radiobutton'
            });
          }

          this.tableService.onSelectionChange();

          if (this.isStateful()) {
            this.saveState();
          }
        }
      }, {
        key: "toggleRowWithCheckbox",
        value: function toggleRowWithCheckbox(event, rowData) {
          this.selection = this.selection || [];
          var selected = this.isSelected(rowData);
          var dataKeyValue = this.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey)) : null;
          this.preventSelectionSetterPropagation = true;

          if (selected) {
            var selectionIndex = this.findIndexInSelection(rowData);
            this._selection = this.selection.filter(function (val, i) {
              return i != selectionIndex;
            });
            this.selectionChange.emit(this.selection);
            this.onRowUnselect.emit({
              originalEvent: event.originalEvent,
              index: event.rowIndex,
              data: rowData,
              type: 'checkbox'
            });

            if (dataKeyValue) {
              delete this.selectionKeys[dataKeyValue];
            }
          } else {
            this._selection = this.selection ? [].concat(_toConsumableArray(this.selection), [rowData]) : [rowData];
            this.selectionChange.emit(this.selection);
            this.onRowSelect.emit({
              originalEvent: event.originalEvent,
              index: event.rowIndex,
              data: rowData,
              type: 'checkbox'
            });

            if (dataKeyValue) {
              this.selectionKeys[dataKeyValue] = 1;
            }
          }

          this.tableService.onSelectionChange();

          if (this.isStateful()) {
            this.saveState();
          }
        }
      }, {
        key: "toggleRowsWithCheckbox",
        value: function toggleRowsWithCheckbox(event, check) {
          this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];
          this.preventSelectionSetterPropagation = true;
          this.updateSelectionKeys();
          this.selectionChange.emit(this._selection);
          this.tableService.onSelectionChange();
          this.onHeaderCheckboxToggle.emit({
            originalEvent: event,
            checked: check
          });

          if (this.isStateful()) {
            this.saveState();
          }
        }
      }, {
        key: "equals",
        value: function equals(data1, data2) {
          return this.compareSelectionBy === 'equals' ? data1 === data2 : primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].equals(data1, data2, this.dataKey);
        }
      }, {
        key: "filter",
        value: function filter(value, field, matchMode) {
          var _this73 = this;

          if (this.filterTimeout) {
            clearTimeout(this.filterTimeout);
          }

          if (!this.isFilterBlank(value)) {
            this.filters[field] = {
              value: value,
              matchMode: matchMode
            };
          } else if (this.filters[field]) {
            delete this.filters[field];
          }

          this.filterTimeout = setTimeout(function () {
            _this73._filter();

            _this73.filterTimeout = null;
          }, this.filterDelay);
          this.anchorRowIndex = null;
        }
      }, {
        key: "filterGlobal",
        value: function filterGlobal(value, matchMode) {
          this.filter(value, 'global', matchMode);
        }
      }, {
        key: "isFilterBlank",
        value: function isFilterBlank(filter) {
          if (filter !== null && filter !== undefined) {
            if (typeof filter === 'string' && filter.trim().length == 0 || filter instanceof Array && filter.length == 0) return true;else return false;
          }

          return true;
        }
      }, {
        key: "_filter",
        value: function _filter() {
          if (!this.restoringFilter) {
            this.first = 0;
            this.firstChange.emit(this.first);
          }

          if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          } else {
            if (!this.value) {
              return;
            }

            if (!this.hasFilter()) {
              this.filteredValue = null;

              if (this.paginator) {
                this.totalRecords = this.value ? this.value.length : 0;
              }
            } else {
              var globalFilterFieldsArray;

              if (this.filters['global']) {
                if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;
              }

              this.filteredValue = [];

              for (var i = 0; i < this.value.length; i++) {
                var localMatch = true;
                var globalMatch = false;
                var localFiltered = false;

                for (var prop in this.filters) {
                  if (this.filters.hasOwnProperty(prop) && prop !== 'global') {
                    localFiltered = true;
                    var filterMeta = this.filters[prop];
                    var filterField = prop;
                    var filterValue = filterMeta.value;
                    var filterMatchMode = filterMeta.matchMode || 'startsWith';
                    var dataFieldValue = primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(this.value[i], filterField);
                    var filterConstraint = primeng_utils__WEBPACK_IMPORTED_MODULE_5__["FilterUtils"][filterMatchMode];

                    if (!filterConstraint(dataFieldValue, filterValue)) {
                      localMatch = false;
                    }

                    if (!localMatch) {
                      break;
                    }
                  }
                }

                if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {
                  for (var j = 0; j < globalFilterFieldsArray.length; j++) {
                    var globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];
                    globalMatch = primeng_utils__WEBPACK_IMPORTED_MODULE_5__["FilterUtils"][this.filters['global'].matchMode](primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value);

                    if (globalMatch) {
                      break;
                    }
                  }
                }

                var matches = void 0;

                if (this.filters['global']) {
                  matches = localFiltered ? localFiltered && localMatch && globalMatch : globalMatch;
                } else {
                  matches = localFiltered && localMatch;
                }

                if (matches) {
                  this.filteredValue.push(this.value[i]);
                }
              }

              if (this.filteredValue.length === this.value.length) {
                this.filteredValue = null;
              }

              if (this.paginator) {
                this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;
              }
            }
          }

          this.onFilter.emit({
            filters: this.filters,
            filteredValue: this.filteredValue || this.value
          });
          this.tableService.onValueChange(this.value);

          if (this.isStateful() && !this.restoringFilter) {
            this.saveState();
          }

          if (this.restoringFilter) {
            this.restoringFilter = false;
          }

          this.cd.markForCheck();
        }
      }, {
        key: "hasFilter",
        value: function hasFilter() {
          var empty = true;

          for (var prop in this.filters) {
            if (this.filters.hasOwnProperty(prop)) {
              empty = false;
              break;
            }
          }

          return !empty;
        }
      }, {
        key: "createLazyLoadMetadata",
        value: function createLazyLoadMetadata() {
          return {
            first: this.first,
            rows: this.virtualScroll ? this.rows * 2 : this.rows,
            sortField: this.sortField,
            sortOrder: this.sortOrder,
            filters: this.filters,
            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,
            multiSortMeta: this.multiSortMeta
          };
        }
      }, {
        key: "reset",
        value: function reset() {
          this._sortField = null;
          this._sortOrder = this.defaultSortOrder;
          this._multiSortMeta = null;
          this.tableService.onSort(null);
          this.filteredValue = null;
          this.filters = {};
          this.first = 0;
          this.firstChange.emit(this.first);

          if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          } else {
            this.totalRecords = this._value ? this._value.length : 0;
          }
        }
      }, {
        key: "exportCSV",
        value: function exportCSV(options) {
          var _this74 = this;

          var data = this.filteredValue || this.value;
          var csv = '';

          if (options && options.selectionOnly) {
            data = this.selection || [];
          } //headers


          for (var i = 0; i < this.columns.length; i++) {
            var column = this.columns[i];

            if (column.exportable !== false && column.field) {
              csv += '"' + (column.header || column.field) + '"';

              if (i < this.columns.length - 1) {
                csv += this.csvSeparator;
              }
            }
          } //body


          data.forEach(function (record, i) {
            csv += '\n';

            for (var _i6 = 0; _i6 < _this74.columns.length; _i6++) {
              var _column = _this74.columns[_i6];

              if (_column.exportable !== false && _column.field) {
                var cellData = primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(record, _column.field);

                if (cellData != null) {
                  if (_this74.exportFunction) {
                    cellData = _this74.exportFunction({
                      data: cellData,
                      field: _column.field
                    });
                  } else cellData = String(cellData).replace(/"/g, '""');
                } else cellData = '';

                csv += '"' + cellData + '"';

                if (_i6 < _this74.columns.length - 1) {
                  csv += _this74.csvSeparator;
                }
              }
            }
          });
          var blob = new Blob([csv], {
            type: 'text/csv;charset=utf-8;'
          });

          if (window.navigator.msSaveOrOpenBlob) {
            navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');
          } else {
            var link = document.createElement("a");
            link.style.display = 'none';
            document.body.appendChild(link);

            if (link.download !== undefined) {
              link.setAttribute('href', URL.createObjectURL(blob));
              link.setAttribute('download', this.exportFilename + '.csv');
              link.click();
            } else {
              csv = 'data:text/csv;charset=utf-8,' + csv;
              window.open(encodeURI(csv));
            }

            document.body.removeChild(link);
          }
        }
      }, {
        key: "updateEditingCell",
        value: function updateEditingCell(cell, data, field, index) {
          this.editingCell = cell;
          this.editingCellData = data;
          this.editingCellField = field;
          this.editingCellRowIndex = index;
          this.bindDocumentEditListener();
        }
      }, {
        key: "isEditingCellValid",
        value: function isEditingCellValid() {
          return this.editingCell && primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;
        }
      }, {
        key: "bindDocumentEditListener",
        value: function bindDocumentEditListener() {
          var _this75 = this;

          if (!this.documentEditListener) {
            this.documentEditListener = function (event) {
              if (_this75.editingCell && !_this75.editingCellClick && _this75.isEditingCellValid()) {
                primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(_this75.editingCell, 'ui-editing-cell');
                _this75.editingCell = null;

                _this75.onEditComplete.emit({
                  field: _this75.editingCellField,
                  data: _this75.editingCellData,
                  originalEvent: event,
                  index: _this75.editingCellRowIndex
                });

                _this75.editingCellField = null;
                _this75.editingCellData = null;
                _this75.editingCellRowIndex = null;

                _this75.unbindDocumentEditListener();
              }

              _this75.editingCellClick = false;
            };

            document.addEventListener('click', this.documentEditListener);
          }
        }
      }, {
        key: "unbindDocumentEditListener",
        value: function unbindDocumentEditListener() {
          if (this.documentEditListener) {
            document.removeEventListener('click', this.documentEditListener);
            this.documentEditListener = null;
          }
        }
      }, {
        key: "initRowEdit",
        value: function initRowEdit(rowData) {
          var dataKeyValue = String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey));
          this.editingRowKeys[dataKeyValue] = true;
        }
      }, {
        key: "saveRowEdit",
        value: function saveRowEdit(rowData, rowElement) {
          if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(rowElement, '.ng-invalid.ng-dirty').length === 0) {
            var dataKeyValue = String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey));
            delete this.editingRowKeys[dataKeyValue];
          }
        }
      }, {
        key: "cancelRowEdit",
        value: function cancelRowEdit(rowData) {
          var dataKeyValue = String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey));
          delete this.editingRowKeys[dataKeyValue];
        }
      }, {
        key: "toggleRow",
        value: function toggleRow(rowData, event) {
          if (!this.dataKey) {
            throw new Error('dataKey must be defined to use row expansion');
          }

          var dataKeyValue = String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey));

          if (this.expandedRowKeys[dataKeyValue] != null) {
            delete this.expandedRowKeys[dataKeyValue];
            this.onRowCollapse.emit({
              originalEvent: event,
              data: rowData
            });
          } else {
            if (this.rowExpandMode === 'single') {
              this.expandedRowKeys = {};
            }

            this.expandedRowKeys[dataKeyValue] = true;
            this.onRowExpand.emit({
              originalEvent: event,
              data: rowData
            });
          }

          if (event) {
            event.preventDefault();
          }

          if (this.isStateful()) {
            this.saveState();
          }
        }
      }, {
        key: "isRowExpanded",
        value: function isRowExpanded(rowData) {
          return this.expandedRowKeys[String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey))] === true;
        }
      }, {
        key: "isRowEditing",
        value: function isRowEditing(rowData) {
          return this.editingRowKeys[String(primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].resolveFieldData(rowData, this.dataKey))] === true;
        }
      }, {
        key: "isSingleSelectionMode",
        value: function isSingleSelectionMode() {
          return this.selectionMode === 'single';
        }
      }, {
        key: "isMultipleSelectionMode",
        value: function isMultipleSelectionMode() {
          return this.selectionMode === 'multiple';
        }
      }, {
        key: "onColumnResizeBegin",
        value: function onColumnResizeBegin(event) {
          var containerLeft = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOffset(this.containerViewChild.nativeElement).left;
          this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft;
          this.onColumnResize(event);
          event.preventDefault();
        }
      }, {
        key: "onColumnResize",
        value: function onColumnResize(event) {
          var containerLeft = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOffset(this.containerViewChild.nativeElement).left;
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');
          this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';
          this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';
          this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft + 'px';
          this.resizeHelperViewChild.nativeElement.style.display = 'block';
        }
      }, {
        key: "onColumnResizeEnd",
        value: function onColumnResizeEnd(event, column) {
          var delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;
          var columnWidth = column.offsetWidth;
          var minWidth = parseInt(column.style.minWidth || 15);

          if (columnWidth + delta < minWidth) {
            delta = minWidth - columnWidth;
          }

          var newColumnWidth = columnWidth + delta;

          if (newColumnWidth >= minWidth) {
            if (this.columnResizeMode === 'fit') {
              var nextColumn = column.nextElementSibling;

              while (!nextColumn.offsetParent) {
                nextColumn = nextColumn.nextElementSibling;
              }

              if (nextColumn) {
                var nextColumnWidth = nextColumn.offsetWidth - delta;
                var nextColumnMinWidth = nextColumn.style.minWidth || 15;

                if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {
                  if (this.scrollable) {
                    var scrollableView = this.findParentScrollableView(column);
                    var scrollableBodyTable = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableView, 'table.ui-table-scrollable-body-table');
                    var scrollableHeaderTable = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableView, 'table.ui-table-scrollable-header-table');
                    var scrollableFooterTable = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableView, 'table.ui-table-scrollable-footer-table');
                    var resizeColumnIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].index(column);
                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                  } else {
                    column.style.width = newColumnWidth + 'px';

                    if (nextColumn) {
                      nextColumn.style.width = nextColumnWidth + 'px';
                    }
                  }
                }
              }
            } else if (this.columnResizeMode === 'expand') {
              if (newColumnWidth > minWidth) {
                if (this.scrollable) {
                  this.setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta);
                } else {
                  this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';
                  column.style.width = newColumnWidth + 'px';
                  var containerWidth = this.tableViewChild.nativeElement.style.width;
                  this.containerViewChild.nativeElement.style.width = containerWidth + 'px';
                }
              }
            }

            this.onColResize.emit({
              element: column,
              delta: delta
            });

            if (this.isStateful()) {
              this.saveState();
            }
          }

          this.resizeHelperViewChild.nativeElement.style.display = 'none';
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');
        }
      }, {
        key: "setScrollableItemsWidthOnExpandResize",
        value: function setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta) {
          var scrollableView = column ? this.findParentScrollableView(column) : this.containerViewChild.nativeElement;
          var scrollableBody = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableView, '.ui-table-scrollable-body');
          var scrollableHeader = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableView, '.ui-table-scrollable-header');
          var scrollableFooter = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableView, '.ui-table-scrollable-footer');
          var scrollableBodyTable = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableBody, 'table.ui-table-scrollable-body-table');
          var scrollableHeaderTable = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableHeader, 'table.ui-table-scrollable-header-table');
          var scrollableFooterTable = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableFooter, 'table.ui-table-scrollable-footer-table');
          var scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;
          var scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;
          var isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;

          var setWidth = function setWidth(container, table, width, isContainerInViewport) {
            if (container && table) {
              container.style.width = isContainerInViewport ? width + primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';
              table.style.width = width + 'px';
            }
          };

          setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);
          setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);
          setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);

          if (column) {
            var resizeColumnIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].index(column);
            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);
            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);
            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);
          }
        }
      }, {
        key: "findParentScrollableView",
        value: function findParentScrollableView(column) {
          if (column) {
            var parent = column.parentElement;

            while (parent && !primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(parent, 'ui-table-scrollable-view')) {
              parent = parent.parentElement;
            }

            return parent;
          } else {
            return null;
          }
        }
      }, {
        key: "resizeColGroup",
        value: function resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {
          if (table) {
            var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;

            if (colGroup) {
              var col = colGroup.children[resizeColumnIndex];
              var nextCol = col.nextElementSibling;
              col.style.width = newColumnWidth + 'px';

              if (nextCol && nextColumnWidth) {
                nextCol.style.width = nextColumnWidth + 'px';
              }
            } else {
              throw "Scrollable tables require a colgroup to support resizable columns";
            }
          }
        }
      }, {
        key: "onColumnDragStart",
        value: function onColumnDragStart(event, columnElement) {
          this.reorderIconWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);
          this.reorderIconHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);
          this.draggedColumn = columnElement;
          event.dataTransfer.setData('text', 'b'); // For firefox
        }
      }, {
        key: "onColumnDragEnter",
        value: function onColumnDragEnter(event, dropHeader) {
          if (this.reorderableColumns && this.draggedColumn && dropHeader) {
            event.preventDefault();
            var containerOffset = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOffset(this.containerViewChild.nativeElement);
            var dropHeaderOffset = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOffset(dropHeader);

            if (this.draggedColumn != dropHeader) {
              var dragIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].indexWithinGroup(this.draggedColumn, 'preorderablecolumn');
              var dropIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].indexWithinGroup(dropHeader, 'preorderablecolumn');
              var targetLeft = dropHeaderOffset.left - containerOffset.left;
              var targetTop = containerOffset.top - dropHeaderOffset.top;
              var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;
              this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';
              this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';

              if (event.pageX > columnCenter) {
                this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';
                this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';
                this.dropPosition = 1;
              } else {
                this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';
                this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';
                this.dropPosition = -1;
              }

              if (dropIndex - dragIndex === 1 && this.dropPosition === -1 || dropIndex - dragIndex === -1 && this.dropPosition === 1) {
                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';
                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';
              } else {
                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';
                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';
              }
            } else {
              event.dataTransfer.dropEffect = 'none';
            }
          }
        }
      }, {
        key: "onColumnDragLeave",
        value: function onColumnDragLeave(event) {
          if (this.reorderableColumns && this.draggedColumn) {
            event.preventDefault();
            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';
            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';
          }
        }
      }, {
        key: "onColumnDrop",
        value: function onColumnDrop(event, dropColumn) {
          var _this76 = this;

          event.preventDefault();

          if (this.draggedColumn) {
            var dragIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].indexWithinGroup(this.draggedColumn, 'preorderablecolumn');
            var dropIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].indexWithinGroup(dropColumn, 'preorderablecolumn');
            var allowDrop = dragIndex != dropIndex;

            if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {
              allowDrop = false;
            }

            if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {
              dropIndex = dropIndex + 1;
            }

            if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {
              dropIndex = dropIndex - 1;
            }

            if (allowDrop) {
              primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].reorderArray(this.columns, dragIndex, dropIndex);
              this.onColReorder.emit({
                dragIndex: dragIndex,
                dropIndex: dropIndex,
                columns: this.columns
              });

              if (this.isStateful()) {
                this.zone.runOutsideAngular(function () {
                  setTimeout(function () {
                    _this76.saveState();
                  });
                });
              }
            }

            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';
            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';
            this.draggedColumn.draggable = false;
            this.draggedColumn = null;
            this.dropPosition = null;
          }
        }
      }, {
        key: "onRowDragStart",
        value: function onRowDragStart(event, index) {
          this.rowDragging = true;
          this.draggedRowIndex = index;
          event.dataTransfer.setData('text', 'b'); // For firefox
        }
      }, {
        key: "onRowDragOver",
        value: function onRowDragOver(event, index, rowElement) {
          if (this.rowDragging && this.draggedRowIndex !== index) {
            var rowY = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOffset(rowElement).top + primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getWindowScrollTop();
            var pageY = event.pageY;
            var rowMidY = rowY + primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(rowElement) / 2;
            var prevRowElement = rowElement.previousElementSibling;

            if (pageY < rowMidY) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(rowElement, 'ui-table-dragpoint-bottom');
              this.droppedRowIndex = index;
              if (prevRowElement) primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(prevRowElement, 'ui-table-dragpoint-bottom');else primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(rowElement, 'ui-table-dragpoint-top');
            } else {
              if (prevRowElement) primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(prevRowElement, 'ui-table-dragpoint-bottom');else primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(rowElement, 'ui-table-dragpoint-top');
              this.droppedRowIndex = index + 1;
              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(rowElement, 'ui-table-dragpoint-bottom');
            }
          }
        }
      }, {
        key: "onRowDragLeave",
        value: function onRowDragLeave(event, rowElement) {
          var prevRowElement = rowElement.previousElementSibling;

          if (prevRowElement) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(prevRowElement, 'ui-table-dragpoint-bottom');
          }

          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(rowElement, 'ui-table-dragpoint-bottom');
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(rowElement, 'ui-table-dragpoint-top');
        }
      }, {
        key: "onRowDragEnd",
        value: function onRowDragEnd(event) {
          this.rowDragging = false;
          this.draggedRowIndex = null;
          this.droppedRowIndex = null;
        }
      }, {
        key: "onRowDrop",
        value: function onRowDrop(event, rowElement) {
          if (this.droppedRowIndex != null) {
            var dropIndex = this.draggedRowIndex > this.droppedRowIndex ? this.droppedRowIndex : this.droppedRowIndex === 0 ? 0 : this.droppedRowIndex - 1;
            primeng_utils__WEBPACK_IMPORTED_MODULE_5__["ObjectUtils"].reorderArray(this.value, this.draggedRowIndex, dropIndex);
            this.onRowReorder.emit({
              dragIndex: this.draggedRowIndex,
              dropIndex: dropIndex
            });
          } //cleanup


          this.onRowDragLeave(event, rowElement);
          this.onRowDragEnd(event);
        }
      }, {
        key: "handleVirtualScroll",
        value: function handleVirtualScroll(event) {
          var _this77 = this;

          this.first = (event.page - 1) * this.rows;
          this.firstChange.emit(this.first);
          this.virtualScrollCallback = event.callback;
          this.zone.run(function () {
            if (_this77.virtualScrollTimer) {
              clearTimeout(_this77.virtualScrollTimer);
            }

            _this77.virtualScrollTimer = setTimeout(function () {
              _this77.onLazyLoad.emit(_this77.createLazyLoadMetadata());
            }, _this77.virtualScrollDelay);
          });
        }
      }, {
        key: "isEmpty",
        value: function isEmpty() {
          var data = this.filteredValue || this.value;
          return data == null || data.length == 0;
        }
      }, {
        key: "getBlockableElement",
        value: function getBlockableElement() {
          return this.el.nativeElement.children[0];
        }
      }, {
        key: "getStorage",
        value: function getStorage() {
          switch (this.stateStorage) {
            case 'local':
              return window.localStorage;

            case 'session':
              return window.sessionStorage;

            default:
              throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are "local" and "session".');
          }
        }
      }, {
        key: "isStateful",
        value: function isStateful() {
          return this.stateKey != null;
        }
      }, {
        key: "saveState",
        value: function saveState() {
          var storage = this.getStorage();
          var state = {};

          if (this.paginator) {
            state.first = this.first;
            state.rows = this.rows;
          }

          if (this.sortField) {
            state.sortField = this.sortField;
            state.sortOrder = this.sortOrder;
          }

          if (this.multiSortMeta) {
            state.multiSortMeta = this.multiSortMeta;
          }

          if (this.hasFilter()) {
            state.filters = this.filters;
          }

          if (this.resizableColumns) {
            this.saveColumnWidths(state);
          }

          if (this.reorderableColumns) {
            this.saveColumnOrder(state);
          }

          if (this.selection) {
            state.selection = this.selection;
          }

          if (Object.keys(this.expandedRowKeys).length) {
            state.expandedRowKeys = this.expandedRowKeys;
          }

          if (Object.keys(state).length) {
            storage.setItem(this.stateKey, JSON.stringify(state));
          }

          this.onStateSave.emit(state);
        }
      }, {
        key: "clearState",
        value: function clearState() {
          var storage = this.getStorage();

          if (this.stateKey) {
            storage.removeItem(this.stateKey);
          }
        }
      }, {
        key: "restoreState",
        value: function restoreState() {
          var _this78 = this;

          var storage = this.getStorage();
          var stateString = storage.getItem(this.stateKey);

          if (stateString) {
            var state = JSON.parse(stateString);

            if (this.paginator) {
              this.first = state.first;
              this.rows = state.rows;
              this.firstChange.emit(this.first);
              this.rowsChange.emit(this.rows);
            }

            if (state.sortField) {
              this.restoringSort = true;
              this._sortField = state.sortField;
              this._sortOrder = state.sortOrder;
            }

            if (state.multiSortMeta) {
              this.restoringSort = true;
              this._multiSortMeta = state.multiSortMeta;
            }

            if (state.filters) {
              this.restoringFilter = true;
              this.filters = state.filters;
            }

            if (this.resizableColumns) {
              this.columnWidthsState = state.columnWidths;
              this.tableWidthState = state.tableWidth;
            }

            if (state.expandedRowKeys) {
              this.expandedRowKeys = state.expandedRowKeys;
            }

            if (state.selection) {
              Promise.resolve(null).then(function () {
                return _this78.selectionChange.emit(state.selection);
              });
            }

            this.stateRestored = true;
            this.onStateRestore.emit(state);
          }
        }
      }, {
        key: "saveColumnWidths",
        value: function saveColumnWidths(state) {
          var widths = [];
          var headers = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.containerViewChild.nativeElement, '.ui-table-thead > tr:first-child > th');
          headers.map(function (header) {
            return widths.push(primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterWidth(header));
          });
          state.columnWidths = widths.join(',');

          if (this.columnResizeMode === 'expand') {
            state.tableWidth = this.scrollable ? primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.containerViewChild.nativeElement, '.ui-table-scrollable-header-table').style.width : primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterWidth(this.tableViewChild.nativeElement) + 'px';
          }
        }
      }, {
        key: "restoreColumnWidths",
        value: function restoreColumnWidths() {
          if (this.columnWidthsState) {
            var widths = this.columnWidthsState.split(',');

            if (this.columnResizeMode === 'expand' && this.tableWidthState) {
              if (this.scrollable) {
                this.setScrollableItemsWidthOnExpandResize(null, this.tableWidthState, 0);
              } else {
                this.tableViewChild.nativeElement.style.width = this.tableWidthState;
                this.containerViewChild.nativeElement.style.width = this.tableWidthState;
              }
            }

            if (this.scrollable) {
              var headerCols = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.containerViewChild.nativeElement, '.ui-table-scrollable-header-table > colgroup > col');
              var bodyCols = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.containerViewChild.nativeElement, '.ui-table-scrollable-body-table > colgroup > col');
              headerCols.map(function (col, index) {
                return col.style.width = widths[index] + 'px';
              });
              bodyCols.map(function (col, index) {
                return col.style.width = widths[index] + 'px';
              });
            } else {
              var headers = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.tableViewChild.nativeElement, '.ui-table-thead > tr:first-child > th');
              headers.map(function (header, index) {
                return header.style.width = widths[index] + 'px';
              });
            }
          }
        }
      }, {
        key: "saveColumnOrder",
        value: function saveColumnOrder(state) {
          if (this.columns) {
            var columnOrder = [];
            this.columns.map(function (column) {
              columnOrder.push(column.field || column.key);
            });
            state.columnOrder = columnOrder;
          }
        }
      }, {
        key: "restoreColumnOrder",
        value: function restoreColumnOrder() {
          var _this79 = this;

          var storage = this.getStorage();
          var stateString = storage.getItem(this.stateKey);

          if (stateString) {
            var state = JSON.parse(stateString);
            var columnOrder = state.columnOrder;

            if (columnOrder) {
              var reorderedColumns = [];
              columnOrder.map(function (key) {
                return reorderedColumns.push(_this79.findColumnByKey(key));
              });
              this.columnOrderStateRestored = true;
              this.columns = reorderedColumns;
            }
          }
        }
      }, {
        key: "findColumnByKey",
        value: function findColumnByKey(key) {
          if (this.columns) {
            var _iterator12 = _createForOfIteratorHelper(this.columns),
                _step12;

            try {
              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                var col = _step12.value;
                if (col.key === key || col.field === key) return col;else continue;
              }
            } catch (err) {
              _iterator12.e(err);
            } finally {
              _iterator12.f();
            }
          } else {
            return null;
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unbindDocumentEditListener();
          this.editingCell = null;
          this.initialized = null;
        }
      }, {
        key: "value",
        get: function get() {
          return this._value;
        },
        set: function set(val) {
          this._value = val;
        }
      }, {
        key: "columns",
        get: function get() {
          return this._columns;
        },
        set: function set(cols) {
          this._columns = cols;
        }
      }, {
        key: "first",
        get: function get() {
          return this._first;
        },
        set: function set(val) {
          this._first = val;
        }
      }, {
        key: "rows",
        get: function get() {
          return this._rows;
        },
        set: function set(val) {
          this._rows = val;
        }
      }, {
        key: "totalRecords",
        get: function get() {
          return this._totalRecords;
        },
        set: function set(val) {
          this._totalRecords = val;
          this.tableService.onTotalRecordsChange(this._totalRecords);
        }
      }, {
        key: "sortField",
        get: function get() {
          return this._sortField;
        },
        set: function set(val) {
          this._sortField = val;
        }
      }, {
        key: "sortOrder",
        get: function get() {
          return this._sortOrder;
        },
        set: function set(val) {
          this._sortOrder = val;
        }
      }, {
        key: "multiSortMeta",
        get: function get() {
          return this._multiSortMeta;
        },
        set: function set(val) {
          this._multiSortMeta = val;
        }
      }, {
        key: "selection",
        get: function get() {
          return this._selection;
        },
        set: function set(val) {
          this._selection = val;
        }
      }]);

      return Table;
    }();

    Table.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }, {
        type: TableService
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "frozenColumns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "frozenValue", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "tableStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "tableStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "paginator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "pageLinks", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "rowsPerPageOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "alwaysShowPaginator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "paginatorPosition", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "paginatorDropdownAppendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "paginatorDropdownScrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "currentPageReportTemplate", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "showCurrentPageReport", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "defaultSortOrder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "sortMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "resetPageOnSort", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "selectionMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "selectionChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "contextMenuSelection", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "contextMenuSelectionChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "contextMenuSelectionMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "dataKey", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "metaKeySelection", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "rowTrackBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "lazy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "lazyLoadOnInit", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "compareSelectionBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "csvSeparator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "exportFilename", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "filters", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "globalFilterFields", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "filterDelay", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "expandedRowKeys", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "editingRowKeys", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "rowExpandMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "scrollable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "scrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "virtualScroll", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "virtualScrollDelay", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "virtualRowHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "frozenWidth", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "responsive", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "contextMenu", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "resizableColumns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "columnResizeMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "reorderableColumns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "loading", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "loadingIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "showLoader", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "rowHover", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "customSort", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "autoLayout", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "exportFunction", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "stateKey", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "stateStorage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "editMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onRowSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onRowUnselect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onPage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onSort", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onFilter", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onLazyLoad", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onRowExpand", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onRowCollapse", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onContextMenuSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onColResize", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onColReorder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onRowReorder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onEditInit", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onEditComplete", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onEditCancel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onHeaderCheckboxToggle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "sortFunction", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "firstChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "rowsChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onStateSave", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Table.prototype, "onStateRestore", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('container')], Table.prototype, "containerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('resizeHelper')], Table.prototype, "resizeHelperViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('reorderIndicatorUp')], Table.prototype, "reorderIndicatorUpViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('reorderIndicatorDown')], Table.prototype, "reorderIndicatorDownViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('table')], Table.prototype, "tableViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["PrimeTemplate"])], Table.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "value", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "columns", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "first", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "rows", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "totalRecords", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "sortField", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "sortOrder", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "multiSortMeta", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Table.prototype, "selection", null);

    Table = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-table',
      template: "\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'ui-table ui-widget': true, 'ui-table-responsive': responsive, 'ui-table-resizable': resizableColumns,\n                'ui-table-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'ui-table-hoverable-rows': (rowHover||selectionMode), 'ui-table-auto-layout': autoLayout}\">\n            <div class=\"ui-table-loading ui-widget-overlay\" *ngIf=\"loading && showLoader\"></div>\n            <div class=\"ui-table-loading-content\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'ui-table-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"ui-table-caption ui-widget-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\"></p-paginator>\n\n            <div class=\"ui-table-wrapper\" *ngIf=\"!scrollable\">\n                <table role=\"grid\" #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"ui-table-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"ui-table-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerTemplate\" class=\"ui-table-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"ui-table-scrollable-wrapper\" *ngIf=\"scrollable\">\n               <div class=\"ui-table-scrollable-view ui-table-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" [pScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\n               <div class=\"ui-table-scrollable-view\" [pScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\"></div>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\"></p-paginator>\n\n                <div *ngIf=\"summaryTemplate\" class=\"ui-table-summary ui-widget-header\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"ui-column-resizer-helper ui-state-highlight\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down ui-table-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up ui-table-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    ",
      providers: [TableService],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Table);

    var TableBody = function TableBody(dt) {
      _classCallCheck(this, TableBody);

      this.dt = dt;
    };

    TableBody.ctorParameters = function () {
      return [{
        type: Table
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pTableBody")], TableBody.prototype, "columns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pTableBodyTemplate")], TableBody.prototype, "template", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableBody.prototype, "frozen", void 0);

    TableBody = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: '[pTableBody]',
      template: "\n        <ng-container *ngIf=\"!dt.expandedRowTemplate\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    "
    })], TableBody);

    var ScrollableView =
    /*#__PURE__*/
    function () {
      function ScrollableView(dt, el, zone) {
        var _this80 = this;

        _classCallCheck(this, ScrollableView);

        this.dt = dt;
        this.el = el;
        this.zone = zone;
        this.loadingArray = [];
        this.lastBodyScrollTop = 0;
        this.subscription = this.dt.tableService.valueSource$.subscribe(function () {
          _this80.zone.runOutsideAngular(function () {
            setTimeout(function () {
              _this80.alignScrollBar();

              if (_this80.scrollLoadingTableViewChild && _this80.scrollLoadingTableViewChild.nativeElement) {
                _this80.scrollLoadingTableViewChild.nativeElement.style.display = 'none';
              }
            }, 50);
          });
        });

        if (this.dt.virtualScroll) {
          this.totalRecordsSubscription = this.dt.tableService.totalRecordsSource$.subscribe(function () {
            _this80.zone.runOutsideAngular(function () {
              setTimeout(function () {
                _this80.setVirtualScrollerHeight();
              }, 50);
            });
          });
        }

        this.loadingArray = Array(this.dt.rows).fill(1);
        this.initialized = false;
      }

      _createClass(ScrollableView, [{
        key: "ngAfterViewChecked",
        value: function ngAfterViewChecked() {
          if (!this.initialized && this.el.nativeElement.offsetParent) {
            this.alignScrollBar();
            this.setScrollHeight();
            this.initialized = true;
          }
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          var _this81 = this;

          if (!this.frozen) {
            if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.el.nativeElement, 'ui-table-unfrozen-view');
            }

            var frozenView = this.el.nativeElement.previousElementSibling;

            if (frozenView) {
              this.frozenSiblingBody = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(frozenView, '.ui-table-scrollable-body');
            }
          } else {
            if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {
              this.scrollableAlignerViewChild.nativeElement.style.height = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].calculateScrollbarHeight() + 'px';
            }

            var scrollableView = this.el.nativeElement.nextElementSibling;

            if (scrollableView) {
              this.scrollableSiblingBody = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(scrollableView, '.ui-table-scrollable-body');
            }
          }

          this.bindEvents();
          this.setScrollHeight();
          this.alignScrollBar();

          if (this.frozen) {
            this.columnsSubscription = this.dt.tableService.columnsSource$.subscribe(function () {
              _this81.zone.runOutsideAngular(function () {
                setTimeout(function () {
                  _this81.setScrollHeight();
                }, 50);
              });
            });
          }

          if (this.dt.virtualScroll) {
            this.setVirtualScrollerHeight();

            if (this.scrollLoadingTableViewChild && this.scrollLoadingTableViewChild.nativeElement) {
              this.scrollLoadingTableViewChild.nativeElement.style.display = 'table';
            }
          }
        }
      }, {
        key: "bindEvents",
        value: function bindEvents() {
          var _this82 = this;

          this.zone.runOutsideAngular(function () {
            if (_this82.scrollHeaderViewChild && _this82.scrollHeaderViewChild.nativeElement) {
              _this82.headerScrollListener = _this82.onHeaderScroll.bind(_this82);

              _this82.scrollHeaderViewChild.nativeElement.addEventListener('scroll', _this82.headerScrollListener);
            }

            if (_this82.scrollFooterViewChild && _this82.scrollFooterViewChild.nativeElement) {
              _this82.footerScrollListener = _this82.onFooterScroll.bind(_this82);

              _this82.scrollFooterViewChild.nativeElement.addEventListener('scroll', _this82.footerScrollListener);
            }

            if (!_this82.frozen) {
              _this82.bodyScrollListener = _this82.onBodyScroll.bind(_this82);

              _this82.scrollBodyViewChild.nativeElement.addEventListener('scroll', _this82.bodyScrollListener);
            }
          });
        }
      }, {
        key: "unbindEvents",
        value: function unbindEvents() {
          if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {
            this.scrollHeaderViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);
          }

          if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {
            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);
          }

          this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);
        }
      }, {
        key: "onHeaderScroll",
        value: function onHeaderScroll(event) {
          var scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;
          this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;

          if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {
            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;
          }

          this.preventBodyScrollPropagation = true;
        }
      }, {
        key: "onFooterScroll",
        value: function onFooterScroll(event) {
          var scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;
          this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;

          if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {
            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;
          }

          this.preventBodyScrollPropagation = true;
        }
      }, {
        key: "onBodyScroll",
        value: function onBodyScroll(event) {
          var _this83 = this;

          if (this.preventBodyScrollPropagation) {
            this.preventBodyScrollPropagation = false;
            return;
          }

          if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {
            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';
          }

          if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {
            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';
          }

          if (this.frozenSiblingBody) {
            this.frozenSiblingBody.scrollTop = this.scrollBodyViewChild.nativeElement.scrollTop;
          }

          if (this.dt.virtualScroll) {
            requestAnimationFrame(function () {
              if (_this83.lastBodyScrollTop !== _this83.scrollBodyViewChild.nativeElement.scrollTop) {
                _this83.lastBodyScrollTop = _this83.scrollBodyViewChild.nativeElement.scrollTop;
                var viewport = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(_this83.scrollBodyViewChild.nativeElement);
                var tableHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(_this83.scrollTableViewChild.nativeElement);
                var pageHeight = _this83.dt.virtualRowHeight * _this83.dt.rows;
                var virtualTableHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(_this83.virtualScrollerViewChild.nativeElement);
                var pageCount = virtualTableHeight / pageHeight || 1;
                var scrollBodyTop = _this83.scrollTableViewChild.nativeElement.style.top || '0';

                if (_this83.scrollBodyViewChild.nativeElement.scrollTop + viewport > parseFloat(scrollBodyTop) + tableHeight || _this83.scrollBodyViewChild.nativeElement.scrollTop < parseFloat(scrollBodyTop)) {
                  if (_this83.scrollLoadingTableViewChild && _this83.scrollLoadingTableViewChild.nativeElement) {
                    _this83.scrollLoadingTableViewChild.nativeElement.style.display = 'table';
                    _this83.scrollLoadingTableViewChild.nativeElement.style.top = _this83.scrollBodyViewChild.nativeElement.scrollTop + 'px';
                  }

                  var page = Math.floor(_this83.scrollBodyViewChild.nativeElement.scrollTop * pageCount / _this83.scrollBodyViewChild.nativeElement.scrollHeight) + 1;

                  _this83.dt.handleVirtualScroll({
                    page: page,
                    callback: function callback() {
                      if (_this83.scrollLoadingTableViewChild && _this83.scrollLoadingTableViewChild.nativeElement) {
                        _this83.scrollLoadingTableViewChild.nativeElement.style.display = 'none';
                      }

                      _this83.scrollTableViewChild.nativeElement.style.top = (page - 1) * pageHeight + 'px';

                      if (_this83.frozenSiblingBody) {
                        _this83.frozenSiblingBody.children[0].style.top = _this83.scrollTableViewChild.nativeElement.style.top;
                      }

                      _this83.dt.anchorRowIndex = null;
                    }
                  });
                }
              }
            });
          }
        }
      }, {
        key: "setScrollHeight",
        value: function setScrollHeight() {
          if (this.scrollHeight && this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {
            if (this.frozenSiblingBody) {
              this.scrollBodyViewChild.nativeElement.style.maxHeight = this.frozenSiblingBody.style.maxHeight;
            } else {
              if (this.scrollHeight.indexOf('%') !== -1) {
                var relativeHeight;
                this.scrollBodyViewChild.nativeElement.style.visibility = 'hidden';
                this.scrollBodyViewChild.nativeElement.style.height = '100px'; //temporary height to calculate static height

                var containerHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(this.dt.el.nativeElement.children[0]);

                if (this.scrollHeight.includes("calc")) {
                  var percentHeight = parseInt(this.scrollHeight.slice(this.scrollHeight.indexOf("(") + 1, this.scrollHeight.indexOf("%")));
                  var diffValue = parseInt(this.scrollHeight.slice(this.scrollHeight.indexOf("-") + 1, this.scrollHeight.indexOf(")")));
                  relativeHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(this.dt.el.nativeElement.parentElement) * percentHeight / 100 - diffValue;
                } else {
                  relativeHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(this.dt.el.nativeElement.parentElement) * parseInt(this.scrollHeight) / 100;
                }

                var staticHeight = containerHeight - 100; //total height of headers, footers, paginators

                var scrollBodyHeight = relativeHeight - staticHeight;

                if (this.frozen) {
                  scrollBodyHeight -= primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].calculateScrollbarWidth();
                }

                this.scrollBodyViewChild.nativeElement.style.height = 'auto';
                this.scrollBodyViewChild.nativeElement.style.maxHeight = scrollBodyHeight + 'px';
                this.scrollBodyViewChild.nativeElement.style.visibility = 'visible';
              } else {
                this.scrollBodyViewChild.nativeElement.style.maxHeight = this.scrollHeight;
              }
            }
          }
        }
      }, {
        key: "setVirtualScrollerHeight",
        value: function setVirtualScrollerHeight() {
          if (this.virtualScrollerViewChild.nativeElement) {
            this.virtualScrollerViewChild.nativeElement.style.height = this.dt.totalRecords * this.dt.virtualRowHeight + 'px';
          }
        }
      }, {
        key: "hasVerticalOverflow",
        value: function hasVerticalOverflow() {
          return primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(this.scrollTableViewChild.nativeElement) > primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterHeight(this.scrollBodyViewChild.nativeElement);
        }
      }, {
        key: "alignScrollBar",
        value: function alignScrollBar() {
          if (!this.frozen) {
            var scrollBarWidth = this.hasVerticalOverflow() ? primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].calculateScrollbarWidth() : 0;
            this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';

            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {
              this.scrollFooterBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';
            }
          }

          this.initialized = false;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unbindEvents();
          this.frozenSiblingBody = null;

          if (this.subscription) {
            this.subscription.unsubscribe();
          }

          if (this.totalRecordsSubscription) {
            this.totalRecordsSubscription.unsubscribe();
          }

          if (this.columnsSubscription) {
            this.columnsSubscription.unsubscribe();
          }

          this.initialized = false;
        }
      }, {
        key: "scrollHeight",
        get: function get() {
          return this._scrollHeight;
        },
        set: function set(val) {
          this._scrollHeight = val;
          this.setScrollHeight();
        }
      }]);

      return ScrollableView;
    }();

    ScrollableView.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pScrollableView")], ScrollableView.prototype, "columns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ScrollableView.prototype, "frozen", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollHeader')], ScrollableView.prototype, "scrollHeaderViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollHeaderBox')], ScrollableView.prototype, "scrollHeaderBoxViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollBody')], ScrollableView.prototype, "scrollBodyViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollTable')], ScrollableView.prototype, "scrollTableViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('loadingTable')], ScrollableView.prototype, "scrollLoadingTableViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollFooter')], ScrollableView.prototype, "scrollFooterViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollFooterBox')], ScrollableView.prototype, "scrollFooterBoxViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('virtualScroller')], ScrollableView.prototype, "virtualScrollerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollableAligner')], ScrollableView.prototype, "scrollableAlignerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ScrollableView.prototype, "scrollHeight", null);

    ScrollableView = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: '[pScrollableView]',
      template: "\n        <div #scrollHeader class=\"ui-table-scrollable-header ui-widget-header\">\n            <div #scrollHeaderBox class=\"ui-table-scrollable-header-box\">\n                <table class=\"ui-table-scrollable-header-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"ui-table-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"ui-table-tbody\">\n                        <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"dt.frozenValue\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                            <ng-container *ngTemplateOutlet=\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\"></ng-container>\n                        </ng-template>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div #scrollBody class=\"ui-table-scrollable-body\">\n            <table #scrollTable [ngClass]=\"{'ui-table-scrollable-body-table': true, 'ui-table-virtual-table': dt.virtualScroll}\" [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                <tbody class=\"ui-table-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n            </table>\n            <table #loadingTable *ngIf=\"dt.virtualScroll && dt.loadingBodyTemplate != null\" [ngClass]=\"{'ui-table-scrollable-body-table ui-table-loading-virtual-table': true, 'ui-table-virtual-table': dt.virtualScroll}\">\n                <tbody class=\"ui-table-tbody\">\n                    <ng-template ngFor [ngForOf]=\"loadingArray\">\n                        <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {columns: columns}\"></ng-container>\n                    </ng-template>\n                </tbody>\n            </table>\n            <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            <div #virtualScroller class=\"ui-table-virtual-scroller\" *ngIf=\"dt.virtualScroll\"></div>\n        </div>\n        <div #scrollFooter class=\"ui-table-scrollable-footer ui-widget-header\">\n            <div #scrollFooterBox class=\"ui-table-scrollable-footer-box\">\n                <table class=\"ui-table-scrollable-footer-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tfoot class=\"ui-table-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    "
    })], ScrollableView);

    var SortableColumn =
    /*#__PURE__*/
    function () {
      function SortableColumn(dt) {
        var _this84 = this;

        _classCallCheck(this, SortableColumn);

        this.dt = dt;

        if (this.isEnabled()) {
          this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {
            _this84.updateSortState();
          });
        }
      }

      _createClass(SortableColumn, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.isEnabled()) {
            this.updateSortState();
          }
        }
      }, {
        key: "updateSortState",
        value: function updateSortState() {
          this.sorted = this.dt.isSorted(this.field);
          this.sortOrder = this.sorted ? this.dt.sortOrder === 1 ? 'ascending' : 'descending' : 'none';
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.updateSortState();
            this.dt.sort({
              originalEvent: event,
              field: this.field
            });
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].clearSelection();
          }
        }
      }, {
        key: "onEnterKey",
        value: function onEnterKey(event) {
          this.onClick(event);
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pSortableColumnDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return SortableColumn;
    }();

    SortableColumn.ctorParameters = function () {
      return [{
        type: Table
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pSortableColumn")], SortableColumn.prototype, "field", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SortableColumn.prototype, "pSortableColumnDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], SortableColumn.prototype, "onClick", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.enter', ['$event'])], SortableColumn.prototype, "onEnterKey", null);

    SortableColumn = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pSortableColumn]',
      host: {
        '[class.ui-sortable-column]': 'isEnabled()',
        '[class.ui-state-highlight]': 'sorted',
        '[attr.tabindex]': 'isEnabled() ? "0" : null',
        '[attr.role]': '"columnheader"',
        '[attr.aria-sort]': 'sortOrder'
      }
    })], SortableColumn);

    var SortIcon =
    /*#__PURE__*/
    function () {
      function SortIcon(dt) {
        var _this85 = this;

        _classCallCheck(this, SortIcon);

        this.dt = dt;
        this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {
          _this85.updateSortState();
        });
      }

      _createClass(SortIcon, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.updateSortState();
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          event.preventDefault();
        }
      }, {
        key: "updateSortState",
        value: function updateSortState() {
          if (this.dt.sortMode === 'single') {
            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;
          } else if (this.dt.sortMode === 'multiple') {
            var sortMeta = this.dt.getSortMeta(this.field);
            this.sortOrder = sortMeta ? sortMeta.order : 0;
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return SortIcon;
    }();

    SortIcon.ctorParameters = function () {
      return [{
        type: Table
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SortIcon.prototype, "field", void 0);

    SortIcon = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-sortIcon',
      template: "\n        <i class=\"ui-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-up': sortOrder === 1, 'pi-sort-down': sortOrder === -1, 'pi-sort': sortOrder === 0}\"></i>\n    "
    })], SortIcon);

    var SelectableRow =
    /*#__PURE__*/
    function () {
      function SelectableRow(dt, tableService) {
        var _this86 = this;

        _classCallCheck(this, SelectableRow);

        this.dt = dt;
        this.tableService = tableService;

        if (this.isEnabled()) {
          this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {
            _this86.selected = _this86.dt.isSelected(_this86.data);
          });
        }
      }

      _createClass(SelectableRow, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.isEnabled()) {
            this.selected = this.dt.isSelected(this.data);
          }
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.dt.handleRowClick({
              originalEvent: event,
              rowData: this.data,
              rowIndex: this.index
            });
          }
        }
      }, {
        key: "onTouchEnd",
        value: function onTouchEnd(event) {
          if (this.isEnabled()) {
            this.dt.handleRowTouchEnd(event);
          }
        }
      }, {
        key: "onArrowDownKeyDown",
        value: function onArrowDownKeyDown(event) {
          if (!this.isEnabled()) {
            return;
          }

          var row = event.currentTarget;
          var nextRow = this.findNextSelectableRow(row);

          if (nextRow) {
            nextRow.focus();
          }

          event.preventDefault();
        }
      }, {
        key: "onArrowUpKeyDown",
        value: function onArrowUpKeyDown(event) {
          if (!this.isEnabled()) {
            return;
          }

          var row = event.currentTarget;
          var prevRow = this.findPrevSelectableRow(row);

          if (prevRow) {
            prevRow.focus();
          }

          event.preventDefault();
        }
      }, {
        key: "onEnterKeyDown",
        value: function onEnterKeyDown(event) {
          if (!this.isEnabled()) {
            return;
          }

          this.dt.handleRowClick({
            originalEvent: event,
            rowData: this.data,
            rowIndex: this.index
          });
        }
      }, {
        key: "findNextSelectableRow",
        value: function findNextSelectableRow(row) {
          var nextRow = row.nextElementSibling;

          if (nextRow) {
            if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(nextRow, 'ui-selectable-row')) return nextRow;else return this.findNextSelectableRow(nextRow);
          } else {
            return null;
          }
        }
      }, {
        key: "findPrevSelectableRow",
        value: function findPrevSelectableRow(row) {
          var prevRow = row.previousElementSibling;

          if (prevRow) {
            if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(prevRow, 'ui-selectable-row')) return prevRow;else return this.findPrevSelectableRow(prevRow);
          } else {
            return null;
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pSelectableRowDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return SelectableRow;
    }();

    SelectableRow.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: TableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pSelectableRow")], SelectableRow.prototype, "data", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pSelectableRowIndex")], SelectableRow.prototype, "index", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectableRow.prototype, "pSelectableRowDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], SelectableRow.prototype, "onClick", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('touchend', ['$event'])], SelectableRow.prototype, "onTouchEnd", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.arrowdown', ['$event'])], SelectableRow.prototype, "onArrowDownKeyDown", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.arrowup', ['$event'])], SelectableRow.prototype, "onArrowUpKeyDown", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.enter', ['$event'])], SelectableRow.prototype, "onEnterKeyDown", null);

    SelectableRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pSelectableRow]',
      host: {
        '[class.ui-selectable-row]': 'isEnabled()',
        '[class.ui-state-highlight]': 'selected',
        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'
      }
    })], SelectableRow);

    var SelectableRowDblClick =
    /*#__PURE__*/
    function () {
      function SelectableRowDblClick(dt, tableService) {
        var _this87 = this;

        _classCallCheck(this, SelectableRowDblClick);

        this.dt = dt;
        this.tableService = tableService;

        if (this.isEnabled()) {
          this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {
            _this87.selected = _this87.dt.isSelected(_this87.data);
          });
        }
      }

      _createClass(SelectableRowDblClick, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.isEnabled()) {
            this.selected = this.dt.isSelected(this.data);
          }
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.dt.handleRowClick({
              originalEvent: event,
              rowData: this.data,
              rowIndex: this.index
            });
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pSelectableRowDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return SelectableRowDblClick;
    }();

    SelectableRowDblClick.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: TableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pSelectableRowDblClick")], SelectableRowDblClick.prototype, "data", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pSelectableRowIndex")], SelectableRowDblClick.prototype, "index", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], SelectableRowDblClick.prototype, "pSelectableRowDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('dblclick', ['$event'])], SelectableRowDblClick.prototype, "onClick", null);

    SelectableRowDblClick = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pSelectableRowDblClick]',
      host: {
        '[class.ui-selectable-row]': 'isEnabled()',
        '[class.ui-state-highlight]': 'selected'
      }
    })], SelectableRowDblClick);

    var ContextMenuRow =
    /*#__PURE__*/
    function () {
      function ContextMenuRow(dt, tableService, el) {
        var _this88 = this;

        _classCallCheck(this, ContextMenuRow);

        this.dt = dt;
        this.tableService = tableService;
        this.el = el;

        if (this.isEnabled()) {
          this.subscription = this.dt.tableService.contextMenuSource$.subscribe(function (data) {
            _this88.selected = _this88.dt.equals(_this88.data, data);
          });
        }
      }

      _createClass(ContextMenuRow, [{
        key: "onContextMenu",
        value: function onContextMenu(event) {
          if (this.isEnabled()) {
            this.dt.handleRowRightClick({
              originalEvent: event,
              rowData: this.data,
              rowIndex: this.index
            });
            this.el.nativeElement.focus();
            event.preventDefault();
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pContextMenuRowDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return ContextMenuRow;
    }();

    ContextMenuRow.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: TableService
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pContextMenuRow")], ContextMenuRow.prototype, "data", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pContextMenuRowIndex")], ContextMenuRow.prototype, "index", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenuRow.prototype, "pContextMenuRowDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('contextmenu', ['$event'])], ContextMenuRow.prototype, "onContextMenu", null);

    ContextMenuRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pContextMenuRow]',
      host: {
        '[class.ui-contextmenu-selected]': 'selected',
        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'
      }
    })], ContextMenuRow);

    var RowToggler =
    /*#__PURE__*/
    function () {
      function RowToggler(dt) {
        _classCallCheck(this, RowToggler);

        this.dt = dt;
      }

      _createClass(RowToggler, [{
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.dt.toggleRow(this.data, event);
            event.preventDefault();
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pRowTogglerDisabled !== true;
        }
      }]);

      return RowToggler;
    }();

    RowToggler.ctorParameters = function () {
      return [{
        type: Table
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('pRowToggler')], RowToggler.prototype, "data", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], RowToggler.prototype, "pRowTogglerDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], RowToggler.prototype, "onClick", null);

    RowToggler = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pRowToggler]'
    })], RowToggler);

    var ResizableColumn =
    /*#__PURE__*/
    function () {
      function ResizableColumn(dt, el, zone) {
        _classCallCheck(this, ResizableColumn);

        this.dt = dt;
        this.el = el;
        this.zone = zone;
      }

      _createClass(ResizableColumn, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          var _this89 = this;

          if (this.isEnabled()) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.el.nativeElement, 'ui-resizable-column');
            this.resizer = document.createElement('span');
            this.resizer.className = 'ui-column-resizer ui-clickable';
            this.el.nativeElement.appendChild(this.resizer);
            this.zone.runOutsideAngular(function () {
              _this89.resizerMouseDownListener = _this89.onMouseDown.bind(_this89);

              _this89.resizer.addEventListener('mousedown', _this89.resizerMouseDownListener);
            });
          }
        }
      }, {
        key: "bindDocumentEvents",
        value: function bindDocumentEvents() {
          var _this90 = this;

          this.zone.runOutsideAngular(function () {
            _this90.documentMouseMoveListener = _this90.onDocumentMouseMove.bind(_this90);
            document.addEventListener('mousemove', _this90.documentMouseMoveListener);
            _this90.documentMouseUpListener = _this90.onDocumentMouseUp.bind(_this90);
            document.addEventListener('mouseup', _this90.documentMouseUpListener);
          });
        }
      }, {
        key: "unbindDocumentEvents",
        value: function unbindDocumentEvents() {
          if (this.documentMouseMoveListener) {
            document.removeEventListener('mousemove', this.documentMouseMoveListener);
            this.documentMouseMoveListener = null;
          }

          if (this.documentMouseUpListener) {
            document.removeEventListener('mouseup', this.documentMouseUpListener);
            this.documentMouseUpListener = null;
          }
        }
      }, {
        key: "onMouseDown",
        value: function onMouseDown(event) {
          if (event.which === 1) {
            this.dt.onColumnResizeBegin(event);
            this.bindDocumentEvents();
          }
        }
      }, {
        key: "onDocumentMouseMove",
        value: function onDocumentMouseMove(event) {
          this.dt.onColumnResize(event);
        }
      }, {
        key: "onDocumentMouseUp",
        value: function onDocumentMouseUp(event) {
          this.dt.onColumnResizeEnd(event, this.el.nativeElement);
          this.unbindDocumentEvents();
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pResizableColumnDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.resizerMouseDownListener) {
            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);
          }

          this.unbindDocumentEvents();
        }
      }]);

      return ResizableColumn;
    }();

    ResizableColumn.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ResizableColumn.prototype, "pResizableColumnDisabled", void 0);

    ResizableColumn = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pResizableColumn]'
    })], ResizableColumn);

    var ReorderableColumn =
    /*#__PURE__*/
    function () {
      function ReorderableColumn(dt, el, zone) {
        _classCallCheck(this, ReorderableColumn);

        this.dt = dt;
        this.el = el;
        this.zone = zone;
      }

      _createClass(ReorderableColumn, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (this.isEnabled()) {
            this.bindEvents();
          }
        }
      }, {
        key: "bindEvents",
        value: function bindEvents() {
          var _this91 = this;

          this.zone.runOutsideAngular(function () {
            _this91.mouseDownListener = _this91.onMouseDown.bind(_this91);

            _this91.el.nativeElement.addEventListener('mousedown', _this91.mouseDownListener);

            _this91.dragStartListener = _this91.onDragStart.bind(_this91);

            _this91.el.nativeElement.addEventListener('dragstart', _this91.dragStartListener);

            _this91.dragOverListener = _this91.onDragEnter.bind(_this91);

            _this91.el.nativeElement.addEventListener('dragover', _this91.dragOverListener);

            _this91.dragEnterListener = _this91.onDragEnter.bind(_this91);

            _this91.el.nativeElement.addEventListener('dragenter', _this91.dragEnterListener);

            _this91.dragLeaveListener = _this91.onDragLeave.bind(_this91);

            _this91.el.nativeElement.addEventListener('dragleave', _this91.dragLeaveListener);
          });
        }
      }, {
        key: "unbindEvents",
        value: function unbindEvents() {
          if (this.mouseDownListener) {
            document.removeEventListener('mousedown', this.mouseDownListener);
            this.mouseDownListener = null;
          }

          if (this.dragOverListener) {
            document.removeEventListener('dragover', this.dragOverListener);
            this.dragOverListener = null;
          }

          if (this.dragEnterListener) {
            document.removeEventListener('dragenter', this.dragEnterListener);
            this.dragEnterListener = null;
          }

          if (this.dragEnterListener) {
            document.removeEventListener('dragenter', this.dragEnterListener);
            this.dragEnterListener = null;
          }

          if (this.dragLeaveListener) {
            document.removeEventListener('dragleave', this.dragLeaveListener);
            this.dragLeaveListener = null;
          }
        }
      }, {
        key: "onMouseDown",
        value: function onMouseDown(event) {
          if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;
        }
      }, {
        key: "onDragStart",
        value: function onDragStart(event) {
          this.dt.onColumnDragStart(event, this.el.nativeElement);
        }
      }, {
        key: "onDragOver",
        value: function onDragOver(event) {
          event.preventDefault();
        }
      }, {
        key: "onDragEnter",
        value: function onDragEnter(event) {
          this.dt.onColumnDragEnter(event, this.el.nativeElement);
        }
      }, {
        key: "onDragLeave",
        value: function onDragLeave(event) {
          this.dt.onColumnDragLeave(event);
        }
      }, {
        key: "onDrop",
        value: function onDrop(event) {
          if (this.isEnabled()) {
            this.dt.onColumnDrop(event, this.el.nativeElement);
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pReorderableColumnDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unbindEvents();
        }
      }]);

      return ReorderableColumn;
    }();

    ReorderableColumn.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ReorderableColumn.prototype, "pReorderableColumnDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('drop', ['$event'])], ReorderableColumn.prototype, "onDrop", null);

    ReorderableColumn = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pReorderableColumn]'
    })], ReorderableColumn);

    var EditableColumn =
    /*#__PURE__*/
    function () {
      function EditableColumn(dt, el, zone) {
        _classCallCheck(this, EditableColumn);

        this.dt = dt;
        this.el = el;
        this.zone = zone;
      }

      _createClass(EditableColumn, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (this.isEnabled()) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.el.nativeElement, 'ui-editable-column');
          }
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.dt.editingCellClick = true;

            if (this.dt.editingCell) {
              if (this.dt.editingCell !== this.el.nativeElement) {
                if (!this.dt.isEditingCellValid()) {
                  return;
                }

                this.closeEditingCell(true, event);
                this.openCell();
              }
            } else {
              this.openCell();
            }
          }
        }
      }, {
        key: "openCell",
        value: function openCell() {
          var _this92 = this;

          this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.el.nativeElement, 'ui-editing-cell');
          this.dt.onEditInit.emit({
            field: this.field,
            data: this.data,
            index: this.rowIndex
          });
          this.zone.runOutsideAngular(function () {
            setTimeout(function () {
              var focusCellSelector = _this92.pFocusCellSelector || 'input, textarea, select';
              var focusableElement = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(_this92.el.nativeElement, focusCellSelector);

              if (focusableElement) {
                focusableElement.focus();
              }
            }, 50);
          });
        }
      }, {
        key: "closeEditingCell",
        value: function closeEditingCell(completed, event) {
          if (completed) this.dt.onEditComplete.emit({
            field: this.dt.editingCellField,
            data: this.dt.editingCellData,
            originalEvent: event,
            index: this.rowIndex
          });else this.dt.onEditCancel.emit({
            field: this.dt.editingCellField,
            data: this.dt.editingCellData,
            originalEvent: event,
            index: this.rowIndex
          });
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(this.dt.editingCell, 'ui-editing-cell');
          this.dt.editingCell = null;
          this.dt.editingCellData = null;
          this.dt.editingCellField = null;
          this.dt.unbindDocumentEditListener();
        }
      }, {
        key: "onEnterKeyDown",
        value: function onEnterKeyDown(event) {
          if (this.isEnabled()) {
            if (this.dt.isEditingCellValid()) {
              this.closeEditingCell(true, event);
            }

            event.preventDefault();
          }
        }
      }, {
        key: "onEscapeKeyDown",
        value: function onEscapeKeyDown(event) {
          if (this.isEnabled()) {
            if (this.dt.isEditingCellValid()) {
              this.closeEditingCell(false, event);
            }

            event.preventDefault();
          }
        }
      }, {
        key: "onShiftKeyDown",
        value: function onShiftKeyDown(event) {
          if (this.isEnabled()) {
            if (event.shiftKey) this.moveToPreviousCell(event);else {
              this.moveToNextCell(event);
            }
          }
        }
      }, {
        key: "findCell",
        value: function findCell(element) {
          if (element) {
            var cell = element;

            while (cell && !primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(cell, 'ui-editing-cell')) {
              cell = cell.parentElement;
            }

            return cell;
          } else {
            return null;
          }
        }
      }, {
        key: "moveToPreviousCell",
        value: function moveToPreviousCell(event) {
          var currentCell = this.findCell(event.target);

          if (currentCell) {
            var targetCell = this.findPreviousEditableColumn(currentCell);

            if (targetCell) {
              if (this.dt.isEditingCellValid()) {
                this.closeEditingCell(true, event);
              }

              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].invokeElementMethod(event.target, 'blur');
              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].invokeElementMethod(targetCell, 'click');
              event.preventDefault();
            }
          }
        }
      }, {
        key: "moveToNextCell",
        value: function moveToNextCell(event) {
          var currentCell = this.findCell(event.target);

          if (currentCell) {
            var targetCell = this.findNextEditableColumn(currentCell);

            if (targetCell) {
              if (this.dt.isEditingCellValid()) {
                this.closeEditingCell(true, event);
              }

              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].invokeElementMethod(event.target, 'blur');
              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].invokeElementMethod(targetCell, 'click');
              event.preventDefault();
            }
          }
        }
      }, {
        key: "findPreviousEditableColumn",
        value: function findPreviousEditableColumn(cell) {
          var prevCell = cell.previousElementSibling;

          if (!prevCell) {
            var previousRow = cell.parentElement.previousElementSibling;

            if (previousRow) {
              prevCell = previousRow.lastElementChild;
            }
          }

          if (prevCell) {
            if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(prevCell, 'ui-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);
          } else {
            return null;
          }
        }
      }, {
        key: "findNextEditableColumn",
        value: function findNextEditableColumn(cell) {
          var nextCell = cell.nextElementSibling;

          if (!nextCell) {
            var nextRow = cell.parentElement.nextElementSibling;

            if (nextRow) {
              nextCell = nextRow.firstElementChild;
            }
          }

          if (nextCell) {
            if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(nextCell, 'ui-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);
          } else {
            return null;
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pEditableColumnDisabled !== true;
        }
      }]);

      return EditableColumn;
    }();

    EditableColumn.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pEditableColumn")], EditableColumn.prototype, "data", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pEditableColumnField")], EditableColumn.prototype, "field", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pEditableColumnRowIndex")], EditableColumn.prototype, "rowIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], EditableColumn.prototype, "pEditableColumnDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], EditableColumn.prototype, "pFocusCellSelector", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], EditableColumn.prototype, "onClick", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.enter', ['$event'])], EditableColumn.prototype, "onEnterKeyDown", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.escape', ['$event'])], EditableColumn.prototype, "onEscapeKeyDown", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.tab', ['$event']), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.shift.tab', ['$event']), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.meta.tab', ['$event'])], EditableColumn.prototype, "onShiftKeyDown", null);

    EditableColumn = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pEditableColumn]'
    })], EditableColumn);

    var EditableRow =
    /*#__PURE__*/
    function () {
      function EditableRow(el) {
        _classCallCheck(this, EditableRow);

        this.el = el;
      }

      _createClass(EditableRow, [{
        key: "isEnabled",
        value: function isEnabled() {
          return this.pEditableRowDisabled !== true;
        }
      }]);

      return EditableRow;
    }();

    EditableRow.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pEditableRow")], EditableRow.prototype, "data", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], EditableRow.prototype, "pEditableRowDisabled", void 0);

    EditableRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pEditableRow]'
    })], EditableRow);

    var InitEditableRow =
    /*#__PURE__*/
    function () {
      function InitEditableRow(dt, editableRow) {
        _classCallCheck(this, InitEditableRow);

        this.dt = dt;
        this.editableRow = editableRow;
      }

      _createClass(InitEditableRow, [{
        key: "onClick",
        value: function onClick(event) {
          this.dt.initRowEdit(this.editableRow.data);
          event.preventDefault();
        }
      }]);

      return InitEditableRow;
    }();

    InitEditableRow.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: EditableRow
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], InitEditableRow.prototype, "onClick", null);

    InitEditableRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pInitEditableRow]'
    })], InitEditableRow);

    var SaveEditableRow =
    /*#__PURE__*/
    function () {
      function SaveEditableRow(dt, editableRow) {
        _classCallCheck(this, SaveEditableRow);

        this.dt = dt;
        this.editableRow = editableRow;
      }

      _createClass(SaveEditableRow, [{
        key: "onClick",
        value: function onClick(event) {
          this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);
          event.preventDefault();
        }
      }]);

      return SaveEditableRow;
    }();

    SaveEditableRow.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: EditableRow
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], SaveEditableRow.prototype, "onClick", null);

    SaveEditableRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pSaveEditableRow]'
    })], SaveEditableRow);

    var CancelEditableRow =
    /*#__PURE__*/
    function () {
      function CancelEditableRow(dt, editableRow) {
        _classCallCheck(this, CancelEditableRow);

        this.dt = dt;
        this.editableRow = editableRow;
      }

      _createClass(CancelEditableRow, [{
        key: "onClick",
        value: function onClick(event) {
          this.dt.cancelRowEdit(this.editableRow.data);
          event.preventDefault();
        }
      }]);

      return CancelEditableRow;
    }();

    CancelEditableRow.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: EditableRow
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], CancelEditableRow.prototype, "onClick", null);

    CancelEditableRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pCancelEditableRow]'
    })], CancelEditableRow);

    var CellEditor =
    /*#__PURE__*/
    function () {
      function CellEditor(dt, editableColumn, editableRow) {
        _classCallCheck(this, CellEditor);

        this.dt = dt;
        this.editableColumn = editableColumn;
        this.editableRow = editableRow;
      }

      _createClass(CellEditor, [{
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this93 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'input':
                _this93.inputTemplate = item.template;
                break;

              case 'output':
                _this93.outputTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "editing",
        get: function get() {
          return this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement || this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data);
        }
      }]);

      return CellEditor;
    }();

    CellEditor.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: EditableColumn,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
        }]
      }, {
        type: EditableRow,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
        }]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["PrimeTemplate"])], CellEditor.prototype, "templates", void 0);

    CellEditor = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-cellEditor',
      template: "\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    "
    }), __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])()), __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])())], CellEditor);

    var TableRadioButton =
    /*#__PURE__*/
    function () {
      function TableRadioButton(dt, tableService) {
        var _this94 = this;

        _classCallCheck(this, TableRadioButton);

        this.dt = dt;
        this.tableService = tableService;
        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {
          _this94.checked = _this94.dt.isSelected(_this94.value);
        });
      }

      _createClass(TableRadioButton, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.checked = this.dt.isSelected(this.value);
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (!this.disabled) {
            this.dt.toggleRowWithRadio({
              originalEvent: event,
              rowIndex: this.index
            }, this.value);
          }

          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].clearSelection();
        }
      }, {
        key: "onFocus",
        value: function onFocus() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "onBlur",
        value: function onBlur() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return TableRadioButton;
    }();

    TableRadioButton.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: TableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableRadioButton.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableRadioButton.prototype, "value", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableRadioButton.prototype, "index", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableRadioButton.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableRadioButton.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableRadioButton.prototype, "ariaLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('box')], TableRadioButton.prototype, "boxViewChild", void 0);

    TableRadioButton = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-tableRadioButton',
      template: "\n        <div class=\"ui-radiobutton ui-widget\" (click)=\"onClick($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'ui-radiobutton-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-radiobutton-icon ui-clickable\" [ngClass]=\"{'pi pi-circle-on':checked}\"></span>\n            </div>\n        </div>\n    "
    })], TableRadioButton);

    var TableCheckbox =
    /*#__PURE__*/
    function () {
      function TableCheckbox(dt, tableService) {
        var _this95 = this;

        _classCallCheck(this, TableCheckbox);

        this.dt = dt;
        this.tableService = tableService;
        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {
          _this95.checked = _this95.dt.isSelected(_this95.value);
        });
      }

      _createClass(TableCheckbox, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.checked = this.dt.isSelected(this.value);
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (!this.disabled) {
            this.dt.toggleRowWithCheckbox({
              originalEvent: event,
              rowIndex: this.index
            }, this.value);
          }

          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].clearSelection();
        }
      }, {
        key: "onFocus",
        value: function onFocus() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "onBlur",
        value: function onBlur() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return TableCheckbox;
    }();

    TableCheckbox.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: TableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableCheckbox.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableCheckbox.prototype, "value", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableCheckbox.prototype, "index", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableCheckbox.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableCheckbox.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableCheckbox.prototype, "required", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableCheckbox.prototype, "ariaLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('box')], TableCheckbox.prototype, "boxViewChild", void 0);

    TableCheckbox = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-tableCheckbox',
      template: "\n        <div class=\"ui-chkbox ui-widget\" (click)=\"onClick($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'ui-chkbox-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    "
    })], TableCheckbox);

    var TableHeaderCheckbox =
    /*#__PURE__*/
    function () {
      function TableHeaderCheckbox(dt, tableService) {
        var _this96 = this;

        _classCallCheck(this, TableHeaderCheckbox);

        this.dt = dt;
        this.tableService = tableService;
        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(function () {
          _this96.checked = _this96.updateCheckedState();
        });
        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(function () {
          _this96.checked = _this96.updateCheckedState();
        });
      }

      _createClass(TableHeaderCheckbox, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.checked = this.updateCheckedState();
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (!this.disabled) {
            if (this.dt.value && this.dt.value.length > 0) {
              this.dt.toggleRowsWithCheckbox(event, !this.checked);
            }
          }

          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].clearSelection();
        }
      }, {
        key: "onFocus",
        value: function onFocus() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "onBlur",
        value: function onBlur() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "isDisabled",
        value: function isDisabled() {
          return this.disabled || !this.dt.value || !this.dt.value.length;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.selectionChangeSubscription) {
            this.selectionChangeSubscription.unsubscribe();
          }

          if (this.valueChangeSubscription) {
            this.valueChangeSubscription.unsubscribe();
          }
        }
      }, {
        key: "updateCheckedState",
        value: function updateCheckedState() {
          if (this.dt.filteredValue) {
            var val = this.dt.filteredValue;
            return val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked();
          } else {
            var _val = this.dt.value;
            return _val && _val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === _val.length;
          }
        }
      }, {
        key: "isAllFilteredValuesChecked",
        value: function isAllFilteredValuesChecked() {
          if (!this.dt.filteredValue) {
            return false;
          } else {
            var _iterator13 = _createForOfIteratorHelper(this.dt.filteredValue),
                _step13;

            try {
              for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
                var rowData = _step13.value;

                if (!this.dt.isSelected(rowData)) {
                  return false;
                }
              }
            } catch (err) {
              _iterator13.e(err);
            } finally {
              _iterator13.f();
            }

            return true;
          }
        }
      }]);

      return TableHeaderCheckbox;
    }();

    TableHeaderCheckbox.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: TableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('box')], TableHeaderCheckbox.prototype, "boxViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableHeaderCheckbox.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableHeaderCheckbox.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableHeaderCheckbox.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TableHeaderCheckbox.prototype, "ariaLabel", void 0);

    TableHeaderCheckbox = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-tableHeaderCheckbox',
      template: "\n        <div class=\"ui-chkbox ui-widget\" (click)=\"onClick($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'ui-chkbox-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    "
    })], TableHeaderCheckbox);

    var ReorderableRowHandle =
    /*#__PURE__*/
    function () {
      function ReorderableRowHandle(el) {
        _classCallCheck(this, ReorderableRowHandle);

        this.el = el;
      }

      _createClass(ReorderableRowHandle, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.el.nativeElement, 'ui-table-reorderablerow-handle');
        }
      }]);

      return ReorderableRowHandle;
    }();

    ReorderableRowHandle.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pReorderableRowHandle")], ReorderableRowHandle.prototype, "index", void 0);

    ReorderableRowHandle = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pReorderableRowHandle]'
    })], ReorderableRowHandle);

    var ReorderableRow =
    /*#__PURE__*/
    function () {
      function ReorderableRow(dt, el, zone) {
        _classCallCheck(this, ReorderableRow);

        this.dt = dt;
        this.el = el;
        this.zone = zone;
      }

      _createClass(ReorderableRow, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (this.isEnabled()) {
            this.el.nativeElement.droppable = true;
            this.bindEvents();
          }
        }
      }, {
        key: "bindEvents",
        value: function bindEvents() {
          var _this97 = this;

          this.zone.runOutsideAngular(function () {
            _this97.mouseDownListener = _this97.onMouseDown.bind(_this97);

            _this97.el.nativeElement.addEventListener('mousedown', _this97.mouseDownListener);

            _this97.dragStartListener = _this97.onDragStart.bind(_this97);

            _this97.el.nativeElement.addEventListener('dragstart', _this97.dragStartListener);

            _this97.dragEndListener = _this97.onDragEnd.bind(_this97);

            _this97.el.nativeElement.addEventListener('dragend', _this97.dragEndListener);

            _this97.dragOverListener = _this97.onDragOver.bind(_this97);

            _this97.el.nativeElement.addEventListener('dragover', _this97.dragOverListener);

            _this97.dragLeaveListener = _this97.onDragLeave.bind(_this97);

            _this97.el.nativeElement.addEventListener('dragleave', _this97.dragLeaveListener);
          });
        }
      }, {
        key: "unbindEvents",
        value: function unbindEvents() {
          if (this.mouseDownListener) {
            document.removeEventListener('mousedown', this.mouseDownListener);
            this.mouseDownListener = null;
          }

          if (this.dragStartListener) {
            document.removeEventListener('dragstart', this.dragStartListener);
            this.dragStartListener = null;
          }

          if (this.dragEndListener) {
            document.removeEventListener('dragend', this.dragEndListener);
            this.dragEndListener = null;
          }

          if (this.dragOverListener) {
            document.removeEventListener('dragover', this.dragOverListener);
            this.dragOverListener = null;
          }

          if (this.dragLeaveListener) {
            document.removeEventListener('dragleave', this.dragLeaveListener);
            this.dragLeaveListener = null;
          }
        }
      }, {
        key: "onMouseDown",
        value: function onMouseDown(event) {
          if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-table-reorderablerow-handle')) this.el.nativeElement.draggable = true;else this.el.nativeElement.draggable = false;
        }
      }, {
        key: "onDragStart",
        value: function onDragStart(event) {
          this.dt.onRowDragStart(event, this.index);
        }
      }, {
        key: "onDragEnd",
        value: function onDragEnd(event) {
          this.dt.onRowDragEnd(event);
          this.el.nativeElement.draggable = false;
        }
      }, {
        key: "onDragOver",
        value: function onDragOver(event) {
          this.dt.onRowDragOver(event, this.index, this.el.nativeElement);
          event.preventDefault();
        }
      }, {
        key: "onDragLeave",
        value: function onDragLeave(event) {
          this.dt.onRowDragLeave(event, this.el.nativeElement);
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.pReorderableRowDisabled !== true;
        }
      }, {
        key: "onDrop",
        value: function onDrop(event) {
          if (this.isEnabled() && this.dt.rowDragging) {
            this.dt.onRowDrop(event, this.el.nativeElement);
          }

          event.preventDefault();
        }
      }]);

      return ReorderableRow;
    }();

    ReorderableRow.ctorParameters = function () {
      return [{
        type: Table
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pReorderableRow")], ReorderableRow.prototype, "index", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ReorderableRow.prototype, "pReorderableRowDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('drop', ['$event'])], ReorderableRow.prototype, "onDrop", null);

    ReorderableRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pReorderableRow]'
    })], ReorderableRow);

    var TableModule = function TableModule() {
      _classCallCheck(this, TableModule);
    };

    TableModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], primeng_paginator__WEBPACK_IMPORTED_MODULE_3__["PaginatorModule"]],
      exports: [Table, primeng_api__WEBPACK_IMPORTED_MODULE_2__["SharedModule"], SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow],
      declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow]
    })], TableModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-table.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-tooltip.js":
  /*!**********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-tooltip.js ***!
    \**********************************************************/

  /*! exports provided: Tooltip, TooltipModule */

  /***/
  function node_modulesPrimengFesm2015PrimengTooltipJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Tooltip", function () {
      return Tooltip;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TooltipModule", function () {
      return TooltipModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var Tooltip =
    /*#__PURE__*/
    function () {
      function Tooltip(el, zone) {
        _classCallCheck(this, Tooltip);

        this.el = el;
        this.zone = zone;
        this.tooltipPosition = 'right';
        this.tooltipEvent = 'hover';
        this.appendTo = 'body';
        this.tooltipZIndex = 'auto';
        this.escape = true;
      }

      _createClass(Tooltip, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          var _this98 = this;

          this.zone.runOutsideAngular(function () {
            if (_this98.tooltipEvent === 'hover') {
              _this98.mouseEnterListener = _this98.onMouseEnter.bind(_this98);
              _this98.mouseLeaveListener = _this98.onMouseLeave.bind(_this98);
              _this98.clickListener = _this98.onClick.bind(_this98);

              _this98.el.nativeElement.addEventListener('mouseenter', _this98.mouseEnterListener);

              _this98.el.nativeElement.addEventListener('mouseleave', _this98.mouseLeaveListener);

              _this98.el.nativeElement.addEventListener('click', _this98.clickListener);
            } else if (_this98.tooltipEvent === 'focus') {
              _this98.focusListener = _this98.onFocus.bind(_this98);
              _this98.blurListener = _this98.onBlur.bind(_this98);

              _this98.el.nativeElement.addEventListener('focus', _this98.focusListener);

              _this98.el.nativeElement.addEventListener('blur', _this98.blurListener);
            }
          });
        }
      }, {
        key: "onMouseEnter",
        value: function onMouseEnter(e) {
          if (!this.container && !this.showTimeout) {
            this.activate();
          }
        }
      }, {
        key: "onMouseLeave",
        value: function onMouseLeave(e) {
          this.deactivate();
        }
      }, {
        key: "onFocus",
        value: function onFocus(e) {
          this.activate();
        }
      }, {
        key: "onBlur",
        value: function onBlur(e) {
          this.deactivate();
        }
      }, {
        key: "onClick",
        value: function onClick(e) {
          this.deactivate();
        }
      }, {
        key: "activate",
        value: function activate() {
          var _this99 = this;

          this.active = true;
          this.clearHideTimeout();
          if (this.showDelay) this.showTimeout = setTimeout(function () {
            _this99.show();
          }, this.showDelay);else this.show();

          if (this.life) {
            var duration = this.showDelay ? this.life + this.showDelay : this.life;
            this.hideTimeout = setTimeout(function () {
              _this99.hide();
            }, duration);
          }
        }
      }, {
        key: "deactivate",
        value: function deactivate() {
          var _this100 = this;

          this.active = false;
          this.clearShowTimeout();

          if (this.hideDelay) {
            this.clearHideTimeout(); //life timeout

            this.hideTimeout = setTimeout(function () {
              _this100.hide();
            }, this.hideDelay);
          } else {
            this.hide();
          }
        }
      }, {
        key: "create",
        value: function create() {
          this.container = document.createElement('div');
          var tooltipArrow = document.createElement('div');
          tooltipArrow.className = 'ui-tooltip-arrow';
          this.container.appendChild(tooltipArrow);
          this.tooltipText = document.createElement('div');
          this.tooltipText.className = 'ui-tooltip-text ui-shadow ui-corner-all';
          this.updateText();

          if (this.positionStyle) {
            this.container.style.position = this.positionStyle;
          }

          this.container.appendChild(this.tooltipText);
          if (this.appendTo === 'body') document.body.appendChild(this.container);else if (this.appendTo === 'target') primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].appendChild(this.container, this.el.nativeElement);else primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].appendChild(this.container, this.appendTo);
          this.container.style.display = 'inline-block';
        }
      }, {
        key: "show",
        value: function show() {
          if (!this.text || this.disabled) {
            return;
          }

          this.create();
          this.align();
          primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].fadeIn(this.container, 250);
          if (this.tooltipZIndex === 'auto') this.container.style.zIndex = ++primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].zindex;else this.container.style.zIndex = this.tooltipZIndex;
          this.bindDocumentResizeListener();
        }
      }, {
        key: "hide",
        value: function hide() {
          this.remove();
        }
      }, {
        key: "updateText",
        value: function updateText() {
          if (this.escape) {
            this.tooltipText.innerHTML = '';
            this.tooltipText.appendChild(document.createTextNode(this._text));
          } else {
            this.tooltipText.innerHTML = this._text;
          }
        }
      }, {
        key: "align",
        value: function align() {
          var position = this.tooltipPosition;

          switch (position) {
            case 'top':
              this.alignTop();

              if (this.isOutOfBounds()) {
                this.alignBottom();

                if (this.isOutOfBounds()) {
                  this.alignRight();

                  if (this.isOutOfBounds()) {
                    this.alignLeft();
                  }
                }
              }

              break;

            case 'bottom':
              this.alignBottom();

              if (this.isOutOfBounds()) {
                this.alignTop();

                if (this.isOutOfBounds()) {
                  this.alignRight();

                  if (this.isOutOfBounds()) {
                    this.alignLeft();
                  }
                }
              }

              break;

            case 'left':
              this.alignLeft();

              if (this.isOutOfBounds()) {
                this.alignRight();

                if (this.isOutOfBounds()) {
                  this.alignTop();

                  if (this.isOutOfBounds()) {
                    this.alignBottom();
                  }
                }
              }

              break;

            case 'right':
              this.alignRight();

              if (this.isOutOfBounds()) {
                this.alignLeft();

                if (this.isOutOfBounds()) {
                  this.alignTop();

                  if (this.isOutOfBounds()) {
                    this.alignBottom();
                  }
                }
              }

              break;
          }
        }
      }, {
        key: "getHostOffset",
        value: function getHostOffset() {
          if (this.appendTo === 'body' || this.appendTo === 'target') {
            var offset = this.el.nativeElement.getBoundingClientRect();
            var targetLeft = offset.left + primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getWindowScrollLeft();
            var targetTop = offset.top + primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getWindowScrollTop();
            return {
              left: targetLeft,
              top: targetTop
            };
          } else {
            return {
              left: 0,
              top: 0
            };
          }
        }
      }, {
        key: "alignRight",
        value: function alignRight() {
          this.preAlign('right');
          var hostOffset = this.getHostOffset();
          var left = hostOffset.left + primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterWidth(this.el.nativeElement);
          var top = hostOffset.top + (primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterHeight(this.el.nativeElement) - primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterHeight(this.container)) / 2;
          this.container.style.left = left + 'px';
          this.container.style.top = top + 'px';
        }
      }, {
        key: "alignLeft",
        value: function alignLeft() {
          this.preAlign('left');
          var hostOffset = this.getHostOffset();
          var left = hostOffset.left - primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterWidth(this.container);
          var top = hostOffset.top + (primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterHeight(this.el.nativeElement) - primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterHeight(this.container)) / 2;
          this.container.style.left = left + 'px';
          this.container.style.top = top + 'px';
        }
      }, {
        key: "alignTop",
        value: function alignTop() {
          this.preAlign('top');
          var hostOffset = this.getHostOffset();
          var left = hostOffset.left + (primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterWidth(this.el.nativeElement) - primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterWidth(this.container)) / 2;
          var top = hostOffset.top - primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterHeight(this.container);
          this.container.style.left = left + 'px';
          this.container.style.top = top + 'px';
        }
      }, {
        key: "alignBottom",
        value: function alignBottom() {
          this.preAlign('bottom');
          var hostOffset = this.getHostOffset();
          var left = hostOffset.left + (primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterWidth(this.el.nativeElement) - primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterWidth(this.container)) / 2;
          var top = hostOffset.top + primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterHeight(this.el.nativeElement);
          this.container.style.left = left + 'px';
          this.container.style.top = top + 'px';
        }
      }, {
        key: "preAlign",
        value: function preAlign(position) {
          this.container.style.left = -999 + 'px';
          this.container.style.top = -999 + 'px';
          var defaultClassName = 'ui-tooltip ui-widget ui-tooltip-' + position;
          this.container.className = this.tooltipStyleClass ? defaultClassName + ' ' + this.tooltipStyleClass : defaultClassName;
        }
      }, {
        key: "isOutOfBounds",
        value: function isOutOfBounds() {
          var offset = this.container.getBoundingClientRect();
          var targetTop = offset.top;
          var targetLeft = offset.left;
          var width = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterWidth(this.container);
          var height = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterHeight(this.container);
          var viewport = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getViewport();
          return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;
        }
      }, {
        key: "onWindowResize",
        value: function onWindowResize(e) {
          this.hide();
        }
      }, {
        key: "bindDocumentResizeListener",
        value: function bindDocumentResizeListener() {
          var _this101 = this;

          this.zone.runOutsideAngular(function () {
            _this101.resizeListener = _this101.onWindowResize.bind(_this101);
            window.addEventListener('resize', _this101.resizeListener);
          });
        }
      }, {
        key: "unbindDocumentResizeListener",
        value: function unbindDocumentResizeListener() {
          if (this.resizeListener) {
            window.removeEventListener('resize', this.resizeListener);
            this.resizeListener = null;
          }
        }
      }, {
        key: "unbindEvents",
        value: function unbindEvents() {
          if (this.tooltipEvent === 'hover') {
            this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);
            this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);
            this.el.nativeElement.removeEventListener('click', this.clickListener);
          } else if (this.tooltipEvent === 'focus') {
            this.el.nativeElement.removeEventListener('focus', this.focusListener);
            this.el.nativeElement.removeEventListener('blur', this.blurListener);
          }

          this.unbindDocumentResizeListener();
        }
      }, {
        key: "remove",
        value: function remove() {
          if (this.container && this.container.parentElement) {
            if (this.appendTo === 'body') document.body.removeChild(this.container);else if (this.appendTo === 'target') this.el.nativeElement.removeChild(this.container);else primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].removeChild(this.container, this.appendTo);
          }

          this.unbindDocumentResizeListener();
          this.clearTimeouts();
          this.container = null;
        }
      }, {
        key: "clearShowTimeout",
        value: function clearShowTimeout() {
          if (this.showTimeout) {
            clearTimeout(this.showTimeout);
            this.showTimeout = null;
          }
        }
      }, {
        key: "clearHideTimeout",
        value: function clearHideTimeout() {
          if (this.hideTimeout) {
            clearTimeout(this.hideTimeout);
            this.hideTimeout = null;
          }
        }
      }, {
        key: "clearTimeouts",
        value: function clearTimeouts() {
          this.clearShowTimeout();
          this.clearHideTimeout();
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unbindEvents();
          this.remove();
        }
      }, {
        key: "disabled",
        get: function get() {
          return this._disabled;
        },
        set: function set(val) {
          this._disabled = val;
          this.deactivate();
        }
      }, {
        key: "text",
        get: function get() {
          return this._text;
        },
        set: function set(text) {
          this._text = text;

          if (this.active) {
            if (this._text) {
              if (this.container && this.container.offsetParent) {
                this.updateText();
                this.align();
              } else {
                this.show();
              }
            } else {
              this.hide();
            }
          }
        }
      }]);

      return Tooltip;
    }();

    Tooltip.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "tooltipPosition", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "tooltipEvent", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "positionStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "tooltipStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "tooltipZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "escape", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "showDelay", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "hideDelay", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Tooltip.prototype, "life", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("tooltipDisabled")], Tooltip.prototype, "disabled", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('pTooltip')], Tooltip.prototype, "text", null);

    Tooltip = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[pTooltip]'
    })], Tooltip);

    var TooltipModule = function TooltipModule() {
      _classCallCheck(this, TooltipModule);
    };

    TooltipModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [Tooltip],
      declarations: [Tooltip]
    })], TooltipModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-tooltip.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-utils.js":
  /*!********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-utils.js ***!
    \********************************************************/

  /*! exports provided: FilterUtils, ObjectUtils, UniqueComponentId, lastId */

  /***/
  function node_modulesPrimengFesm2015PrimengUtilsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FilterUtils", function () {
      return FilterUtils;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ObjectUtils", function () {
      return ObjectUtils;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UniqueComponentId", function () {
      return UniqueComponentId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "lastId", function () {
      return lastId;
    });

    var ObjectUtils =
    /*#__PURE__*/
    function () {
      function ObjectUtils() {
        _classCallCheck(this, ObjectUtils);
      }

      _createClass(ObjectUtils, null, [{
        key: "equals",
        value: function equals(obj1, obj2, field) {
          if (field) return this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field);else return this.equalsByValue(obj1, obj2);
        }
      }, {
        key: "equalsByValue",
        value: function equalsByValue(obj1, obj2) {
          if (obj1 === obj2) return true;

          if (obj1 && obj2 && typeof obj1 == 'object' && typeof obj2 == 'object') {
            var arrA = Array.isArray(obj1),
                arrB = Array.isArray(obj2),
                i,
                length,
                key;

            if (arrA && arrB) {
              length = obj1.length;
              if (length != obj2.length) return false;

              for (i = length; i-- !== 0;) {
                if (!this.equalsByValue(obj1[i], obj2[i])) return false;
              }

              return true;
            }

            if (arrA != arrB) return false;
            var dateA = obj1 instanceof Date,
                dateB = obj2 instanceof Date;
            if (dateA != dateB) return false;
            if (dateA && dateB) return obj1.getTime() == obj2.getTime();
            var regexpA = obj1 instanceof RegExp,
                regexpB = obj2 instanceof RegExp;
            if (regexpA != regexpB) return false;
            if (regexpA && regexpB) return obj1.toString() == obj2.toString();
            var keys = Object.keys(obj1);
            length = keys.length;
            if (length !== Object.keys(obj2).length) return false;

            for (i = length; i-- !== 0;) {
              if (!Object.prototype.hasOwnProperty.call(obj2, keys[i])) return false;
            }

            for (i = length; i-- !== 0;) {
              key = keys[i];
              if (!this.equalsByValue(obj1[key], obj2[key])) return false;
            }

            return true;
          }

          return obj1 !== obj1 && obj2 !== obj2;
        }
      }, {
        key: "resolveFieldData",
        value: function resolveFieldData(data, field) {
          if (data && field) {
            if (this.isFunction(field)) {
              return field(data);
            } else if (field.indexOf('.') == -1) {
              return data[field];
            } else {
              var fields = field.split('.');
              var value = data;

              for (var i = 0, len = fields.length; i < len; ++i) {
                if (value == null) {
                  return null;
                }

                value = value[fields[i]];
              }

              return value;
            }
          } else {
            return null;
          }
        }
      }, {
        key: "isFunction",
        value: function isFunction(obj) {
          return !!(obj && obj.constructor && obj.call && obj.apply);
        }
      }, {
        key: "reorderArray",
        value: function reorderArray(value, from, to) {
          var target;

          if (value && from !== to) {
            if (to >= value.length) {
              to %= value.length;
              from %= value.length;
            }

            value.splice(to, 0, value.splice(from, 1)[0]);
          }
        }
      }, {
        key: "generateSelectItems",
        value: function generateSelectItems(val, field) {
          var selectItems;

          if (val && val.length) {
            selectItems = [];

            var _iterator14 = _createForOfIteratorHelper(val),
                _step14;

            try {
              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                var item = _step14.value;
                selectItems.push({
                  label: this.resolveFieldData(item, field),
                  value: item
                });
              }
            } catch (err) {
              _iterator14.e(err);
            } finally {
              _iterator14.f();
            }
          }

          return selectItems;
        }
      }, {
        key: "insertIntoOrderedArray",
        value: function insertIntoOrderedArray(item, index, arr, sourceArr) {
          if (arr.length > 0) {
            var injected = false;

            for (var i = 0; i < arr.length; i++) {
              var currentItemIndex = this.findIndexInList(arr[i], sourceArr);

              if (currentItemIndex > index) {
                arr.splice(i, 0, item);
                injected = true;
                break;
              }
            }

            if (!injected) {
              arr.push(item);
            }
          } else {
            arr.push(item);
          }
        }
      }, {
        key: "findIndexInList",
        value: function findIndexInList(item, list) {
          var index = -1;

          if (list) {
            for (var i = 0; i < list.length; i++) {
              if (list[i] == item) {
                index = i;
                break;
              }
            }
          }

          return index;
        }
      }, {
        key: "removeAccents",
        value: function removeAccents(str) {
          if (str && str.search(/[\xC0-\xFF]/g) > -1) {
            str = str.replace(/[\xC0-\xC5]/g, "A").replace(/[\xC6]/g, "AE").replace(/[\xC7]/g, "C").replace(/[\xC8-\xCB]/g, "E").replace(/[\xCC-\xCF]/g, "I").replace(/[\xD0]/g, "D").replace(/[\xD1]/g, "N").replace(/[\xD2-\xD6\xD8]/g, "O").replace(/[\xD9-\xDC]/g, "U").replace(/[\xDD]/g, "Y").replace(/[\xDE]/g, "P").replace(/[\xE0-\xE5]/g, "a").replace(/[\xE6]/g, "ae").replace(/[\xE7]/g, "c").replace(/[\xE8-\xEB]/g, "e").replace(/[\xEC-\xEF]/g, "i").replace(/[\xF1]/g, "n").replace(/[\xF2-\xF6\xF8]/g, "o").replace(/[\xF9-\xFC]/g, "u").replace(/[\xFE]/g, "p").replace(/[\xFD\xFF]/g, "y");
          }

          return str;
        }
      }]);

      return ObjectUtils;
    }();

    var FilterUtils =
    /*#__PURE__*/
    function () {
      function FilterUtils() {
        _classCallCheck(this, FilterUtils);
      }

      _createClass(FilterUtils, null, [{
        key: "filter",
        value: function filter(value, fields, filterValue, filterMatchMode) {
          var filteredItems = [];
          var filterText = ObjectUtils.removeAccents(filterValue).toLowerCase();

          if (value) {
            var _iterator15 = _createForOfIteratorHelper(value),
                _step15;

            try {
              for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                var item = _step15.value;

                var _iterator16 = _createForOfIteratorHelper(fields),
                    _step16;

                try {
                  for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
                    var field = _step16.value;
                    var fieldValue = ObjectUtils.removeAccents(String(ObjectUtils.resolveFieldData(item, field))).toLowerCase();

                    if (FilterUtils[filterMatchMode](fieldValue, filterText)) {
                      filteredItems.push(item);
                      break;
                    }
                  }
                } catch (err) {
                  _iterator16.e(err);
                } finally {
                  _iterator16.f();
                }
              }
            } catch (err) {
              _iterator15.e(err);
            } finally {
              _iterator15.f();
            }
          }

          return filteredItems;
        }
      }, {
        key: "startsWith",
        value: function startsWith(value, filter) {
          if (filter === undefined || filter === null || filter.trim() === '') {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          var filterValue = ObjectUtils.removeAccents(filter.toString()).toLowerCase();
          var stringValue = ObjectUtils.removeAccents(value.toString()).toLowerCase();
          return stringValue.slice(0, filterValue.length) === filterValue;
        }
      }, {
        key: "contains",
        value: function contains(value, filter) {
          if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          var filterValue = ObjectUtils.removeAccents(filter.toString()).toLowerCase();
          var stringValue = ObjectUtils.removeAccents(value.toString()).toLowerCase();
          return stringValue.indexOf(filterValue) !== -1;
        }
      }, {
        key: "endsWith",
        value: function endsWith(value, filter) {
          if (filter === undefined || filter === null || filter.trim() === '') {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          var filterValue = ObjectUtils.removeAccents(filter.toString()).toLowerCase();
          var stringValue = ObjectUtils.removeAccents(value.toString()).toLowerCase();
          return stringValue.indexOf(filterValue, stringValue.length - filterValue.length) !== -1;
        }
      }, {
        key: "equals",
        value: function equals(value, filter) {
          if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          if (value.getTime && filter.getTime) return value.getTime() === filter.getTime();else return ObjectUtils.removeAccents(value.toString()).toLowerCase() == ObjectUtils.removeAccents(filter.toString()).toLowerCase();
        }
      }, {
        key: "notEquals",
        value: function notEquals(value, filter) {
          if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {
            return false;
          }

          if (value === undefined || value === null) {
            return true;
          }

          if (value.getTime && filter.getTime) return value.getTime() !== filter.getTime();else return ObjectUtils.removeAccents(value.toString()).toLowerCase() != ObjectUtils.removeAccents(filter.toString()).toLowerCase();
        }
      }, {
        key: "in",
        value: function _in(value, filter) {
          if (filter === undefined || filter === null || filter.length === 0) {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          for (var i = 0; i < filter.length; i++) {
            if (ObjectUtils.equals(value, filter[i])) {
              return true;
            }
          }

          return false;
        }
      }, {
        key: "lt",
        value: function lt(value, filter) {
          if (filter === undefined || filter === null) {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          if (value.getTime && filter.getTime) return value.getTime() < filter.getTime();else return value < filter;
        }
      }, {
        key: "lte",
        value: function lte(value, filter) {
          if (filter === undefined || filter === null) {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          if (value.getTime && filter.getTime) return value.getTime() <= filter.getTime();else return value <= filter;
        }
      }, {
        key: "gt",
        value: function gt(value, filter) {
          if (filter === undefined || filter === null) {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          if (value.getTime && filter.getTime) return value.getTime() > filter.getTime();else return value > filter;
        }
      }, {
        key: "gte",
        value: function gte(value, filter) {
          if (filter === undefined || filter === null) {
            return true;
          }

          if (value === undefined || value === null) {
            return false;
          }

          if (value.getTime && filter.getTime) return value.getTime() >= filter.getTime();else return value >= filter;
        }
      }]);

      return FilterUtils;
    }();

    var lastId = 0;

    function UniqueComponentId() {
      var prefix = 'pr_id_';
      lastId++;
      return "".concat(prefix).concat(lastId);
    }
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-utils.js.map

    /***/

  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-virtualscroller.js":
  /*!******************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-virtualscroller.js ***!
    \******************************************************************/

  /*! exports provided: VirtualScroller, VirtualScrollerModule */

  /***/
  function node_modulesPrimengFesm2015PrimengVirtualscrollerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "VirtualScroller", function () {
      return VirtualScroller;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "VirtualScrollerModule", function () {
      return VirtualScrollerModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/cdk/scrolling */
    "./node_modules/@angular/cdk/fesm2015/scrolling.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var VirtualScroller =
    /*#__PURE__*/
    function () {
      function VirtualScroller(el) {
        _classCallCheck(this, VirtualScroller);

        this.el = el;
        this.cache = true;
        this.first = 0;

        this.trackBy = function (index, item) {
          return item;
        };

        this.onLazyLoad = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this._totalRecords = 0;
        this.lazyValue = [];
        this.page = 0;
      }

      _createClass(VirtualScroller, [{
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this102 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'item':
                _this102.itemTemplate = item.template;
                break;

              case 'loadingItem':
                _this102.loadingItemTemplate = item.template;
                break;

              default:
                _this102.itemTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "onScrollIndexChange",
        value: function onScrollIndexChange(index) {
          var p = Math.floor(index / this.rows);

          if (p !== this.page) {
            this.page = p;
            this.first = this.page * this.rows;
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          }
        }
      }, {
        key: "createLazyLoadMetadata",
        value: function createLazyLoadMetadata() {
          return {
            first: this.first,
            rows: this.rows
          };
        }
      }, {
        key: "getBlockableElement",
        value: function getBlockableElement() {
          return this.el.nativeElement.children[0];
        }
      }, {
        key: "scrollTo",
        value: function scrollTo(index) {
          if (this.viewPortViewChild && this.viewPortViewChild['elementRef'] && this.viewPortViewChild['elementRef'].nativeElement) {
            this.viewPortViewChild['elementRef'].nativeElement.scrollTop = index * this.itemSize;
          }
        }
      }, {
        key: "totalRecords",
        get: function get() {
          return this._totalRecords;
        },
        set: function set(val) {
          this._totalRecords = val;
          this.lazyValue = Array.from({
            length: this._totalRecords
          });
          this.onLazyLoad.emit(this.createLazyLoadMetadata());
          this.first = 0;
          this.scrollTo(0);
        }
      }, {
        key: "value",
        get: function get() {
          return this.lazy ? this.lazyValue : this._value;
        },
        set: function set(val) {
          if (this.lazy) {
            if (val) {
              var arr = this.cache ? _toConsumableArray(this.lazyValue) : Array.from({
                length: this._totalRecords
              });

              for (var i = this.first, j = 0; i < this.first + this.rows; i++, j++) {
                arr[i] = val[j];
              }

              this.lazyValue = arr;
            }
          } else {
            this._value = val;
          }
        }
      }]);

      return VirtualScroller;
    }();

    VirtualScroller.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "itemSize", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "scrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "lazy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "cache", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "rows", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "first", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "trackBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["Header"])], VirtualScroller.prototype, "header", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["Footer"])], VirtualScroller.prototype, "footer", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["PrimeTemplate"])], VirtualScroller.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('viewport')], VirtualScroller.prototype, "viewPortViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], VirtualScroller.prototype, "onLazyLoad", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "totalRecords", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], VirtualScroller.prototype, "value", null);

    VirtualScroller = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-virtualScroller',
      template: "\n        <div [ngClass]=\"'ui-virtualscroller ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-virtualscroller-header ui-widget-header ui-corner-top\" *ngIf=\"header\">\n                <ng-content select=\"p-header\"></ng-content>\n            </div>\n            <div #content class=\"ui-virtualscroller-content ui-widget-content\">\n                <ul class=\"ui-virtualscroller-list\">\n                    <cdk-virtual-scroll-viewport #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" (scrolledIndexChange)=\"onScrollIndexChange($event)\">\n                        <ng-container *cdkVirtualFor=\"let item of value; trackBy: trackBy; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd; \">\n                            <li [ngStyle]=\"{'height': itemSize + 'px'}\">\n                                <ng-container *ngTemplateOutlet=\"item ? itemTemplate : loadingItemTemplate; context: {$implicit: item, index: i, count: c, first: f, last: l, even: e, odd: o}\"></ng-container>\n                            </li>\n                        </ng-container>\n                    </cdk-virtual-scroll-viewport>\n                </ul>\n            </div>\n            <div class=\"ui-virtualscroller-footer ui-widget-header ui-corner-bottom\" *ngIf=\"footer\">\n                <ng-content select=\"p-footer\"></ng-content>\n            </div>\n        </div>\n    ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], VirtualScroller);

    var VirtualScrollerModule = function VirtualScrollerModule() {
      _classCallCheck(this, VirtualScrollerModule);
    };

    VirtualScrollerModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_3__["ScrollingModule"]],
      exports: [VirtualScroller, primeng_api__WEBPACK_IMPORTED_MODULE_2__["SharedModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_3__["ScrollingModule"]],
      declarations: [VirtualScroller]
    })], VirtualScrollerModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-virtualscroller.js.map

    /***/
  },

  /***/
  "./src/app/pages/layout/component/breadcrumb/breadcrumb.component.css.shim.ngstyle.js":
  /*!********************************************************************************************!*\
    !*** ./src/app/pages/layout/component/breadcrumb/breadcrumb.component.css.shim.ngstyle.js ***!
    \********************************************************************************************/

  /*! exports provided: styles */

  /***/
  function srcAppPagesLayoutComponentBreadcrumbBreadcrumbComponentCssShimNgstyleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "styles", function () {
      return styles;
    });
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles = ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xheW91dC9jb21wb25lbnQvYnJlYWRjcnVtYi9icmVhZGNydW1iLmNvbXBvbmVudC5jc3MifQ== */"];
    /***/
  },

  /***/
  "./src/app/pages/layout/component/breadcrumb/breadcrumb.component.ngfactory.js":
  /*!*************************************************************************************!*\
    !*** ./src/app/pages/layout/component/breadcrumb/breadcrumb.component.ngfactory.js ***!
    \*************************************************************************************/

  /*! exports provided: RenderType_BreadcrumbComponent, View_BreadcrumbComponent_0, View_BreadcrumbComponent_Host_0, BreadcrumbComponentNgFactory */

  /***/
  function srcAppPagesLayoutComponentBreadcrumbBreadcrumbComponentNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_BreadcrumbComponent", function () {
      return RenderType_BreadcrumbComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_BreadcrumbComponent_0", function () {
      return View_BreadcrumbComponent_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_BreadcrumbComponent_Host_0", function () {
      return View_BreadcrumbComponent_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BreadcrumbComponentNgFactory", function () {
      return BreadcrumbComponentNgFactory;
    });
    /* harmony import */


    var _breadcrumb_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./breadcrumb.component.css.shim.ngstyle */
    "./src/app/pages/layout/component/breadcrumb/breadcrumb.component.css.shim.ngstyle.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _breadcrumb_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./breadcrumb.component */
    "./src/app/pages/layout/component/breadcrumb/breadcrumb.component.ts");
    /* harmony import */


    var _services_breadcrumb_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../../services/breadcrumb.service */
    "./src/services/breadcrumb.service.ts");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles_BreadcrumbComponent = [_breadcrumb_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__["styles"]];

    var RenderType_BreadcrumbComponent = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcrt"]({
      encapsulation: 0,
      styles: styles_BreadcrumbComponent,
      data: {}
    });

    function View_BreadcrumbComponent_2(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 2, "a", [], [[1, "target", 0], [8, "href", 4]], [[null, "click"]], function (_v, en, $event) {
        var ad = true;

        if ("click" === en) {
          var pd_0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 671744, null, 0, _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterLinkWithHref"], [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["LocationStrategy"]], {
        routerLink: [0, "routerLink"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](2, null, ["", ""]))], function (_ck, _v) {
        var currVal_2 = _v.parent.context.$implicit.routerLink;

        _ck(_v, 1, 0, currVal_2);
      }, function (_ck, _v) {
        var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 1).target;

        var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 1).href;

        _ck(_v, 0, 0, currVal_0, currVal_1);

        var currVal_3 = _v.parent.context.$implicit.label;

        _ck(_v, 2, 0, currVal_3);
      });
    }

    function View_BreadcrumbComponent_3(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 1, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](1, null, ["", ""]))], null, function (_ck, _v) {
        var currVal_0 = _v.parent.context.$implicit.label;

        _ck(_v, 1, 0, currVal_0);
      });
    }

    function View_BreadcrumbComponent_4(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 1, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["/"]))], null, null);
    }

    function View_BreadcrumbComponent_1(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 4, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵand"](16777216, null, null, 1, null, View_BreadcrumbComponent_2)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](2, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵand"](16777216, null, null, 1, null, View_BreadcrumbComponent_3)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](4, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵand"](16777216, null, null, 1, null, View_BreadcrumbComponent_4)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](6, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵand"](0, null, null, 0))], function (_ck, _v) {
        var currVal_0 = _v.context.$implicit.routerLink;

        _ck(_v, 2, 0, currVal_0);

        var currVal_1 = !_v.context.$implicit.routerLink;

        _ck(_v, 4, 0, currVal_1);

        var currVal_2 = !_v.context.last;

        _ck(_v, 6, 0, currVal_2);
      }, null);
    }

    function View_BreadcrumbComponent_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 11, "div", [["class", "route-bar"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](1, 0, null, null, 10, "div", [["class", "route-bar-breadcrumb"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](2, 0, null, null, 9, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](3, 0, null, null, 3, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](4, 0, null, null, 2, "a", [["routerLink", ""]], [[1, "target", 0], [8, "href", 4]], [[null, "click"]], function (_v, en, $event) {
        var ad = true;

        if ("click" === en) {
          var pd_0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 5).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](5, 671744, null, 0, _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterLinkWithHref"], [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["LocationStrategy"]], {
        routerLink: [0, "routerLink"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](6, 0, null, null, 0, "i", [["class", "fa fa-home"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](7, 0, null, null, 1, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["/"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](9, null, [" ", " "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵand"](16777216, null, null, 1, null, View_BreadcrumbComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](11, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgForOf"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"]], {
        ngForOf: [0, "ngForOf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_2 = "";

        _ck(_v, 5, 0, currVal_2);

        var currVal_4 = _co.items;

        _ck(_v, 11, 0, currVal_4);
      }, function (_ck, _v) {
        var _co = _v.component;

        var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 5).target;

        var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 5).href;

        _ck(_v, 4, 0, currVal_0, currVal_1);

        var currVal_3 = _co.items;

        _ck(_v, 9, 0, currVal_3);
      });
    }

    function View_BreadcrumbComponent_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 1, "app-breadcrumb", [], null, null, null, View_BreadcrumbComponent_0, RenderType_BreadcrumbComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 245760, null, 0, _breadcrumb_component__WEBPACK_IMPORTED_MODULE_4__["BreadcrumbComponent"], [_services_breadcrumb_service__WEBPACK_IMPORTED_MODULE_5__["BreadcrumbService"]], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
      }, null);
    }

    var BreadcrumbComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵccf"]("app-breadcrumb", _breadcrumb_component__WEBPACK_IMPORTED_MODULE_4__["BreadcrumbComponent"], View_BreadcrumbComponent_Host_0, {}, {}, []);
    /***/

  },

  /***/
  "./src/app/pages/layout/component/breadcrumb/breadcrumb.component.ts":
  /*!***************************************************************************!*\
    !*** ./src/app/pages/layout/component/breadcrumb/breadcrumb.component.ts ***!
    \***************************************************************************/

  /*! exports provided: BreadcrumbComponent */

  /***/
  function srcAppPagesLayoutComponentBreadcrumbBreadcrumbComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BreadcrumbComponent", function () {
      return BreadcrumbComponent;
    });

    var BreadcrumbComponent =
    /*#__PURE__*/
    function () {
      function BreadcrumbComponent(breadcrumbService) {
        var _this103 = this;

        _classCallCheck(this, BreadcrumbComponent);

        this.breadcrumbService = breadcrumbService;
        console.log('CONSULTA BREADCRUMB');
        console.log(breadcrumbService);
        console.log('DATA');
        this.subscription = breadcrumbService.itemsHandler.subscribe(function (response) {
          console.log('RESPUESTA BREADCRUMB');
          console.log(response);
          _this103.items = response;
        });
      }

      _createClass(BreadcrumbComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return BreadcrumbComponent;
    }();
    /***/

  },

  /***/
  "./src/app/pages/layout/component/footer/footer.component.css.shim.ngstyle.js":
  /*!************************************************************************************!*\
    !*** ./src/app/pages/layout/component/footer/footer.component.css.shim.ngstyle.js ***!
    \************************************************************************************/

  /*! exports provided: styles */

  /***/
  function srcAppPagesLayoutComponentFooterFooterComponentCssShimNgstyleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "styles", function () {
      return styles;
    });
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles = [".layout-footer[_ngcontent-%COMP%]{\n    bottom: 0;\n    position: relative;\n    left: 0;\n    width: 100%;\n    height: 100px;\n}\n.logo-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{\n    height: 60px !important;\n}\n@media only screen and (max-width: 40rem) {\n\n    .layout-footer[_ngcontent-%COMP%]{\n        bottom: 0;\n        position: relative;\n        left: 0;\n        width: 100%;\n        height: 100px;\n    }\n\n    .logo-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{\n        height: 60px !important;\n    }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbGF5b3V0L2NvbXBvbmVudC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxTQUFTO0lBQ1Qsa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxXQUFXO0lBQ1gsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksdUJBQXVCO0FBQzNCO0FBRUE7O0lBRUk7UUFDSSxTQUFTO1FBQ1Qsa0JBQWtCO1FBQ2xCLE9BQU87UUFDUCxXQUFXO1FBQ1gsYUFBYTtJQUNqQjs7SUFFQTtRQUNJLHVCQUF1QjtJQUMzQjtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbGF5b3V0L2NvbXBvbmVudC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGF5b3V0LWZvb3RlcntcbiAgICBib3R0b206IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDBweDtcbn1cbi5sb2dvLWNvbnRhaW5lciBpbWd7XG4gICAgaGVpZ2h0OiA2MHB4ICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDByZW0pIHtcblxuICAgIC5sYXlvdXQtZm9vdGVye1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgfVxuXG4gICAgLmxvZ28tY29udGFpbmVyIGltZ3tcbiAgICAgICAgaGVpZ2h0OiA2MHB4ICFpbXBvcnRhbnQ7XG4gICAgfVxufSJdfQ== */"];
    /***/
  },

  /***/
  "./src/app/pages/layout/component/footer/footer.component.ngfactory.js":
  /*!*****************************************************************************!*\
    !*** ./src/app/pages/layout/component/footer/footer.component.ngfactory.js ***!
    \*****************************************************************************/

  /*! exports provided: RenderType_FooterComponent, View_FooterComponent_0, View_FooterComponent_Host_0, FooterComponentNgFactory */

  /***/
  function srcAppPagesLayoutComponentFooterFooterComponentNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_FooterComponent", function () {
      return RenderType_FooterComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_FooterComponent_0", function () {
      return View_FooterComponent_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_FooterComponent_Host_0", function () {
      return View_FooterComponent_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FooterComponentNgFactory", function () {
      return FooterComponentNgFactory;
    });
    /* harmony import */


    var _footer_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./footer.component.css.shim.ngstyle */
    "./src/app/pages/layout/component/footer/footer.component.css.shim.ngstyle.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _footer_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./footer.component */
    "./src/app/pages/layout/component/footer/footer.component.ts");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles_FooterComponent = [_footer_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__["styles"]];

    var RenderType_FooterComponent = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcrt"]({
      encapsulation: 0,
      styles: styles_FooterComponent,
      data: {}
    });

    function View_FooterComponent_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 4, "div", [["class", "layout-footer"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](1, 0, null, null, 3, "div", [["class", "ui-g"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](2, 0, null, null, 2, "div", [["class", "ui-g-12 ui-md-12 ui-lg-12"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](3, 0, null, null, 1, "a", [["class", "logo-container"], ["href", "/"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](4, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "../../../assets/images/logo_footer.png"]], null, null, null, null, null))], null, null);
    }

    function View_FooterComponent_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 1, "app-footer", [], null, null, null, View_FooterComponent_0, RenderType_FooterComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 114688, null, 0, _footer_component__WEBPACK_IMPORTED_MODULE_2__["FooterComponent"], [], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
      }, null);
    }

    var FooterComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵccf"]("app-footer", _footer_component__WEBPACK_IMPORTED_MODULE_2__["FooterComponent"], View_FooterComponent_Host_0, {}, {}, []);
    /***/

  },

  /***/
  "./src/app/pages/layout/component/footer/footer.component.ts":
  /*!*******************************************************************!*\
    !*** ./src/app/pages/layout/component/footer/footer.component.ts ***!
    \*******************************************************************/

  /*! exports provided: FooterComponent */

  /***/
  function srcAppPagesLayoutComponentFooterFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FooterComponent", function () {
      return FooterComponent;
    });

    var FooterComponent =
    /*#__PURE__*/
    function () {
      function FooterComponent() {
        _classCallCheck(this, FooterComponent);
      }

      _createClass(FooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return FooterComponent;
    }();
    /***/

  },

  /***/
  "./src/app/pages/layout/component/menu/app.menuitem.component.ngfactory.js":
  /*!*********************************************************************************!*\
    !*** ./src/app/pages/layout/component/menu/app.menuitem.component.ngfactory.js ***!
    \*********************************************************************************/

  /*! exports provided: RenderType_AppMenuitemComponent, View_AppMenuitemComponent_0, View_AppMenuitemComponent_Host_0, AppMenuitemComponentNgFactory */

  /***/
  function srcAppPagesLayoutComponentMenuAppMenuitemComponentNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_AppMenuitemComponent", function () {
      return RenderType_AppMenuitemComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_AppMenuitemComponent_0", function () {
      return View_AppMenuitemComponent_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_AppMenuitemComponent_Host_0", function () {
      return View_AppMenuitemComponent_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppMenuitemComponentNgFactory", function () {
      return AppMenuitemComponentNgFactory;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _app_menuitem_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./app.menuitem.component */
    "./src/app/pages/layout/component/menu/app.menuitem.component.ts");
    /* harmony import */


    var _layout_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../layout.component */
    "./src/app/pages/layout/layout.component.ts");
    /* harmony import */


    var _services_app_menu_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../../services/app.menu.service */
    "./src/services/app.menu.service.ts");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles_AppMenuitemComponent = [];

    var RenderType_AppMenuitemComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({
      encapsulation: 2,
      styles: styles_AppMenuitemComponent,
      data: {
        "animation": [{
          type: 7,
          name: "children",
          definitions: [{
            type: 0,
            name: "void",
            styles: {
              type: 6,
              styles: {
                height: "0px"
              },
              offset: null
            },
            options: undefined
          }, {
            type: 0,
            name: "hiddenAnimated",
            styles: {
              type: 6,
              styles: {
                height: "0px"
              },
              offset: null
            },
            options: undefined
          }, {
            type: 0,
            name: "visibleAnimated",
            styles: {
              type: 6,
              styles: {
                height: "*"
              },
              offset: null
            },
            options: undefined
          }, {
            type: 0,
            name: "visible",
            styles: {
              type: 6,
              styles: {
                height: "*",
                "z-index": 100
              },
              offset: null
            },
            options: undefined
          }, {
            type: 0,
            name: "hidden",
            styles: {
              type: 6,
              styles: {
                height: "0px",
                "z-index": "*"
              },
              offset: null
            },
            options: undefined
          }, {
            type: 1,
            expr: "visibleAnimated => hiddenAnimated",
            animation: {
              type: 4,
              styles: null,
              timings: "400ms cubic-bezier(0.86, 0, 0.07, 1)"
            },
            options: null
          }, {
            type: 1,
            expr: "hiddenAnimated => visibleAnimated",
            animation: {
              type: 4,
              styles: null,
              timings: "400ms cubic-bezier(0.86, 0, 0.07, 1)"
            },
            options: null
          }, {
            type: 1,
            expr: "void => visibleAnimated, visibleAnimated => void",
            animation: {
              type: 4,
              styles: null,
              timings: "400ms cubic-bezier(0.86, 0, 0.07, 1)"
            },
            options: null
          }],
          options: {}
        }]
      }
    });

    function View_AppMenuitemComponent_2(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 0, "i", [["class", "fa fa-fw fa-angle-down layout-menuitem-toggler"]], null, null, null, null, null))], null, null);
    }

    function View_AppMenuitemComponent_3(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "span", [["class", "menuitem-badge"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](1, null, ["", ""]))], null, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.item.badge;

        _ck(_v, 1, 0, currVal_0);
      });
    }

    function View_AppMenuitemComponent_1(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 8, "a", [], [[1, "href", 4], [1, "target", 0], [1, "tabindex", 0]], [[null, "click"], [null, "mouseenter"], [null, "keydown.enter"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.itemClick($event) !== false;
          ad = pd_0 && ad;
        }

        if ("mouseenter" === en) {
          var pd_1 = _co.onMouseEnter() !== false;
          ad = pd_1 && ad;
        }

        if ("keydown.enter" === en) {
          var pd_2 = _co.itemClick($event) !== false;
          ad = pd_2 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "i", [], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](4, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AppMenuitemComponent_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](6, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AppMenuitemComponent_3)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](8, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_3 = _co.item.icon;

        _ck(_v, 2, 0, currVal_3);

        var currVal_5 = _co.item.items;

        _ck(_v, 6, 0, currVal_5);

        var currVal_6 = _co.item.badge;

        _ck(_v, 8, 0, currVal_6);
      }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.item.url;
        var currVal_1 = _co.item.target;
        var currVal_2 = 0;

        _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2);

        var currVal_4 = _co.item.label;

        _ck(_v, 4, 0, currVal_4);
      });
    }

    function View_AppMenuitemComponent_5(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 0, "i", [["class", "fa fa-fw fa-angle-down layout-menuitem-toggler"]], null, null, null, null, null))], null, null);
    }

    function View_AppMenuitemComponent_6(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "span", [["class", "menuitem-badge"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](1, null, ["", ""]))], null, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.item.badge;

        _ck(_v, 1, 0, currVal_0);
      });
    }

    function View_AppMenuitemComponent_4(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 13, "a", [["routerLinkActive", "active-menuitem-routerlink"]], [[1, "target", 0], [1, "tabindex", 0], [1, "target", 0], [8, "href", 4]], [[null, "click"], [null, "mouseenter"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false;
          ad = pd_0 && ad;
        }

        if ("click" === en) {
          var pd_1 = _co.itemClick($event) !== false;
          ad = pd_1 && ad;
        }

        if ("mouseenter" === en) {
          var pd_2 = _co.onMouseEnter() !== false;
          ad = pd_2 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 671744, [[2, 4]], 0, _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterLinkWithHref"], [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["LocationStrategy"]], {
        routerLink: [0, "routerLink"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 1720320, null, 2, _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterLinkActive"], [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], [2, _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterLink"]], [2, _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterLinkWithHref"]]], {
        routerLinkActiveOptions: [0, "routerLinkActiveOptions"],
        routerLinkActive: [1, "routerLinkActive"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](603979776, 1, {
        links: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](603979776, 2, {
        linksWithHrefs: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](5, {
        exact: 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](6, 0, null, null, 1, "i", [], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](9, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AppMenuitemComponent_5)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](11, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AppMenuitemComponent_6)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](13, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_4 = _co.item.routerLink;

        _ck(_v, 1, 0, currVal_4);

        var currVal_5 = _ck(_v, 5, 0, true);

        var currVal_6 = "active-menuitem-routerlink";

        _ck(_v, 2, 0, currVal_5, currVal_6);

        var currVal_7 = _co.item.icon;

        _ck(_v, 7, 0, currVal_7);

        var currVal_9 = _co.item.items;

        _ck(_v, 11, 0, currVal_9);

        var currVal_10 = _co.item.badge;

        _ck(_v, 13, 0, currVal_10);
      }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.item.target;
        var currVal_1 = 0;

        var currVal_2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).target;

        var currVal_3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).href;

        _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3);

        var currVal_8 = _co.item.label;

        _ck(_v, 9, 0, currVal_8);
      });
    }

    function View_AppMenuitemComponent_8(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "li", [["app-menuitem", ""]], [[8, "className", 0], [2, "active-menuitem", null]], null, null, View_AppMenuitemComponent_0, RenderType_AppMenuitemComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 245760, null, 0, _app_menuitem_component__WEBPACK_IMPORTED_MODULE_3__["AppMenuitemComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_4__["LayoutComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], _services_app_menu_service__WEBPACK_IMPORTED_MODULE_5__["MenuService"]], {
        item: [0, "item"],
        index: [1, "index"],
        parentKey: [2, "parentKey"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_2 = _v.context.$implicit;
        var currVal_3 = _v.context.index;
        var currVal_4 = _co.key;

        _ck(_v, 1, 0, currVal_2, currVal_3, currVal_4);
      }, function (_ck, _v) {
        var currVal_0 = _v.context.$implicit.badgeClass;

        var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).active;

        _ck(_v, 0, 0, currVal_0, currVal_1);
      });
    }

    function View_AppMenuitemComponent_7(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, "ul", [], [[24, "@children", 0]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AppMenuitemComponent_8)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgForOf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"]], {
        ngForOf: [0, "ngForOf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_1 = _co.item.items;

        _ck(_v, 2, 0, currVal_1);
      }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = (_co.app.isSlim() || _co.app.isHorizontal()) && _co.root ? _co.active ? "visible" : "hidden" : _co.active ? "visibleAnimated" : "hiddenAnimated";

        _ck(_v, 0, 0, currVal_0);
      });
    }

    function View_AppMenuitemComponent_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 10, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AppMenuitemComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AppMenuitemComponent_4)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](4, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 3, "div", [["class", "layout-menu-tooltip"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](6, 0, null, null, 0, "div", [["class", "layout-menu-tooltip-arrow"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](7, 0, null, null, 1, "div", [["class", "layout-menu-tooltip-text"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](8, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_AppMenuitemComponent_7)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](10, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], {
        ngIf: [0, "ngIf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = !_co.item.routerLink || _co.item.items;

        _ck(_v, 2, 0, currVal_0);

        var currVal_1 = _co.item.routerLink && !_co.item.items;

        _ck(_v, 4, 0, currVal_1);

        var currVal_3 = _co.item.items && _co.active;

        _ck(_v, 10, 0, currVal_3);
      }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_2 = _co.item.label;

        _ck(_v, 8, 0, currVal_2);
      });
    }

    function View_AppMenuitemComponent_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "div", [["app-menuitem", ""]], [[2, "active-menuitem", null]], null, null, View_AppMenuitemComponent_0, RenderType_AppMenuitemComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 245760, null, 0, _app_menuitem_component__WEBPACK_IMPORTED_MODULE_3__["AppMenuitemComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_4__["LayoutComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], _services_app_menu_service__WEBPACK_IMPORTED_MODULE_5__["MenuService"]], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
      }, function (_ck, _v) {
        var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).active;

        _ck(_v, 0, 0, currVal_0);
      });
    }

    var AppMenuitemComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("[app-menuitem]", _app_menuitem_component__WEBPACK_IMPORTED_MODULE_3__["AppMenuitemComponent"], View_AppMenuitemComponent_Host_0, {
      item: "item",
      index: "index",
      root: "root",
      parentKey: "parentKey"
    }, {}, []);
    /***/

  },

  /***/
  "./src/app/pages/layout/component/menu/app.menuitem.component.ts":
  /*!***********************************************************************!*\
    !*** ./src/app/pages/layout/component/menu/app.menuitem.component.ts ***!
    \***********************************************************************/

  /*! exports provided: AppMenuitemComponent */

  /***/
  function srcAppPagesLayoutComponentMenuAppMenuitemComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppMenuitemComponent", function () {
      return AppMenuitemComponent;
    });
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");

    var AppMenuitemComponent =
    /*#__PURE__*/
    function () {
      function AppMenuitemComponent(app, router, cd, menuService) {
        var _this104 = this;

        _classCallCheck(this, AppMenuitemComponent);

        this.app = app;
        this.router = router;
        this.cd = cd;
        this.menuService = menuService;
        this.active = false;
        this.menuSourceSubscription = this.menuService.menuSource$.subscribe(function (key) {
          // deactivate current active menu
          if (_this104.active && _this104.key !== key && key.indexOf(_this104.key) !== 0) {
            _this104.active = false;
          }
        });
        this.menuResetSubscription = this.menuService.resetSource$.subscribe(function () {
          _this104.active = false;
        });
        this.router.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (event) {
          return event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_0__["NavigationEnd"];
        })).subscribe(function (params) {
          if (_this104.app.isSlim() || _this104.app.isHorizontal()) {
            _this104.active = false;
          } else {
            if (_this104.item.routerLink) {
              _this104.updateActiveStateFromRoute();
            } else {
              _this104.active = false;
            }
          }
        });
      }

      _createClass(AppMenuitemComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (!(this.app.isSlim() || this.app.isHorizontal()) && this.item.routerLink) {
            this.updateActiveStateFromRoute();
          }

          this.key = this.parentKey ? this.parentKey + '-' + this.index : String(this.index);
        }
      }, {
        key: "updateActiveStateFromRoute",
        value: function updateActiveStateFromRoute() {
          this.active = this.router.isActive(this.item.routerLink[0], this.item.items ? false : true);
        }
      }, {
        key: "itemClick",
        value: function itemClick(event) {
          // avoid processing disabled items
          if (this.item.disabled) {
            event.preventDefault();
            return true;
          } // navigate with hover in horizontal mode


          if (this.root) {
            this.app.menuHoverActive = !this.app.menuHoverActive;
          } // notify other items


          this.menuService.onMenuStateChange(this.key);
          console.log(this.menuService); // execute command

          if (this.item.command) {
            this.item.command({
              originalEvent: event,
              item: this.item
            });
          } // toggle active state


          if (this.item.items) {
            console.log('1.1');
            this.active = !this.active;
          } else {
            console.log('1.2'); // activate item

            this.active = true; // reset horizontal menu

            if (this.app.isSlim() || this.app.isHorizontal()) {
              this.menuService.reset();
            }

            this.app.overlayMenuActive = false;
            this.app.staticMenuMobileActive = false;
            this.app.menuHoverActive = !this.app.menuHoverActive;
          }
        }
      }, {
        key: "onMouseEnter",
        value: function onMouseEnter() {
          // activate item on hover
          if (this.root && this.app.menuHoverActive && (this.app.isSlim() || this.app.isHorizontal()) && this.app.isDesktop()) {
            this.menuService.onMenuStateChange(this.key);
            this.active = true;
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.menuSourceSubscription) {
            this.menuSourceSubscription.unsubscribe();
          }

          if (this.menuResetSubscription) {
            this.menuResetSubscription.unsubscribe();
          }
        }
      }]);

      return AppMenuitemComponent;
    }();
    /***/

  },

  /***/
  "./src/app/pages/layout/component/menu/menu.component.css.shim.ngstyle.js":
  /*!********************************************************************************!*\
    !*** ./src/app/pages/layout/component/menu/menu.component.css.shim.ngstyle.js ***!
    \********************************************************************************/

  /*! exports provided: styles */

  /***/
  function srcAppPagesLayoutComponentMenuMenuComponentCssShimNgstyleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "styles", function () {
      return styles;
    });
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles = [".subitem[_ngcontent-%COMP%]{\n    margin-left: 15px;\n}\n\n\n.collapsed[_ngcontent-%COMP%] {\n    width: 50px;\n    \n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbGF5b3V0L2NvbXBvbmVudC9tZW51L21lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQjs7O0FBR0E7SUFDSSxXQUFXOztBQUVmIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbGF5b3V0L2NvbXBvbmVudC9tZW51L21lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdWJpdGVte1xuICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xufVxuXG5cbi5jb2xsYXBzZWQge1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIFxufSJdfQ== */"];
    /***/
  },

  /***/
  "./src/app/pages/layout/component/menu/menu.component.ngfactory.js":
  /*!*************************************************************************!*\
    !*** ./src/app/pages/layout/component/menu/menu.component.ngfactory.js ***!
    \*************************************************************************/

  /*! exports provided: RenderType_MenuComponent, View_MenuComponent_0, View_MenuComponent_Host_0, MenuComponentNgFactory */

  /***/
  function srcAppPagesLayoutComponentMenuMenuComponentNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_MenuComponent", function () {
      return RenderType_MenuComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_MenuComponent_0", function () {
      return View_MenuComponent_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_MenuComponent_Host_0", function () {
      return View_MenuComponent_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MenuComponentNgFactory", function () {
      return MenuComponentNgFactory;
    });
    /* harmony import */


    var _menu_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./menu.component.css.shim.ngstyle */
    "./src/app/pages/layout/component/menu/menu.component.css.shim.ngstyle.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _app_menuitem_component_ngfactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./app.menuitem.component.ngfactory */
    "./src/app/pages/layout/component/menu/app.menuitem.component.ngfactory.js");
    /* harmony import */


    var _app_menuitem_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./app.menuitem.component */
    "./src/app/pages/layout/component/menu/app.menuitem.component.ts");
    /* harmony import */


    var _layout_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../layout.component */
    "./src/app/pages/layout/layout.component.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_app_menu_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../../services/app.menu.service */
    "./src/services/app.menu.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _menu_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./menu.component */
    "./src/app/pages/layout/component/menu/menu.component.ts");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles_MenuComponent = [_menu_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__["styles"]];

    var RenderType_MenuComponent = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcrt"]({
      encapsulation: 0,
      styles: styles_MenuComponent,
      data: {}
    });

    function View_MenuComponent_1(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 1, "li", [["app-menuitem", ""]], [[2, "active-menuitem", null]], null, null, _app_menuitem_component_ngfactory__WEBPACK_IMPORTED_MODULE_2__["View_AppMenuitemComponent_0"], _app_menuitem_component_ngfactory__WEBPACK_IMPORTED_MODULE_2__["RenderType_AppMenuitemComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 245760, null, 0, _app_menuitem_component__WEBPACK_IMPORTED_MODULE_3__["AppMenuitemComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_4__["LayoutComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _services_app_menu_service__WEBPACK_IMPORTED_MODULE_6__["MenuService"]], {
        item: [0, "item"],
        index: [1, "index"],
        root: [2, "root"]
      }, null)], function (_ck, _v) {
        var currVal_1 = _v.context.$implicit;
        var currVal_2 = _v.context.index;
        var currVal_3 = true;

        _ck(_v, 1, 0, currVal_1, currVal_2, currVal_3);
      }, function (_ck, _v) {
        var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 1).active;

        _ck(_v, 0, 0, currVal_0);
      });
    }

    function View_MenuComponent_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 6, "div", [["class", "layout-sidebar"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.onMenuClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](1, 0, null, null, 1, "div", [["class", "layout-menu-title"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["MAIN MENU"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](3, 0, null, null, 3, "div", [["class", "menu-scroll-content"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](4, 0, null, null, 2, "ul", [["class", "layout-menu"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵand"](16777216, null, null, 1, null, View_MenuComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](6, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgForOf"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"]], {
        ngForOf: [0, "ngForOf"]
      }, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.model;

        _ck(_v, 6, 0, currVal_0);
      }, null);
    }

    function View_MenuComponent_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 1, "app-menu", [], null, null, null, View_MenuComponent_0, RenderType_MenuComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 114688, null, 0, _menu_component__WEBPACK_IMPORTED_MODULE_8__["MenuComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_4__["LayoutComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
      }, null);
    }

    var MenuComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵccf"]("app-menu", _menu_component__WEBPACK_IMPORTED_MODULE_8__["MenuComponent"], View_MenuComponent_Host_0, {}, {}, []);
    /***/

  },

  /***/
  "./src/app/pages/layout/component/menu/menu.component.ts":
  /*!***************************************************************!*\
    !*** ./src/app/pages/layout/component/menu/menu.component.ts ***!
    \***************************************************************/

  /*! exports provided: MenuComponent */

  /***/
  function srcAppPagesLayoutComponentMenuMenuComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MenuComponent", function () {
      return MenuComponent;
    });

    var MenuComponent =
    /*#__PURE__*/
    function () {
      function MenuComponent(app, router) {
        _classCallCheck(this, MenuComponent);

        this.app = app;
        this.router = router;
        this.selectItem = '';
      }

      _createClass(MenuComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this105 = this;

          this.model = [{
            label: 'Dashboard',
            icon: 'fa fa-fw fa-home',
            routerLink: '/'
          }, {
            label: 'CRM',
            icon: 'fa fa-fw fa-cogs',
            items: [{
              label: 'Clientes',
              icon: 'fa fa-fw fa-user-circle-o',
              routerLink: '/clientes'
            }, {
              label: 'Flores',
              icon: 'fa fa-fw fa-user-circle-o',
              routerLink: '/flores'
            }, {
              label: 'Fincas',
              icon: 'fa fa-fw fa-user-circle-o',
              routerLink: '/fincas'
            }, {
              label: 'E. Carga',
              icon: 'fa fa-fw fa-user-circle-o',
              routerLink: '/delivery'
            }, {
              label: 'Marcación',
              icon: 'fa fa-fw fa-user-circle-o',
              routerLink: '/marcas'
            }]
          }, {
            label: 'Facturación',
            icon: 'fa fa-fw fa-pencil-square-o',
            routerLink: '/factura'
          }, {
            label: 'Pre Alerta',
            icon: 'fa fa-fw fa-pencil-square-o',
            routerLink: '/prealerta'
          }, {
            label: 'Reportes',
            icon: 'fa fa-fw fa-cogs',
            items: [{
              label: 'Saldo del Cliente',
              icon: 'fa fa-fw fa-user-circle-o',
              routerLink: '/balance'
            }, {
              label: 'Documentos del Cliente',
              icon: 'fa fa-fw fa-user-circle-o',
              routerLink: '/documento'
            }]
          }, {
            label: 'Menu Colors',
            icon: 'fa fa-fw fa-paint-brush',
            items: [{
              label: 'Light',
              icon: 'fa fa-fw fa-paint-brush',
              command: function command(event) {
                return _this105.app.lightMenu = true;
              }
            }, {
              label: 'Dark',
              icon: 'fa fa-fw fa-paint-brush',
              command: function command(event) {
                return _this105.app.lightMenu = false;
              }
            }]
          }, {
            label: 'Layouts',
            icon: 'fa fa-fw fa-cog',
            items: [{
              label: 'Static',
              icon: 'fa fa-fw fa-bars',
              command: function command(event) {
                return _this105.app.menuMode = 'static';
              }
            }, {
              label: 'Overlay',
              icon: 'fa fa-fw fa-bars',
              command: function command(event) {
                return _this105.app.menuMode = 'overlay';
              }
            }, {
              label: 'Slim',
              icon: 'fa fa-fw fa-bars',
              command: function command(event) {
                return _this105.app.menuMode = 'slim';
              }
            }, {
              label: 'Horizontal',
              icon: 'fa fa-fw fa-bars',
              command: function command(event) {
                return _this105.app.menuMode = 'horizontal';
              }
            }]
          }, {
            label: 'Themes',
            icon: 'fa fa-fw fa-paint-brush',
            badge: 2,
            items: [{
              label: 'Pink',
              icon: 'fa fa-fw fa-paint-brush',
              items: [{
                label: 'Light',
                icon: 'fa fa-fw fa-paint-brush',
                command: function command(event) {
                  return _this105.changeTheme('pink', 'light');
                }
              }, {
                label: 'Dark',
                icon: 'fa fa-fw fa-paint-brush',
                command: function command(event) {
                  return _this105.changeTheme('pink', 'dark');
                }
              }]
            }, {
              label: 'Cyan',
              icon: 'fa fa-fw fa-paint-brush',
              items: [{
                label: 'Light',
                icon: 'fa fa-fw fa-paint-brush',
                command: function command(event) {
                  return _this105.changeTheme('cyan', 'light');
                }
              }, {
                label: 'Dark',
                icon: 'fa fa-fw fa-paint-brush',
                command: function command(event) {
                  return _this105.changeTheme('cyan', 'dark');
                }
              }]
            }]
          }];
          console.log('Consultando los MENUS...');
          console.log(this.model);
        }
      }, {
        key: "select",
        value: function select(model) {
          console.log('MODEL');
          console.log(model);
          console.log('Selecciono lo siguiente');
          console.log(model.label);
          this.selectItem = model.label;
        }
      }, {
        key: "selectSubItem",
        value: function selectSubItem(model) {
          console.log('Seleccionar sub item');
          console.log(model);

          if (model.command != null) {
            this.app.lightMenu = model.command;
          }

          if (model.position != null) {
            this.app.menuMode = model.position;
          }
        }
      }, {
        key: "changeTheme",
        value: function changeTheme(theme, scheme) {
          var layoutLink = document.getElementById('layout-css');
          var layoutHref = 'assets/layout/css/layout-' + theme + '.css';
          this.replaceLink(layoutLink, layoutHref);
          var themeLink = document.getElementById('theme-css');
          var themeHref = 'assets/theme/' + theme + '/theme-' + scheme + '.css';
          this.replaceLink(themeLink, themeHref);
        }
      }, {
        key: "isIE",
        value: function isIE() {
          return /(MSIE|Trident\/|Edge\/)/i.test(window.navigator.userAgent);
        }
      }, {
        key: "replaceLink",
        value: function replaceLink(linkElement, href) {
          if (this.isIE()) {
            linkElement.setAttribute('href', href);
          } else {
            var id = linkElement.getAttribute('id');
            var cloneLinkElement = linkElement.cloneNode(true);
            cloneLinkElement.setAttribute('href', href);
            cloneLinkElement.setAttribute('id', id + '-clone');
            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);
            cloneLinkElement.addEventListener('load', function () {
              linkElement.remove();
              cloneLinkElement.setAttribute('id', id);
            });
          }
        }
      }, {
        key: "onMenuClick",
        value: function onMenuClick(event) {
          this.app.onMenuClick(event);
        }
      }, {
        key: "change",
        value: function change(url) {
          this.router.navigate([url]);
        }
      }]);

      return MenuComponent;
    }();
    /***/

  },

  /***/
  "./src/app/pages/layout/component/panel/panel.component.css.shim.ngstyle.js":
  /*!**********************************************************************************!*\
    !*** ./src/app/pages/layout/component/panel/panel.component.css.shim.ngstyle.js ***!
    \**********************************************************************************/

  /*! exports provided: styles */

  /***/
  function srcAppPagesLayoutComponentPanelPanelComponentCssShimNgstyleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "styles", function () {
      return styles;
    });
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles = ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xheW91dC9jb21wb25lbnQvcGFuZWwvcGFuZWwuY29tcG9uZW50LmNzcyJ9 */"];
    /***/
  },

  /***/
  "./src/app/pages/layout/component/panel/panel.component.ngfactory.js":
  /*!***************************************************************************!*\
    !*** ./src/app/pages/layout/component/panel/panel.component.ngfactory.js ***!
    \***************************************************************************/

  /*! exports provided: RenderType_PanelComponent, View_PanelComponent_0, View_PanelComponent_Host_0, PanelComponentNgFactory */

  /***/
  function srcAppPagesLayoutComponentPanelPanelComponentNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_PanelComponent", function () {
      return RenderType_PanelComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_PanelComponent_0", function () {
      return View_PanelComponent_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_PanelComponent_Host_0", function () {
      return View_PanelComponent_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PanelComponentNgFactory", function () {
      return PanelComponentNgFactory;
    });
    /* harmony import */


    var _panel_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./panel.component.css.shim.ngstyle */
    "./src/app/pages/layout/component/panel/panel.component.css.shim.ngstyle.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../../../node_modules/primeng/accordion/primeng-accordion.ngfactory */
    "./node_modules/primeng/accordion/primeng-accordion.ngfactory.js");
    /* harmony import */


    var primeng_accordion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/accordion */
    "./node_modules/primeng/fesm2015/primeng-accordion.js");
    /* harmony import */


    var _panel_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./panel.component */
    "./src/app/pages/layout/component/panel/panel.component.ts");
    /* harmony import */


    var _layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../layout.component */
    "./src/app/pages/layout/layout.component.ts");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles_PanelComponent = [_panel_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__["styles"]];

    var RenderType_PanelComponent = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcrt"]({
      encapsulation: 0,
      styles: styles_PanelComponent,
      data: {}
    });

    function View_PanelComponent_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 87, "div", [["id", "layout-right-panel"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onRightPanelClick() !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](2, {
        "layout-right-panel-active": 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](3, 0, null, null, 84, "div", [["class", "right-panel-scroll-content"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](4, 0, null, null, 80, "p-accordion", [], null, null, null, _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__["View_Accordion_0"], _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__["RenderType_Accordion"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](5, 1228800, null, 1, primeng_accordion__WEBPACK_IMPORTED_MODULE_4__["Accordion"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]], {
        multiple: [0, "multiple"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵqud"](603979776, 1, {
        tabList: 1
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](7, 0, null, 0, 25, "p-accordionTab", [["header", "Inbox Messages"]], null, null, null, _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__["View_AccordionTab_0"], _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__["RenderType_AccordionTab"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](8, 1228800, [[1, 4]], 2, primeng_accordion__WEBPACK_IMPORTED_MODULE_4__["AccordionTab"], [primeng_accordion__WEBPACK_IMPORTED_MODULE_4__["Accordion"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]], {
        header: [0, "header"],
        selected: [1, "selected"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵqud"](603979776, 2, {
        headerFacet: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵqud"](603979776, 3, {
        templates: 1
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](11, 0, null, 1, 21, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](12, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](13, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-maggie.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](14, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](15, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Maggie Walker"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](17, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Professionally cultivate one-to-one service."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](19, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](20, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-tom.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](21, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](22, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Tom Baker"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](24, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Dynamically innovate leveling state of art."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](26, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](27, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-brooke.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](28, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](29, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Brooke Wright"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](31, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Holisticly extensible testing procedures."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](33, 0, null, 0, 25, "p-accordionTab", [["header", "Sent"]], null, null, null, _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__["View_AccordionTab_0"], _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__["RenderType_AccordionTab"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](34, 1228800, [[1, 4]], 2, primeng_accordion__WEBPACK_IMPORTED_MODULE_4__["AccordionTab"], [primeng_accordion__WEBPACK_IMPORTED_MODULE_4__["Accordion"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]], {
        header: [0, "header"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵqud"](603979776, 4, {
        headerFacet: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵqud"](603979776, 5, {
        templates: 1
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](37, 0, null, 1, 21, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](38, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](39, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-tom.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](40, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](41, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Tom Baker"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](43, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Envisioned multimedia based expertise."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](45, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](46, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-lucas.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](47, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](48, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Lucas Fox"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](50, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Visualize quality intellectual capital."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](52, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](53, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-brooke.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](54, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](55, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Brooke Wright"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](57, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Engage worldwide methodologies."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](59, 0, null, 0, 25, "p-accordionTab", [["header", "Drafts"]], null, null, null, _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__["View_AccordionTab_0"], _node_modules_primeng_accordion_primeng_accordion_ngfactory__WEBPACK_IMPORTED_MODULE_3__["RenderType_AccordionTab"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](60, 1228800, [[1, 4]], 2, primeng_accordion__WEBPACK_IMPORTED_MODULE_4__["AccordionTab"], [primeng_accordion__WEBPACK_IMPORTED_MODULE_4__["Accordion"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]], {
        header: [0, "header"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵqud"](603979776, 6, {
        headerFacet: 1
      }), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵqud"](603979776, 7, {
        templates: 1
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](63, 0, null, 1, 21, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](64, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](65, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-lucas.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](66, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](67, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Lucas Fox"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](69, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Customer directed convergence."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](71, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](72, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-tom.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](73, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](74, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Tom Baker"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](76, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Installed base after maintainable products."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](78, 0, null, null, 6, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](79, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-maggie.png"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](80, 0, null, null, 4, "div", [["class", "message-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](81, 0, null, null, 1, "span", [["class", "name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Maggie Walker"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](83, 0, null, null, 1, "span", [["class", "message"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Process-centric \"outside the box\" thinking."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](85, 0, null, null, 0, "i", [["class", "fa fa-ellipsis-h"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](86, 0, null, null, 1, "span", [["class", "header"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Recent Activity"]))], function (_ck, _v) {
        var _co = _v.component;

        var currVal_0 = _ck(_v, 2, 0, _co.app.rightPanelActive);

        _ck(_v, 1, 0, currVal_0);

        var currVal_1 = false;

        _ck(_v, 5, 0, currVal_1);

        var currVal_2 = "Inbox Messages";
        var currVal_3 = true;

        _ck(_v, 8, 0, currVal_2, currVal_3);

        var currVal_4 = "Sent";

        _ck(_v, 34, 0, currVal_4);

        var currVal_5 = "Drafts";

        _ck(_v, 60, 0, currVal_5);
      }, null);
    }

    function View_PanelComponent_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 1, "app-panel", [], null, null, null, View_PanelComponent_0, RenderType_PanelComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 114688, null, 0, _panel_component__WEBPACK_IMPORTED_MODULE_5__["PanelComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_6__["LayoutComponent"]], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
      }, null);
    }

    var PanelComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵccf"]("app-panel", _panel_component__WEBPACK_IMPORTED_MODULE_5__["PanelComponent"], View_PanelComponent_Host_0, {}, {}, []);
    /***/

  },

  /***/
  "./src/app/pages/layout/component/panel/panel.component.ts":
  /*!*****************************************************************!*\
    !*** ./src/app/pages/layout/component/panel/panel.component.ts ***!
    \*****************************************************************/

  /*! exports provided: PanelComponent */

  /***/
  function srcAppPagesLayoutComponentPanelPanelComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PanelComponent", function () {
      return PanelComponent;
    });

    var PanelComponent =
    /*#__PURE__*/
    function () {
      function PanelComponent(app) {
        _classCallCheck(this, PanelComponent);

        this.app = app;
      }

      _createClass(PanelComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return PanelComponent;
    }();
    /***/

  },

  /***/
  "./src/app/pages/layout/component/topbar/topbar.component.css.shim.ngstyle.js":
  /*!************************************************************************************!*\
    !*** ./src/app/pages/layout/component/topbar/topbar.component.css.shim.ngstyle.js ***!
    \************************************************************************************/

  /*! exports provided: styles */

  /***/
  function srcAppPagesLayoutComponentTopbarTopbarComponentCssShimNgstyleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "styles", function () {
      return styles;
    });
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles = ["select[_ngcontent-%COMP%] {\n    width: 120px;\n    height: 35px;\n    font-size: 15px;\n    color: white;\n    background: transparent;\n    border: none;\n    padding: 10px;\n}\n\n.fixed[_ngcontent-%COMP%]   option[_ngcontent-%COMP%] {\n    background: #050505;\n    line-height: 1.2em;\n    font-size: 12pt;\n    margin-top: 15px;\n}\n\n.languajes[_ngcontent-%COMP%] {\n    display: inline;\n}\n\n.languajes_menu[_ngcontent-%COMP%] {\n    display: none;\n}\n\n@media only screen and (max-width: 40rem) {\n    .languajes[_ngcontent-%COMP%] {\n        display: none;\n    }\n\n    .languajes_menu[_ngcontent-%COMP%] {\n        display: inline;\n    }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbGF5b3V0L2NvbXBvbmVudC90b3BiYXIvdG9wYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGVBQWU7SUFDZixZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSTtRQUNJLGFBQWE7SUFDakI7O0lBRUE7UUFDSSxlQUFlO0lBQ25CO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sYXlvdXQvY29tcG9uZW50L3RvcGJhci90b3BiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInNlbGVjdCB7XG4gICAgd2lkdGg6IDEyMHB4O1xuICAgIGhlaWdodDogMzVweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuXG4uZml4ZWQgb3B0aW9uIHtcbiAgICBiYWNrZ3JvdW5kOiAjMDUwNTA1O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbiAgICBmb250LXNpemU6IDEycHQ7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuLmxhbmd1YWplcyB7XG4gICAgZGlzcGxheTogaW5saW5lO1xufVxuXG4ubGFuZ3VhamVzX21lbnUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDByZW0pIHtcbiAgICAubGFuZ3VhamVzIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAubGFuZ3VhamVzX21lbnUge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgfVxufVxuIl19 */"];
    /***/
  },

  /***/
  "./src/app/pages/layout/component/topbar/topbar.component.ngfactory.js":
  /*!*****************************************************************************!*\
    !*** ./src/app/pages/layout/component/topbar/topbar.component.ngfactory.js ***!
    \*****************************************************************************/

  /*! exports provided: RenderType_TopbarComponent, View_TopbarComponent_0, View_TopbarComponent_Host_0, TopbarComponentNgFactory */

  /***/
  function srcAppPagesLayoutComponentTopbarTopbarComponentNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_TopbarComponent", function () {
      return RenderType_TopbarComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_TopbarComponent_0", function () {
      return View_TopbarComponent_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_TopbarComponent_Host_0", function () {
      return View_TopbarComponent_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TopbarComponentNgFactory", function () {
      return TopbarComponentNgFactory;
    });
    /* harmony import */


    var _topbar_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./topbar.component.css.shim.ngstyle */
    "./src/app/pages/layout/component/topbar/topbar.component.css.shim.ngstyle.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @ngx-translate/core */
    "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
    /* harmony import */


    var _topbar_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./topbar.component */
    "./src/app/pages/layout/component/topbar/topbar.component.ts");
    /* harmony import */


    var _layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../layout.component */
    "./src/app/pages/layout/layout.component.ts");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles_TopbarComponent = [_topbar_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__["styles"]];

    var RenderType_TopbarComponent = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcrt"]({
      encapsulation: 0,
      styles: styles_TopbarComponent,
      data: {}
    });

    function View_TopbarComponent_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpid"](0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["TitleCasePipe"], []), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](1, 0, null, null, 145, "div", [["class", "layout-topbar"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](2, 0, null, null, 2, "a", [["href", "#"], ["id", "topbar-menu-button"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onMenuButtonClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](3, 0, null, null, 0, "i", [["class", "fa fa-angle-left arrow"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](4, 0, null, null, 0, "i", [["class", "fa fa-angle-up mobile"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](5, 0, null, null, 2, "div", [["class", "search-input"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](6, 0, null, null, 0, "i", [["class", "fa fa-search icon-search"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](7, 0, null, null, 0, "input", [["type", "text"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](8, 0, null, null, 2, "a", [["class", "logo-container"], ["href", "/"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](9, 0, null, null, 1, "span", [["style", "color: white;font-weight: bold;font-size: 1.5rem;"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["ROSA MISTICA"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](11, 0, null, null, 15, "div", [["class", "search-input languajes"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](12, 0, null, null, 0, "i", [["aria-hidden", "true"], ["class", "fa fa-language"], ["style", "color: white;"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, [" \xA0 "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](14, 0, null, null, 12, "select", [["class", "fixed"], ["name", "miselect"]], null, [[null, "change"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("change" === en) {
          var pd_0 = _co.onChange($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](15, 0, null, null, 3, "option", [["selected", "selected"], ["value", "es"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](16, 147456, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgSelectOption"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], [8, null]], {
        value: [0, "value"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](17, 147456, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵangular_packages_forms_forms_x"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], [8, null]], {
        value: [0, "value"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Espa\xF1ol"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](19, 0, null, null, 3, "option", [["value", "en"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](20, 147456, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgSelectOption"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], [8, null]], {
        value: [0, "value"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](21, 147456, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵangular_packages_forms_forms_x"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], [8, null]], {
        value: [0, "value"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["English"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](23, 0, null, null, 3, "option", [["value", "ch"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](24, 147456, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgSelectOption"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], [8, null]], {
        value: [0, "value"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](25, 147456, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵangular_packages_forms_forms_x"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], [8, null]], {
        value: [0, "value"]
      }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["\u65E5\u672C\u4EBA"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](27, 0, null, null, 5, "a", [["href", "#"], ["id", "topbar-profile-menu-button"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarMenuButtonClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](28, 0, null, null, 2, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](29, null, ["", ""])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵppd"](30, 1), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](31, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["class", "topbar-profile"]], [[8, "src", 4]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](32, 0, null, null, 0, "i", [["class", "fa fa-sort-desc"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](33, 0, null, null, 109, "ul", [["class", "fadeInDown animated"], ["id", "topbar-usermenu"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](34, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        klass: [0, "klass"],
        ngClass: [1, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](35, {
        "usermenu-active": 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](36, 0, [["miperfil", 1]], null, 7, "li", [], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](37, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](38, {
        "menuitem-active": 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](39, 0, null, null, 4, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarItemClick($event, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 36)) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](40, 0, null, null, 0, "i", [["class", "fa fa-fw fa-user"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](41, 0, null, null, 2, "span", [["class", "topbar-item-name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](42, null, ["", ""])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpid"](131072, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslatePipe"], [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]]), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](44, 0, [["settings", 1]], null, 29, "li", [], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](45, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](46, {
        "menuitem-active": 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](47, 0, null, null, 5, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarItemClick($event, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 44)) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](48, 0, null, null, 0, "i", [["class", "fa fa-fw fa-cog"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](49, 0, null, null, 1, "span", [["class", "topbar-item-name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Settings"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](51, 0, null, null, 1, "span", [["class", "topbar-submenuitem-badge"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["2"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](53, 0, null, null, 20, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](54, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](55, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](56, 0, null, null, 0, "i", [["class", "fa fa-fw fa-paint-brush"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](57, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Change"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](59, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](60, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](61, 0, null, null, 0, "i", [["class", "fa fa-fw fa-star-o"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](62, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Favorites"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](64, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](65, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](66, 0, null, null, 0, "i", [["class", "fa fa-fw fa-lock"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](67, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Lock Screen"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](69, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](70, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](71, 0, null, null, 0, "i", [["class", "fa fa-fw fa-picture-o"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](72, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Wallpaper"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](74, 0, [["messages", 1]], null, 12, "li", [], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](75, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](76, {
        "menuitem-active": 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](77, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarItemClick($event, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 74)) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](78, 0, null, null, 0, "i", [["class", "fa fa-fw fa-envelope-o"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](79, 0, null, null, 1, "span", [["class", "topbar-item-name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Messages"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](81, 0, null, null, 5, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](82, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](83, 0, null, null, 3, "a", [["class", "topbar-message"], ["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](84, 0, null, null, 0, "img", [["alt", "ecuador-layout"], ["src", "assets/layout/images/avatar-brooke.png"], ["width", "25"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](85, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Give me a call"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](87, 0, [["languajes", 1]], null, 21, "li", [["class", "languajes_menu"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](88, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        klass: [0, "klass"],
        ngClass: [1, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](89, {
        "menuitem-active": 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](90, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarItemClickLanguajes($event, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 87)) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](91, 0, null, null, 0, "i", [["class", "fa fa-fw fa-globe"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](92, 0, null, null, 1, "span", [["class", "topbar-item-name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Languajes"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](94, 0, null, null, 4, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](95, 0, null, null, 3, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](96, 0, null, null, 2, "a", [["class", "topbar-message"], ["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClickLanguajes($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](97, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Espa\xF1ol"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](99, 0, null, null, 4, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](100, 0, null, null, 3, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](101, 0, null, null, 2, "a", [["class", "topbar-message"], ["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClickLanguajes($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](102, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["English"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](104, 0, null, null, 4, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](105, 0, null, null, 3, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](106, 0, null, null, 2, "a", [["class", "topbar-message"], ["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClickLanguajes($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](107, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["\u65E5\u672C\u4EBA"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](109, 0, [["notifications", 1]], null, 27, "li", [], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](110, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](111, {
        "menuitem-active": 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](112, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarItemClick($event, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 109)) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](113, 0, null, null, 0, "i", [["class", "fa fa-fw fa-bell-o"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](114, 0, null, null, 1, "span", [["class", "topbar-item-name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Notifications"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](116, 0, null, null, 20, "ul", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](117, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](118, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](119, 0, null, null, 0, "i", [["class", "fa fa-fw fa-tasks"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](120, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Pending tasks"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](122, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](123, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](124, 0, null, null, 0, "i", [["class", "fa fa-fw fa-calendar-check-o"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](125, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Meeting today"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](127, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](128, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](129, 0, null, null, 0, "i", [["class", "fa fa-fw fa-download"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](130, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Download"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](132, 0, null, null, 4, "li", [["role", "menuitem"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](133, 0, null, null, 3, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onTopbarSubItemClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](134, 0, null, null, 0, "i", [["class", "fa fa-fw fa-plane"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](135, 0, null, null, 1, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](-1, null, ["Book flight"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](137, 0, null, null, 5, "li", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](138, 0, null, null, 4, "a", [["href", "#"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.singout() !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](139, 0, null, null, 0, "i", [["class", "fa fa-fw fa-sign-out"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](140, 0, null, null, 2, "span", [["class", "topbar-item-name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"](141, null, ["", ""])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpid"](131072, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslatePipe"], [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]]), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](143, 0, null, null, 3, "a", [["href", "#"], ["id", "right-panel-button"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.app.onRightPanelButtonClick($event) !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](144, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        ngClass: [0, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](145, {
        "menu-button-rotate": 0
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](146, 0, null, null, 0, "i", [["class", "fa fa-angle-double-left"]], null, null, null, null, null))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = "es";

        _ck(_v, 16, 0, currVal_0);

        var currVal_1 = "es";

        _ck(_v, 17, 0, currVal_1);

        var currVal_2 = "en";

        _ck(_v, 20, 0, currVal_2);

        var currVal_3 = "en";

        _ck(_v, 21, 0, currVal_3);

        var currVal_4 = "ch";

        _ck(_v, 24, 0, currVal_4);

        var currVal_5 = "ch";

        _ck(_v, 25, 0, currVal_5);

        var currVal_8 = "fadeInDown animated";

        var currVal_9 = _ck(_v, 35, 0, _co.app.topbarMenuActive);

        _ck(_v, 34, 0, currVal_8, currVal_9);

        var currVal_10 = _ck(_v, 38, 0, _co.app.activeTopbarItem === _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 36));

        _ck(_v, 37, 0, currVal_10);

        var currVal_12 = _ck(_v, 46, 0, _co.app.activeTopbarItem === _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 44));

        _ck(_v, 45, 0, currVal_12);

        var currVal_13 = _ck(_v, 76, 0, _co.app.activeTopbarItem === _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 74));

        _ck(_v, 75, 0, currVal_13);

        var currVal_14 = "languajes_menu";

        var currVal_15 = _ck(_v, 89, 0, _co.app.activeTopbarItem === _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 87));

        _ck(_v, 88, 0, currVal_14, currVal_15);

        var currVal_16 = _ck(_v, 111, 0, _co.app.activeTopbarItem === _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 109));

        _ck(_v, 110, 0, currVal_16);

        var currVal_18 = _ck(_v, 145, 0, _co.app.rightPanelActive);

        _ck(_v, 144, 0, currVal_18);
      }, function (_ck, _v) {
        var _co = _v.component;

        var currVal_6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵunv"](_v, 29, 0, _ck(_v, 30, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 0), _co.name));

        _ck(_v, 29, 0, currVal_6);

        var currVal_7 = _co.user.photo;

        _ck(_v, 31, 0, currVal_7);

        var currVal_11 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵunv"](_v, 42, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 43).transform("Perfil"));

        _ck(_v, 42, 0, currVal_11);

        var currVal_17 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵunv"](_v, 141, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"](_v, 142).transform("Salir"));

        _ck(_v, 141, 0, currVal_17);
      });
    }

    function View_TopbarComponent_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 2, "app-topbar", [], null, null, null, View_TopbarComponent_0, RenderType_TopbarComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵprd"](512, null, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateStore"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateLoader"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateCompiler"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateParser"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["MissingTranslationHandler"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_DEFAULT_LANG"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_STORE"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_EXTEND"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_LANGUAGE"]]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](2, 114688, null, 0, _topbar_component__WEBPACK_IMPORTED_MODULE_5__["TopbarComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_6__["LayoutComponent"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"]], null, null)], function (_ck, _v) {
        _ck(_v, 2, 0);
      }, null);
    }

    var TopbarComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵccf"]("app-topbar", _topbar_component__WEBPACK_IMPORTED_MODULE_5__["TopbarComponent"], View_TopbarComponent_Host_0, {}, {}, []);
    /***/

  },

  /***/
  "./src/app/pages/layout/component/topbar/topbar.component.ts":
  /*!*******************************************************************!*\
    !*** ./src/app/pages/layout/component/topbar/topbar.component.ts ***!
    \*******************************************************************/

  /*! exports provided: TopbarComponent */

  /***/
  function srcAppPagesLayoutComponentTopbarTopbarComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TopbarComponent", function () {
      return TopbarComponent;
    });

    var TopbarComponent =
    /*#__PURE__*/
    function () {
      function TopbarComponent(app, translate) {
        _classCallCheck(this, TopbarComponent);

        this.app = app;
        this.translate = translate;
      }

      _createClass(TopbarComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.user = JSON.parse(localStorage.getItem('user'));
          this.name = this.user.name + ' ' + this.user.lastname;
          console.log('Usuario seleccionado');
          console.log(this.user);
        }
      }, {
        key: "onOptionsSelected",
        value: function onOptionsSelected(lng) {
          console.log('Seleccionar' + lng);
        }
      }, {
        key: "onChange",
        value: function onChange(event) {
          this.translate.use(event.target.value);
        }
      }, {
        key: "onselectlanguajes",
        value: function onselectlanguajes(languajes) {
          console.log('Esta cambiando el lenguaje');
        }
      }]);

      return TopbarComponent;
    }();
    /***/

  },

  /***/
  "./src/app/pages/layout/layout-routing.module.ts":
  /*!*******************************************************!*\
    !*** ./src/app/pages/layout/layout-routing.module.ts ***!
    \*******************************************************/

  /*! exports provided: LayoutRoutingModule, ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9, ɵ10, ɵ11, ɵ12, ɵ13, ɵ14, ɵ15 */

  /***/
  function srcAppPagesLayoutLayoutRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LayoutRoutingModule", function () {
      return LayoutRoutingModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ0", function () {
      return ɵ0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ1", function () {
      return ɵ1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ2", function () {
      return ɵ2;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ3", function () {
      return ɵ3;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ4", function () {
      return ɵ4;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ5", function () {
      return ɵ5;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ6", function () {
      return ɵ6;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ7", function () {
      return ɵ7;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ8", function () {
      return ɵ8;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ9", function () {
      return ɵ9;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ10", function () {
      return ɵ10;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ11", function () {
      return ɵ11;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ12", function () {
      return ɵ12;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ13", function () {
      return ɵ13;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ14", function () {
      return ɵ14;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵ15", function () {
      return ɵ15;
    });
    /* harmony import */


    var _layout_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./layout.component */
    "./src/app/pages/layout/layout.component.ts");

    var ɵ0 = function ɵ0() {
      return Promise.all(
      /*! import() | dashboard-dashboard-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-flores-flores-module-ngfactory~dashboard-dashboard-module-ngfactory"), __webpack_require__.e("dashboard-dashboard-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./dashboard/dashboard.module.ngfactory */
      "./src/app/pages/layout/dashboard/dashboard.module.ngfactory.js")).then(function (m) {
        return m.DashboardModuleNgFactory;
      });
    },
        ɵ1 = function ɵ1() {
      return Promise.all(
      /*! import() | crm-clientes-clientes-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~bc0c8248"), __webpack_require__.e("common"), __webpack_require__.e("crm-clientes-clientes-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/clientes/clientes.module.ngfactory */
      "./src/app/pages/layout/crm/clientes/clientes.module.ngfactory.js")).then(function (m) {
        return m.ClientesModuleNgFactory;
      });
    },
        ɵ2 = function ɵ2() {
      return Promise.all(
      /*! import() | crm-flores-flores-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-flores-flores-module-ngfactory~dashboard-dashboard-module-ngfactory"), __webpack_require__.e("common"), __webpack_require__.e("crm-flores-flores-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/flores/flores.module.ngfactory */
      "./src/app/pages/layout/crm/flores/flores.module.ngfactory.js")).then(function (m) {
        return m.FloresModuleNgFactory;
      });
    },
        ɵ3 = function ɵ3() {
      return Promise.all(
      /*! import() | crm-finca-finca-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~bc0c8248"), __webpack_require__.e("common"), __webpack_require__.e("crm-finca-finca-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/finca/finca.module.ngfactory */
      "./src/app/pages/layout/crm/finca/finca.module.ngfactory.js")).then(function (m) {
        return m.FincaModuleNgFactory;
      });
    },
        ɵ4 = function ɵ4() {
      return Promise.all(
      /*! import() | factura-factura-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~bc0c8248"), __webpack_require__.e("default~factura-factura-module-ngfactory~prealerta-prealerta-module-ngfactory~xlsx"), __webpack_require__.e("default~factura-factura-module-ngfactory~prealerta-prealerta-module-ngfactory"), __webpack_require__.e("factura-factura-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./factura/factura.module.ngfactory */
      "./src/app/pages/layout/factura/factura.module.ngfactory.js")).then(function (m) {
        return m.FacturaModuleNgFactory;
      });
    },
        ɵ5 = function ɵ5() {
      return Promise.all(
      /*! import() | miperfil-miperfil-module-ngfactory */
      [__webpack_require__.e("common"), __webpack_require__.e("miperfil-miperfil-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./miperfil/miperfil.module.ngfactory */
      "./src/app/pages/layout/miperfil/miperfil.module.ngfactory.js")).then(function (m) {
        return m.MiperfilModuleNgFactory;
      });
    },
        ɵ6 = function ɵ6() {
      return Promise.all(
      /*! import() | crm-clientes-edit-edit-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("common"), __webpack_require__.e("crm-clientes-edit-edit-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/clientes/edit/edit.module.ngfactory */
      "./src/app/pages/layout/crm/clientes/edit/edit.module.ngfactory.js")).then(function (m) {
        return m.EditModuleNgFactory;
      });
    },
        ɵ7 = function ɵ7() {
      return Promise.all(
      /*! import() | crm-flores-edit-edit-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("common"), __webpack_require__.e("crm-flores-edit-edit-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/flores/edit/edit.module.ngfactory */
      "./src/app/pages/layout/crm/flores/edit/edit.module.ngfactory.js")).then(function (m) {
        return m.EditModuleNgFactory;
      });
    },
        ɵ8 = function ɵ8() {
      return Promise.all(
      /*! import() | crm-finca-edit-edit-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("common"), __webpack_require__.e("crm-finca-edit-edit-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/finca/edit/edit.module.ngfactory */
      "./src/app/pages/layout/crm/finca/edit/edit.module.ngfactory.js")).then(function (m) {
        return m.EditModuleNgFactory;
      });
    },
        ɵ9 = function ɵ9() {
      return Promise.all(
      /*! import() | prealerta-prealerta-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~bc0c8248"), __webpack_require__.e("default~factura-factura-module-ngfactory~prealerta-prealerta-module-ngfactory~xlsx"), __webpack_require__.e("default~factura-factura-module-ngfactory~prealerta-prealerta-module-ngfactory"), __webpack_require__.e("common"), __webpack_require__.e("prealerta-prealerta-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./prealerta/prealerta.module.ngfactory */
      "./src/app/pages/layout/prealerta/prealerta.module.ngfactory.js")).then(function (m) {
        return m.PrealertaModuleNgFactory;
      });
    },
        ɵ10 = function ɵ10() {
      return Promise.all(
      /*! import() | crm-delivery-delivery-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~bc0c8248"), __webpack_require__.e("common"), __webpack_require__.e("crm-delivery-delivery-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/delivery/delivery.module.ngfactory */
      "./src/app/pages/layout/crm/delivery/delivery.module.ngfactory.js")).then(function (m) {
        return m.DeliveryModuleNgFactory;
      });
    },
        ɵ11 = function ɵ11() {
      return Promise.all(
      /*! import() | crm-delivery-edit-edit-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("common"), __webpack_require__.e("crm-delivery-edit-edit-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/delivery/edit/edit.module.ngfactory */
      "./src/app/pages/layout/crm/delivery/edit/edit.module.ngfactory.js")).then(function (m) {
        return m.EditModuleNgFactory;
      });
    },
        ɵ12 = function ɵ12() {
      return Promise.all(
      /*! import() | crm-marking-marking-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~bc0c8248"), __webpack_require__.e("crm-marking-marking-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/marking/marking.module.ngfactory */
      "./src/app/pages/layout/crm/marking/marking.module.ngfactory.js")).then(function (m) {
        return m.MarkingModuleNgFactory;
      });
    },
        ɵ13 = function ɵ13() {
      return Promise.all(
      /*! import() | crm-marking-edit-edit-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("common"), __webpack_require__.e("crm-marking-edit-edit-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./crm/marking/edit/edit.module.ngfactory */
      "./src/app/pages/layout/crm/marking/edit/edit.module.ngfactory.js")).then(function (m) {
        return m.EditModuleNgFactory;
      });
    },
        ɵ14 = function ɵ14() {
      return Promise.all(
      /*! import() | reporte-balance-balance-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~bc0c8248"), __webpack_require__.e("default~reporte-balance-balance-module-ngfactory~reporte-documento-documento-module-ngfactory"), __webpack_require__.e("reporte-balance-balance-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./reporte/balance/balance.module.ngfactory */
      "./src/app/pages/layout/reporte/balance/balance.module.ngfactory.js")).then(function (m) {
        return m.BalanceModuleNgFactory;
      });
    },
        ɵ15 = function ɵ15() {
      return Promise.all(
      /*! import() | reporte-documento-documento-module-ngfactory */
      [__webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~d498558d"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e93b4a8a"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e5b7a401"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~49159794"), __webpack_require__.e("default~crm-clientes-clientes-module-ngfactory~crm-delivery-delivery-module-ngfactory~crm-finca-finc~bc0c8248"), __webpack_require__.e("default~reporte-balance-balance-module-ngfactory~reporte-documento-documento-module-ngfactory"), __webpack_require__.e("reporte-documento-documento-module-ngfactory")]).then(__webpack_require__.bind(null,
      /*! ./reporte/documento/documento.module.ngfactory */
      "./src/app/pages/layout/reporte/documento/documento.module.ngfactory.js")).then(function (m) {
        return m.DocumentoModuleNgFactory;
      });
    };

    var routes = [{
      path: '',
      component: _layout_component__WEBPACK_IMPORTED_MODULE_0__["LayoutComponent"],
      children: [{
        path: '',
        redirectTo: 'dashboard',
        pathMatch: 'prefix'
      }, {
        path: 'dashboard',
        loadChildren: ɵ0
      }, {
        path: 'clientes',
        loadChildren: ɵ1
      }, {
        path: 'flores',
        loadChildren: ɵ2
      }, {
        path: 'fincas',
        loadChildren: ɵ3
      }, {
        path: 'factura',
        loadChildren: ɵ4
      }, {
        path: 'miperfil',
        loadChildren: ɵ5
      }, {
        path: 'edit',
        loadChildren: ɵ6
      }, {
        path: 'editFlower',
        loadChildren: ɵ7
      }, {
        path: 'editFinca',
        loadChildren: ɵ8
      }, {
        path: 'prealerta',
        loadChildren: ɵ9
      }, {
        path: 'delivery',
        loadChildren: ɵ10
      }, {
        path: 'editDelivery',
        loadChildren: ɵ11
      }, {
        path: 'marcas',
        loadChildren: ɵ12
      }, {
        path: 'editMarca',
        loadChildren: ɵ13
      }, {
        path: 'balance',
        loadChildren: ɵ14
      }, {
        path: 'documento',
        loadChildren: ɵ15
      }]
    }];

    var LayoutRoutingModule = function LayoutRoutingModule() {
      _classCallCheck(this, LayoutRoutingModule);
    };
    /***/

  },

  /***/
  "./src/app/pages/layout/layout.component.css.shim.ngstyle.js":
  /*!*******************************************************************!*\
    !*** ./src/app/pages/layout/layout.component.css.shim.ngstyle.js ***!
    \*******************************************************************/

  /*! exports provided: styles */

  /***/
  function srcAppPagesLayoutLayoutComponentCssShimNgstyleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "styles", function () {
      return styles;
    });
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles = [".layout-main[_ngcontent-%COMP%]   .layout-content[_ngcontent-%COMP%] {\n    height: 100%;\n}\n\n@media only screen and (max-width: 40rem) {\n    .layout-main[_ngcontent-%COMP%]   .layout-content[_ngcontent-%COMP%] {\n        height: 100%;\n    }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJO1FBQ0ksWUFBWTtJQUNoQjtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxheW91dC1tYWluIC5sYXlvdXQtY29udGVudCB7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwcmVtKSB7XG4gICAgLmxheW91dC1tYWluIC5sYXlvdXQtY29udGVudCB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG59XG4iXX0= */"];
    /***/
  },

  /***/
  "./src/app/pages/layout/layout.component.ngfactory.js":
  /*!************************************************************!*\
    !*** ./src/app/pages/layout/layout.component.ngfactory.js ***!
    \************************************************************/

  /*! exports provided: RenderType_LayoutComponent, View_LayoutComponent_0, View_LayoutComponent_Host_0, LayoutComponentNgFactory */

  /***/
  function srcAppPagesLayoutLayoutComponentNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RenderType_LayoutComponent", function () {
      return RenderType_LayoutComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_LayoutComponent_0", function () {
      return View_LayoutComponent_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "View_LayoutComponent_Host_0", function () {
      return View_LayoutComponent_Host_0;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LayoutComponentNgFactory", function () {
      return LayoutComponentNgFactory;
    });
    /* harmony import */


    var _layout_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./layout.component.css.shim.ngstyle */
    "./src/app/pages/layout/layout.component.css.shim.ngstyle.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _component_topbar_topbar_component_ngfactory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./component/topbar/topbar.component.ngfactory */
    "./src/app/pages/layout/component/topbar/topbar.component.ngfactory.js");
    /* harmony import */


    var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @ngx-translate/core */
    "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
    /* harmony import */


    var _component_topbar_topbar_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./component/topbar/topbar.component */
    "./src/app/pages/layout/component/topbar/topbar.component.ts");
    /* harmony import */


    var _layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./layout.component */
    "./src/app/pages/layout/layout.component.ts");
    /* harmony import */


    var _component_panel_panel_component_ngfactory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./component/panel/panel.component.ngfactory */
    "./src/app/pages/layout/component/panel/panel.component.ngfactory.js");
    /* harmony import */


    var _component_panel_panel_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./component/panel/panel.component */
    "./src/app/pages/layout/component/panel/panel.component.ts");
    /* harmony import */


    var _component_menu_menu_component_ngfactory__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./component/menu/menu.component.ngfactory */
    "./src/app/pages/layout/component/menu/menu.component.ngfactory.js");
    /* harmony import */


    var _component_menu_menu_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./component/menu/menu.component */
    "./src/app/pages/layout/component/menu/menu.component.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _component_breadcrumb_breadcrumb_component_ngfactory__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./component/breadcrumb/breadcrumb.component.ngfactory */
    "./src/app/pages/layout/component/breadcrumb/breadcrumb.component.ngfactory.js");
    /* harmony import */


    var _component_breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./component/breadcrumb/breadcrumb.component */
    "./src/app/pages/layout/component/breadcrumb/breadcrumb.component.ts");
    /* harmony import */


    var _services_breadcrumb_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../../../services/breadcrumb.service */
    "./src/services/breadcrumb.service.ts");
    /* harmony import */


    var _component_footer_footer_component_ngfactory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./component/footer/footer.component.ngfactory */
    "./src/app/pages/layout/component/footer/footer.component.ngfactory.js");
    /* harmony import */


    var _component_footer_footer_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./component/footer/footer.component */
    "./src/app/pages/layout/component/footer/footer.component.ts");
    /* harmony import */


    var _services_app_menu_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ../../../services/app.menu.service */
    "./src/services/app.menu.service.ts");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var styles_LayoutComponent = [_layout_component_css_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__["styles"]];

    var RenderType_LayoutComponent = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcrt"]({
      encapsulation: 0,
      styles: styles_LayoutComponent,
      data: {}
    });

    function View_LayoutComponent_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 17, "div", [["class", "layout-wrapper"]], null, [[null, "click"]], function (_v, en, $event) {
        var ad = true;
        var _co = _v.component;

        if ("click" === en) {
          var pd_0 = _co.onLayoutClick() !== false;
          ad = pd_0 && ad;
        }

        return ad;
      }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], {
        klass: [0, "klass"],
        ngClass: [1, "ngClass"]
      }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](2, {
        "layout-menu-horizontal": 0,
        "layout-menu-overlay": 1,
        "layout-menu-static": 2,
        "layout-menu-slim": 3,
        "layout-menu-light": 4,
        "layout-menu-overlay-active": 5,
        "layout-menu-mobile-active": 6,
        "layout-menu-static-inactive": 7
      }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](3, 0, null, null, 2, "app-topbar", [], null, null, null, _component_topbar_topbar_component_ngfactory__WEBPACK_IMPORTED_MODULE_3__["View_TopbarComponent_0"], _component_topbar_topbar_component_ngfactory__WEBPACK_IMPORTED_MODULE_3__["RenderType_TopbarComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵprd"](512, null, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateStore"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateLoader"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateCompiler"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateParser"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["MissingTranslationHandler"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_DEFAULT_LANG"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_STORE"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_EXTEND"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_LANGUAGE"]]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](5, 114688, null, 0, _component_topbar_topbar_component__WEBPACK_IMPORTED_MODULE_5__["TopbarComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_6__["LayoutComponent"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](6, 0, null, null, 1, "app-panel", [], null, null, null, _component_panel_panel_component_ngfactory__WEBPACK_IMPORTED_MODULE_7__["View_PanelComponent_0"], _component_panel_panel_component_ngfactory__WEBPACK_IMPORTED_MODULE_7__["RenderType_PanelComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](7, 114688, null, 0, _component_panel_panel_component__WEBPACK_IMPORTED_MODULE_8__["PanelComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_6__["LayoutComponent"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](8, 0, null, null, 1, "app-menu", [], null, null, null, _component_menu_menu_component_ngfactory__WEBPACK_IMPORTED_MODULE_9__["View_MenuComponent_0"], _component_menu_menu_component_ngfactory__WEBPACK_IMPORTED_MODULE_9__["RenderType_MenuComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](9, 114688, null, 0, _component_menu_menu_component__WEBPACK_IMPORTED_MODULE_10__["MenuComponent"], [_layout_component__WEBPACK_IMPORTED_MODULE_6__["LayoutComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_11__["Router"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](10, 0, null, null, 7, "div", [["class", "layout-main"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](11, 0, null, null, 1, "app-breadcrumb", [], null, null, null, _component_breadcrumb_breadcrumb_component_ngfactory__WEBPACK_IMPORTED_MODULE_12__["View_BreadcrumbComponent_0"], _component_breadcrumb_breadcrumb_component_ngfactory__WEBPACK_IMPORTED_MODULE_12__["RenderType_BreadcrumbComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](12, 245760, null, 0, _component_breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_13__["BreadcrumbComponent"], [_services_breadcrumb_service__WEBPACK_IMPORTED_MODULE_14__["BreadcrumbService"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](13, 0, null, null, 2, "div", [["class", "layout-content"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](14, 16777216, null, null, 1, "router-outlet", [], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](15, 212992, null, 0, _angular_router__WEBPACK_IMPORTED_MODULE_11__["RouterOutlet"], [_angular_router__WEBPACK_IMPORTED_MODULE_11__["ChildrenOutletContexts"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"], [8, null], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](16, 0, null, null, 1, "app-footer", [], null, null, null, _component_footer_footer_component_ngfactory__WEBPACK_IMPORTED_MODULE_15__["View_FooterComponent_0"], _component_footer_footer_component_ngfactory__WEBPACK_IMPORTED_MODULE_15__["RenderType_FooterComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](17, 114688, null, 0, _component_footer_footer_component__WEBPACK_IMPORTED_MODULE_16__["FooterComponent"], [], null, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = "layout-wrapper";

        var currVal_1 = _ck(_v, 2, 0, _co.menuMode === "horizontal", _co.menuMode === "overlay", _co.menuMode === "static", _co.menuMode === "slim", _co.lightMenu === true, _co.overlayMenuActive, _co.staticMenuMobileActive, _co.staticMenuDesktopInactive);

        _ck(_v, 1, 0, currVal_0, currVal_1);

        _ck(_v, 5, 0);

        _ck(_v, 7, 0);

        _ck(_v, 9, 0);

        _ck(_v, 12, 0);

        _ck(_v, 15, 0);

        _ck(_v, 17, 0);
      }, null);
    }

    function View_LayoutComponent_Host_0(_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 2, "app-layout", [], null, null, null, View_LayoutComponent_0, RenderType_LayoutComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵprd"](512, null, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateStore"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateLoader"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateCompiler"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateParser"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["MissingTranslationHandler"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_DEFAULT_LANG"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_STORE"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["USE_EXTEND"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_LANGUAGE"]]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](2, 114688, null, 0, _layout_component__WEBPACK_IMPORTED_MODULE_6__["LayoutComponent"], [_services_app_menu_service__WEBPACK_IMPORTED_MODULE_17__["MenuService"], _angular_router__WEBPACK_IMPORTED_MODULE_11__["Router"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"]], null, null)], function (_ck, _v) {
        _ck(_v, 2, 0);
      }, null);
    }

    var LayoutComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵccf"]("app-layout", _layout_component__WEBPACK_IMPORTED_MODULE_6__["LayoutComponent"], View_LayoutComponent_Host_0, {}, {}, []);
    /***/

  },

  /***/
  "./src/app/pages/layout/layout.component.ts":
  /*!**************************************************!*\
    !*** ./src/app/pages/layout/layout.component.ts ***!
    \**************************************************/

  /*! exports provided: LayoutComponent */

  /***/
  function srcAppPagesLayoutLayoutComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LayoutComponent", function () {
      return LayoutComponent;
    });

    var LayoutComponent =
    /*#__PURE__*/
    function () {
      function LayoutComponent(menuService, router, translate) {
        _classCallCheck(this, LayoutComponent);

        this.menuService = menuService;
        this.router = router;
        this.translate = translate;
        this.menuMode = "static";
        this.lightMenu = false;
      }

      _createClass(LayoutComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onLayoutClick",
        value: function onLayoutClick() {
          if (!this.topbarItemClick) {
            this.activeTopbarItem = null;
            this.topbarMenuActive = false;
          }

          if (!this.rightPanelClick) {
            this.rightPanelActive = false;
          }

          if (!this.menuClick) {
            if (this.isHorizontal() || this.isSlim()) {
              this.menuService.reset();
            }

            if (this.overlayMenuActive || this.staticMenuMobileActive) {
              this.hideOverlayMenu();
            }

            this.menuHoverActive = false;
          }

          this.topbarItemClick = false;
          this.menuClick = false;
          this.rightPanelClick = false;
        }
      }, {
        key: "onMenuButtonClick",
        value: function onMenuButtonClick(event) {
          this.menuClick = true;
          this.topbarMenuActive = false;

          if (this.isOverlay()) {
            this.overlayMenuActive = !this.overlayMenuActive;
          }

          if (this.isDesktop()) {
            this.staticMenuDesktopInactive = !this.staticMenuDesktopInactive;
          } else {
            this.staticMenuMobileActive = !this.staticMenuMobileActive;
          }

          event.preventDefault();
        }
      }, {
        key: "onMenuClick",
        value: function onMenuClick($event) {
          this.menuClick = true;
        }
      }, {
        key: "onTopbarMenuButtonClick",
        value: function onTopbarMenuButtonClick(event) {
          this.topbarItemClick = true;
          this.topbarMenuActive = !this.topbarMenuActive;
          this.hideOverlayMenu();
          event.preventDefault();
        }
      }, {
        key: "onTopbarItemClickLanguajes",
        value: function onTopbarItemClickLanguajes(event, item) {
          this.topbarItemClick = true;

          if (this.activeTopbarItem === item) {
            this.activeTopbarItem = null;
          } else {
            this.activeTopbarItem = item;
          }

          event.preventDefault();
        }
      }, {
        key: "onTopbarItemClick",
        value: function onTopbarItemClick(event, item) {
          this.topbarItemClick = true;

          if (this.activeTopbarItem === item) {
            this.activeTopbarItem = null;
          } else {
            this.activeTopbarItem = item;
          }

          event.preventDefault();
          this.router.navigate(["miperfil"]);
        }
      }, {
        key: "singout",
        value: function singout() {
          localStorage.clear();
          this.router.navigate(["/"]);
        }
      }, {
        key: "onTopbarSubItemClick",
        value: function onTopbarSubItemClick(event) {
          event.preventDefault();
        }
      }, {
        key: "onTopbarSubItemClickLanguajes",
        value: function onTopbarSubItemClickLanguajes(event) {
          console.log('Validar lenguaje..');
          console.log(event.target.text);
          var languajes = "";

          if (event.target.text == "Español") {
            languajes = "es";
          } else if (event.target.text == "English") {
            languajes = "en";
          } else {
            languajes = "ch";
          }

          this.translate.use(languajes);
          event.preventDefault();
        }
      }, {
        key: "onRightPanelButtonClick",
        value: function onRightPanelButtonClick(event) {
          this.rightPanelClick = true;
          this.rightPanelActive = !this.rightPanelActive;
          event.preventDefault();
        }
      }, {
        key: "onRightPanelClick",
        value: function onRightPanelClick() {
          this.rightPanelClick = true;
        }
      }, {
        key: "isHorizontal",
        value: function isHorizontal() {
          return this.menuMode === "horizontal";
        }
      }, {
        key: "isSlim",
        value: function isSlim() {
          return this.menuMode === "slim";
        }
      }, {
        key: "isOverlay",
        value: function isOverlay() {
          return this.menuMode === "overlay";
        }
      }, {
        key: "isStatic",
        value: function isStatic() {
          return this.menuMode === "static";
        }
      }, {
        key: "isMobile",
        value: function isMobile() {
          return window.innerWidth < 1025;
        }
      }, {
        key: "isDesktop",
        value: function isDesktop() {
          return window.innerWidth > 1024;
        }
      }, {
        key: "isTablet",
        value: function isTablet() {
          var width = window.innerWidth;
          return width <= 1024 && width > 640;
        }
      }, {
        key: "hideOverlayMenu",
        value: function hideOverlayMenu() {
          this.overlayMenuActive = false;
          this.staticMenuMobileActive = false;
        }
      }]);

      return LayoutComponent;
    }();
    /***/

  },

  /***/
  "./src/app/pages/layout/layout.module.ngfactory.js":
  /*!*********************************************************!*\
    !*** ./src/app/pages/layout/layout.module.ngfactory.js ***!
    \*********************************************************/

  /*! exports provided: LayoutModuleNgFactory */

  /***/
  function srcAppPagesLayoutLayoutModuleNgfactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LayoutModuleNgFactory", function () {
      return LayoutModuleNgFactory;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _layout_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./layout.module */
    "./src/app/pages/layout/layout.module.ts");
    /* harmony import */


    var _node_modules_angular_router_router_ngfactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../../node_modules/@angular/router/router.ngfactory */
    "./node_modules/@angular/router/router.ngfactory.js");
    /* harmony import */


    var _layout_component_ngfactory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./layout.component.ngfactory */
    "./src/app/pages/layout/layout.component.ngfactory.js");
    /* harmony import */


    var _node_modules_primeng_dynamicdialog_primeng_dynamicdialog_ngfactory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../node_modules/primeng/dynamicdialog/primeng-dynamicdialog.ngfactory */
    "./node_modules/primeng/dynamicdialog/primeng-dynamicdialog.ngfactory.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_app_menu_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../services/app.menu.service */
    "./src/services/app.menu.service.ts");
    /* harmony import */


    var _services_breadcrumb_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../services/breadcrumb.service */
    "./src/services/breadcrumb.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./layout-routing.module */
    "./src/app/pages/layout/layout-routing.module.ts");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/cdk/bidi */
    "./node_modules/@angular/cdk/fesm2015/bidi.js");
    /* harmony import */


    var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! @angular/cdk/platform */
    "./node_modules/@angular/cdk/fesm2015/platform.js");
    /* harmony import */


    var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! @angular/cdk/scrolling */
    "./node_modules/@angular/cdk/fesm2015/scrolling.js");
    /* harmony import */


    var primeng_tooltip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! primeng/tooltip */
    "./node_modules/primeng/fesm2015/primeng-tooltip.js");
    /* harmony import */


    var primeng_dropdown__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! primeng/dropdown */
    "./node_modules/primeng/fesm2015/primeng-dropdown.js");
    /* harmony import */


    var primeng_accordion__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! primeng/accordion */
    "./node_modules/primeng/fesm2015/primeng-accordion.js");
    /* harmony import */


    var primeng_paginator__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! primeng/paginator */
    "./node_modules/primeng/fesm2015/primeng-paginator.js");
    /* harmony import */


    var primeng_table__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! primeng/table */
    "./node_modules/primeng/fesm2015/primeng-table.js");
    /* harmony import */


    var primeng_inputswitch__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! primeng/inputswitch */
    "./node_modules/primeng/fesm2015/primeng-inputswitch.js");
    /* harmony import */


    var primeng_toast__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! primeng/toast */
    "./node_modules/primeng/fesm2015/primeng-toast.js");
    /* harmony import */


    var primeng_messages__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! primeng/messages */
    "./node_modules/primeng/fesm2015/primeng-messages.js");
    /* harmony import */


    var primeng_message__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! primeng/message */
    "./node_modules/primeng/fesm2015/primeng-message.js");
    /* harmony import */


    var primeng_toolbar__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! primeng/toolbar */
    "./node_modules/primeng/fesm2015/primeng-toolbar.js");
    /* harmony import */


    var primeng_panel__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! primeng/panel */
    "./node_modules/primeng/fesm2015/primeng-panel.js");
    /* harmony import */


    var primeng_checkbox__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! primeng/checkbox */
    "./node_modules/primeng/fesm2015/primeng-checkbox.js");
    /* harmony import */


    var primeng_fullcalendar__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! primeng/fullcalendar */
    "./node_modules/primeng/fesm2015/primeng-fullcalendar.js");
    /* harmony import */


    var primeng_button__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! primeng/button */
    "./node_modules/primeng/fesm2015/primeng-button.js");
    /* harmony import */


    var primeng_calendar__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! primeng/calendar */
    "./node_modules/primeng/fesm2015/primeng-calendar.js");
    /* harmony import */


    var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! @ngx-translate/core */
    "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
    /* harmony import */


    var primeng_inputtext__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! primeng/inputtext */
    "./node_modules/primeng/fesm2015/primeng-inputtext.js");
    /* harmony import */


    var primeng_autocomplete__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! primeng/autocomplete */
    "./node_modules/primeng/fesm2015/primeng-autocomplete.js");
    /* harmony import */


    var primeng_card__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! primeng/card */
    "./node_modules/primeng/fesm2015/primeng-card.js");
    /* harmony import */


    var primeng_splitbutton__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! primeng/splitbutton */
    "./node_modules/primeng/fesm2015/primeng-splitbutton.js");
    /* harmony import */


    var primeng_selectbutton__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! primeng/selectbutton */
    "./node_modules/primeng/fesm2015/primeng-selectbutton.js");
    /* harmony import */


    var primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! primeng/confirmdialog */
    "./node_modules/primeng/fesm2015/primeng-confirmdialog.js");
    /* harmony import */


    var primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! primeng/dynamicdialog */
    "./node_modules/primeng/fesm2015/primeng-dynamicdialog.js");
    /* harmony import */


    var primeng_focustrap__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
    /*! primeng/focustrap */
    "./node_modules/primeng/fesm2015/primeng-focustrap.js");
    /* harmony import */


    var primeng_dialog__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
    /*! primeng/dialog */
    "./node_modules/primeng/fesm2015/primeng-dialog.js");
    /* harmony import */


    var primeng_virtualscroller__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
    /*! primeng/virtualscroller */
    "./node_modules/primeng/fesm2015/primeng-virtualscroller.js");
    /* harmony import */


    var primeng_carousel__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
    /*! primeng/carousel */
    "./node_modules/primeng/fesm2015/primeng-carousel.js");
    /* harmony import */


    var primeng_dataview__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
    /*! primeng/dataview */
    "./node_modules/primeng/fesm2015/primeng-dataview.js");
    /* harmony import */


    var ngx_dropzone__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
    /*! ngx-dropzone */
    "./node_modules/ngx-dropzone/fesm2015/ngx-dropzone.js");
    /* harmony import */


    var _layout_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
    /*! ./layout.component */
    "./src/app/pages/layout/layout.component.ts");
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */


    var LayoutModuleNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcmf"](_layout_module__WEBPACK_IMPORTED_MODULE_1__["LayoutModule"], [], function (_l) {
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmod"]([_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵCodegenComponentFactoryResolver"], [[8, [_node_modules_angular_router_router_ngfactory__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_router_router_lNgFactory"], _layout_component_ngfactory__WEBPACK_IMPORTED_MODULE_3__["LayoutComponentNgFactory"], _node_modules_primeng_dynamicdialog_primeng_dynamicdialog_ngfactory__WEBPACK_IMPORTED_MODULE_4__["DynamicDialogComponentNgFactory"]]], [3, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleRef"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgLocalization"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgLocaleLocalization"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ɵangular_packages_forms_forms_n"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ɵangular_packages_forms_forms_n"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _services_app_menu_service__WEBPACK_IMPORTED_MODULE_7__["MenuService"], _services_app_menu_service__WEBPACK_IMPORTED_MODULE_7__["MenuService"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _services_breadcrumb_service__WEBPACK_IMPORTED_MODULE_8__["BreadcrumbService"], _services_breadcrumb_service__WEBPACK_IMPORTED_MODULE_8__["BreadcrumbService"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_common__WEBPACK_IMPORTED_MODULE_5__["CommonModule"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["CommonModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_router__WEBPACK_IMPORTED_MODULE_9__["RouterModule"], _angular_router__WEBPACK_IMPORTED_MODULE_9__["RouterModule"], [[2, _angular_router__WEBPACK_IMPORTED_MODULE_9__["ɵangular_packages_router_router_a"]], [2, _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["LayoutRoutingModule"], _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["LayoutRoutingModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_api__WEBPACK_IMPORTED_MODULE_11__["SharedModule"], primeng_api__WEBPACK_IMPORTED_MODULE_11__["SharedModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_12__["BidiModule"], _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_12__["BidiModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_13__["PlatformModule"], _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_13__["PlatformModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_14__["CdkScrollableModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_14__["CdkScrollableModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_14__["ScrollingModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_14__["ScrollingModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_tooltip__WEBPACK_IMPORTED_MODULE_15__["TooltipModule"], primeng_tooltip__WEBPACK_IMPORTED_MODULE_15__["TooltipModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_dropdown__WEBPACK_IMPORTED_MODULE_16__["DropdownModule"], primeng_dropdown__WEBPACK_IMPORTED_MODULE_16__["DropdownModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_accordion__WEBPACK_IMPORTED_MODULE_17__["AccordionModule"], primeng_accordion__WEBPACK_IMPORTED_MODULE_17__["AccordionModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ɵangular_packages_forms_forms_d"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ɵangular_packages_forms_forms_d"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_paginator__WEBPACK_IMPORTED_MODULE_18__["PaginatorModule"], primeng_paginator__WEBPACK_IMPORTED_MODULE_18__["PaginatorModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_table__WEBPACK_IMPORTED_MODULE_19__["TableModule"], primeng_table__WEBPACK_IMPORTED_MODULE_19__["TableModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_inputswitch__WEBPACK_IMPORTED_MODULE_20__["InputSwitchModule"], primeng_inputswitch__WEBPACK_IMPORTED_MODULE_20__["InputSwitchModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_toast__WEBPACK_IMPORTED_MODULE_21__["ToastModule"], primeng_toast__WEBPACK_IMPORTED_MODULE_21__["ToastModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_messages__WEBPACK_IMPORTED_MODULE_22__["MessagesModule"], primeng_messages__WEBPACK_IMPORTED_MODULE_22__["MessagesModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_message__WEBPACK_IMPORTED_MODULE_23__["MessageModule"], primeng_message__WEBPACK_IMPORTED_MODULE_23__["MessageModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_toolbar__WEBPACK_IMPORTED_MODULE_24__["ToolbarModule"], primeng_toolbar__WEBPACK_IMPORTED_MODULE_24__["ToolbarModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_panel__WEBPACK_IMPORTED_MODULE_25__["PanelModule"], primeng_panel__WEBPACK_IMPORTED_MODULE_25__["PanelModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_checkbox__WEBPACK_IMPORTED_MODULE_26__["CheckboxModule"], primeng_checkbox__WEBPACK_IMPORTED_MODULE_26__["CheckboxModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_fullcalendar__WEBPACK_IMPORTED_MODULE_27__["FullCalendarModule"], primeng_fullcalendar__WEBPACK_IMPORTED_MODULE_27__["FullCalendarModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_button__WEBPACK_IMPORTED_MODULE_28__["ButtonModule"], primeng_button__WEBPACK_IMPORTED_MODULE_28__["ButtonModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_calendar__WEBPACK_IMPORTED_MODULE_29__["CalendarModule"], primeng_calendar__WEBPACK_IMPORTED_MODULE_29__["CalendarModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_30__["TranslateModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_30__["TranslateModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_inputtext__WEBPACK_IMPORTED_MODULE_31__["InputTextModule"], primeng_inputtext__WEBPACK_IMPORTED_MODULE_31__["InputTextModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ReactiveFormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ReactiveFormsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_autocomplete__WEBPACK_IMPORTED_MODULE_32__["AutoCompleteModule"], primeng_autocomplete__WEBPACK_IMPORTED_MODULE_32__["AutoCompleteModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_card__WEBPACK_IMPORTED_MODULE_33__["CardModule"], primeng_card__WEBPACK_IMPORTED_MODULE_33__["CardModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_splitbutton__WEBPACK_IMPORTED_MODULE_34__["SplitButtonModule"], primeng_splitbutton__WEBPACK_IMPORTED_MODULE_34__["SplitButtonModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_selectbutton__WEBPACK_IMPORTED_MODULE_35__["SelectButtonModule"], primeng_selectbutton__WEBPACK_IMPORTED_MODULE_35__["SelectButtonModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_36__["ConfirmDialogModule"], primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_36__["ConfirmDialogModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_37__["DynamicDialogModule"], primeng_dynamicdialog__WEBPACK_IMPORTED_MODULE_37__["DynamicDialogModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_focustrap__WEBPACK_IMPORTED_MODULE_38__["FocusTrapModule"], primeng_focustrap__WEBPACK_IMPORTED_MODULE_38__["FocusTrapModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_dialog__WEBPACK_IMPORTED_MODULE_39__["DialogModule"], primeng_dialog__WEBPACK_IMPORTED_MODULE_39__["DialogModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_virtualscroller__WEBPACK_IMPORTED_MODULE_40__["VirtualScrollerModule"], primeng_virtualscroller__WEBPACK_IMPORTED_MODULE_40__["VirtualScrollerModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_carousel__WEBPACK_IMPORTED_MODULE_41__["CarouselModule"], primeng_carousel__WEBPACK_IMPORTED_MODULE_41__["CarouselModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, primeng_dataview__WEBPACK_IMPORTED_MODULE_42__["DataViewModule"], primeng_dataview__WEBPACK_IMPORTED_MODULE_42__["DataViewModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, ngx_dropzone__WEBPACK_IMPORTED_MODULE_43__["NgxDropzoneModule"], ngx_dropzone__WEBPACK_IMPORTED_MODULE_43__["NgxDropzoneModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _layout_module__WEBPACK_IMPORTED_MODULE_1__["LayoutModule"], _layout_module__WEBPACK_IMPORTED_MODULE_1__["LayoutModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _angular_router__WEBPACK_IMPORTED_MODULE_9__["ROUTES"], function () {
        return [[{
          path: "",
          component: _layout_component__WEBPACK_IMPORTED_MODULE_44__["LayoutComponent"],
          children: [{
            path: "",
            redirectTo: "dashboard",
            pathMatch: "prefix"
          }, {
            path: "dashboard",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ0"]
          }, {
            path: "clientes",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ1"]
          }, {
            path: "flores",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ2"]
          }, {
            path: "fincas",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ3"]
          }, {
            path: "factura",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ4"]
          }, {
            path: "miperfil",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ5"]
          }, {
            path: "edit",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ6"]
          }, {
            path: "editFlower",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ7"]
          }, {
            path: "editFinca",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ8"]
          }, {
            path: "prealerta",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ9"]
          }, {
            path: "delivery",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ10"]
          }, {
            path: "editDelivery",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ11"]
          }, {
            path: "marcas",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ12"]
          }, {
            path: "editMarca",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ13"]
          }, {
            path: "balance",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ14"]
          }, {
            path: "documento",
            loadChildren: _layout_routing_module__WEBPACK_IMPORTED_MODULE_10__["ɵ15"]
          }]
        }]];
      }, [])]);
    });
    /***/

  },

  /***/
  "./src/app/pages/layout/layout.module.ts":
  /*!***********************************************!*\
    !*** ./src/app/pages/layout/layout.module.ts ***!
    \***********************************************/

  /*! exports provided: LayoutModule */

  /***/
  function srcAppPagesLayoutLayoutModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LayoutModule", function () {
      return LayoutModule;
    });

    var LayoutModule = function LayoutModule() {
      _classCallCheck(this, LayoutModule);
    };
    /***/

  },

  /***/
  "./src/services/app.menu.service.ts":
  /*!******************************************!*\
    !*** ./src/services/app.menu.service.ts ***!
    \******************************************/

  /*! exports provided: MenuService */

  /***/
  function srcServicesAppMenuServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MenuService", function () {
      return MenuService;
    });
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");

    var MenuService =
    /*#__PURE__*/
    function () {
      function MenuService() {
        _classCallCheck(this, MenuService);

        this.menuSource = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        this.resetSource = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        this.menuSource$ = this.menuSource.asObservable();
        this.resetSource$ = this.resetSource.asObservable();
      }

      _createClass(MenuService, [{
        key: "onMenuStateChange",
        value: function onMenuStateChange(key) {
          console.log('Change estado');
          console.log(key);
          console.log('HOla');
          this.menuSource.next(key);
        }
      }, {
        key: "reset",
        value: function reset() {
          console.log('RESET');
          this.resetSource.next();
        }
      }]);

      return MenuService;
    }();
    /***/

  }
}]);
//# sourceMappingURL=pages-layout-layout-module-ngfactory-es5.js.map