{"version":3,"sources":["webpack:///node_modules/primeng/api/primeng-api.d.ts.Header.html","webpack:///node_modules/primeng/api/primeng-api.d.ts.Footer.html","webpack:///node_modules/primeng/confirmdialog/primeng-confirmdialog.d.ts.ConfirmDialog.html","webpack:///src/app/pages/layout/report/automatic/automatic-routing.module.ts","webpack:///src/app/pages/layout/report/automatic/automatic.component.html","webpack:///src/app/pages/layout/report/automatic/automatic.component.ts","webpack:///src/app/pages/layout/report/automatic/automatic.module.ts"],"names":["routes","path","component","AutomaticRoutingModule","AutomaticComponent","utilService","api","router","confirmationService","spinner","users","files","records","$event","text","srcElement","isValidCSVFile","push","input","target","reader","FileReader","readAsText","isLoading","next","onload","csvData","result","csvRecordsArray","split","getHeaderArray","headersRow","getDataRecordsArrayFromCSVFile","length","onerror","console","log","alert","fileReset","headerLength","csvArr","i","data","user","dni","nombres","apellidos","fechregi","getFormatDate","Date","celular","photo","email","nick","estado","file","name","endsWith","csvRecordsArr","headers","headerArray","j","csvReader","nativeElement","value","confirm","message","accept","show","registerusers","localStorage","getItem","then","catch","err","error","code","clear","navigate","index","splice","date","format","AutomaticModule"],"mappings":"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","file":"report-automatic-automatic-module-ngfactory-es5.js","sourcesContent":["<ng-content></ng-content>","<ng-content></ng-content>","\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\n            <div [ngClass]=\"{'ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow':true,'ui-dialog-rtl':rtl}\" [ngStyle]=\"style\" [class]=\"styleClass\" (mousedown)=\"moveOnTop()\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" *ngIf=\"visible\">\n                <div class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\">\n                    <span class=\"ui-dialog-title\" *ngIf=\"option('header')\">{{option('header')}}</span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                            <span class=\"pi pi-times\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class=\"ui-dialog-content ui-widget-content\">\n                    <i [ngClass]=\"'ui-confirmdialog-icon'\" [class]=\"option('icon')\" *ngIf=\"option('icon')\"></i>\n                    <span class=\"ui-confirmdialog-message\" [innerHTML]=\"option('message')\"></span>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footer\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"!footer\">\n                    <button type=\"button\" pButton [icon]=\"option('acceptIcon')\" [label]=\"option('acceptLabel')\" (click)=\"accept()\" [ngClass]=\"'ui-confirmdialog-acceptbutton'\" [class]=\"option('acceptButtonStyleClass')\" *ngIf=\"option('acceptVisible')\"></button>\n                    <button type=\"button\" pButton [icon]=\"option('rejectIcon')\" [label]=\"option('rejectLabel')\" (click)=\"reject()\" [ngClass]=\"'ui-confirmdialog-rejectbutton'\" [class]=\"option('rejectButtonStyleClass')\" *ngIf=\"option('rejectVisible')\"></button>\n                </div>\n            </div>\n        </div>\n    ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AutomaticComponent } from './automatic.component';\n\n\nconst routes: Routes = [\n    {\n        path: '', component: AutomaticComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AutomaticRoutingModule {}\n","<div class=\"ui-g\">\n    <div class=\"ui-g-12\">\n        <div class=\"card card-w-title\">\n            <p-toast></p-toast>\n            <h1>Carga de archivo automatico</h1>\n            <div class=\"uploadfilecontainer\" (click)=\"fileInput.click()\" appDragdrop *ngIf=\"files.length <= 0\"\n                (onFileDropped)=\"uploadListener($event)\">\n                <input hidden type=\"file\" #fileInput (change)=\"uploadListener($event)\" accept=\".csv\">\n            </div>\n            <div class=\"files-list\" *ngFor=\"let file of files;let i= index\">\n                <p> {{ file.name }} </p>\n                <button class=\"delete-file\" (click)=\"deleteAttachment(i)\">\n                    <img src=\"../../../../assets/images/recicler.jpeg\">\n                </button>\n            </div>\n            <p-table [value]=\"users\" class=\"p-datatable-responsive-demo\">\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"p-d-flex p-ai-center p-jc-between\">\n                        Usuarios cargados {{users.length}}\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th>Identificación</th>\n                        <th>Nombres</th>\n                        <th>Apellidos</th>\n                        <th>Celular</th>\n                        <th>Email</th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-rowData let-item>\n                    <tr style=\"background-color: white;\">\n                        <td><span class=\"p-column-title\">{{item.dni }}</span></td>\n                        <td><span class=\"p-column-title\">{{item.nombres}}</span></td>\n                        <td><span class=\"p-column-title\">{{item.apellidos }}</span></td>\n                        <td><span class=\"p-column-title\">{{item.celular }}</span></td>\n                        <td><span class=\"p-column-title\">{{item.email}}</span></td>\n                    </tr>\n                </ng-template>\n            </p-table>\n            <br>\n            <div class=\"ui-g form-group ui-fluid\">\n                <div class=\"ui-grid-col-10\"></div>\n                <div class=\"ui-grid-col-2\">\n                    <button pButton type=\"button\" icon=\"pi pi-upload\" class=\"ui-button-help btn_enviar\"\n                        [disabled]=\"files.length <= 0\" (click)=\"uploadfile()\" label=\"Subir\"></button>\n                </div>\n            </div>\n            <!--Confirmar cuadro de dialogo confirm-->\n            <p-confirmDialog #cd header=\"Confirmación\" icon=\"pi pi-exclamation-triangle\">\n                <p-footer>\n                    <button type=\"button\" pButton icon=\"pi pi-times\" class=\"ui-button-danger\" label=\"No\"\n                        (click)=\"cd.reject()\"></button>\n                    <button type=\"button\" pButton icon=\"pi pi-check\" class=\"ui-button-success\"\n                        label=\"Si\" (click)=\"cd.accept()\"></button>\n                </p-footer>\n            </p-confirmDialog>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MessageService, ConfirmationService } from 'primeng';\nimport * as moment from 'moment';\nimport { UtilService } from 'src/services/util.service';\nimport { ApisService } from 'src/services/apis.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\nexport interface user {\n  dni: string;\n  nombres: string;\n  apellidos: string;\n  fechregi: string;\n  celular: string;\n  photo: string;\n  email: string; \n  nick: string;\n  estado: string;\n}\n@Component({\n  selector: 'app-automatic',\n  templateUrl: './automatic.component.html',\n  styleUrls: ['./automatic.component.css'],\n  providers: [MessageService, ConfirmationService]\n})\nexport class AutomaticComponent implements OnInit {\n\n  users: Array<user> = [];\n  files: any = [];\n  @ViewChild('csvReader') csvReader: any;\n  public records: any[] = [];\n\n  constructor(private utilService: UtilService, private api: ApisService,\n    private router: Router, private confirmationService: ConfirmationService, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n\n  }\n\n\n\n  uploadListener($event: any): void {\n\n    let text = [];\n    let files = $event.srcElement.files;\n\n    if (this.isValidCSVFile(files[0])) {\n      this.files.push(files[0]);\n      let input = $event.target;\n      let reader = new FileReader();\n      reader.readAsText(input.files[0]);\n      this.utilService.isLoading.next(true);\n      reader.onload = async () => {\n        let csvData = reader.result;\n        let csvRecordsArray = (<string>csvData).split(/\\r\\n|\\n/);\n        let headersRow = await this.getHeaderArray(csvRecordsArray);\n        this.records = await this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length);\n      };\n      this.utilService.isLoading.next(false);\n      reader.onerror = function () {\n        console.log('error is occured while reading file!');\n      };\n\n    } else {\n      alert(\"Please import valid .csv file.\");\n      this.fileReset();\n    }\n  }\n\n  getDataRecordsArrayFromCSVFile(csvRecordsArray: any, headerLength: any) {\n    let csvArr = [];\n    for (let i = 1; i < csvRecordsArray.length; i++) {\n      console.log(csvRecordsArray[i]);\n      let data: any[] = (<string>csvRecordsArray[i]).split(';');\n      let user = {\n        dni: data[0],\n        nombres: data[1],\n        apellidos: data[2],\n        fechregi: this.getFormatDate(new Date()),\n        celular: data[3],\n        photo: null,\n        email: data[4],        \n        nick: data[5],\n        estado: \"-\"\n      }\n\n      this.users.push(user);\n    }\n\n    console.log('LISTA D EUSUARIOS');\n    console.log(this.users);\n    return csvArr;\n  }\n\n  isValidCSVFile(file: any) {\n    return file.name.endsWith(\".csv\");\n  }\n\n  getHeaderArray(csvRecordsArr: any) {\n    let headers = (<string>csvRecordsArr[0]).split(',');\n    let headerArray = [];\n    for (let j = 0; j < headers.length; j++) {\n      console.log('DATA');\n      console.log(headers[j]);\n\n      headerArray.push(headers[j]);\n    }\n    return headerArray;\n  }\n\n  fileReset() {\n    this.csvReader.nativeElement.value = \"\";\n    this.records = [];\n  }\n\n  uploadfile() {\n    console.log('Subiendo los archivos');\n    console.log(this.users); \n    this.confirmationService.confirm({\n      message: \"Está seguro de enviar la información?\",\n      accept: async () => {\n        this.spinner.show();\n        this.api.registerusers(this.users, localStorage.getItem(\"token\")).then(data => {\n          console.log(data);\n        }).catch(err => {\n          console.log('ERROR');\n          console.log(err);\n          if (err.error.code == 401) {\n            localStorage.clear();\n            this.router.navigate(['/login']);\n          }\n        })\n      },\n    });\n\n  }\n\n  deleteAttachment(index) {\n    this.files.splice(index, 1);\n    this.users = [];\n  }\n\n  getFormatDate(date: Date): string {\n    return (moment(date)).format('YYYY-MM-DD HH:mm:ss.SSS');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutomaticRoutingModule } from './automatic-routing.module';\nimport { AutomaticComponent } from './automatic.component';\nimport { ToastModule, TableModule, ButtonModule, DialogModule, ConfirmDialogModule } from 'primeng';\nimport { SharedModule } from 'src/app/shared.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n\n@NgModule({\n  declarations: [AutomaticComponent],\n  imports: [\n    CommonModule,\n    AutomaticRoutingModule,\n    ToastModule,\n    SharedModule,\n    NgxSpinnerModule,   \n    TableModule,\n    ButtonModule,\n    DialogModule,\n    ConfirmDialogModule\n  ]\n})  \nexport class AutomaticModule { }\n"]}